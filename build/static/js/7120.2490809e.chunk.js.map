{"version":3,"file":"static/js/7120.2490809e.chunk.js","mappings":"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","sources":["pages/Banco/CreateBanco.js","sections/@dashboard/banco/BancoNewEditForm.js"],"sourcesContent":["\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n// @mui\nimport { Button, Container, Typography } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Iconify from '../../components/iconify/Iconify';\nimport { useSettingsContext } from '../../components/settings';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport BancoNewEditForm from '../../sections/@dashboard/banco/BancoNewEditForm';\n\n// ----------------------------------------------------------------------\n\nexport default function BancoCreatePage() {\n  const { themeStretch } = useSettingsContext();\n\n  return (\n    <>\n      <Helmet>\n        <title>Banco</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading={\n            <>Registrar banco</>\n          }\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Banco',\n              href: PATH_DASHBOARD.banco.list,\n            },\n            { name: 'Registrar Banco' },\n          ]}\n          action={<Button component={RouterLink}\n            to={PATH_DASHBOARD.banco.list}\n            variant=\"contained\"\n            startIcon={<Iconify icon=\"ic:round-arrow-back\" />}\n          >\n            Regresar\n          </Button>}\n        />\n        <BancoNewEditForm />\n      </Container>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm} from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack} from '@mui/material';\n// utils\n// import { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// assets\n// import { countries } from '../../../assets/data';\n// components\n// import Label from '../../../components/label';\nimport { useSnackbar } from '../../../components/snackbar';\nimport FormProvider, {\n  RHFCheckbox,\n  RHFTextField,\n} from '../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nBancoNewEditForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentBanco: PropTypes.object,\n};\n\nexport default function BancoNewEditForm({ isEdit = false, currentBanco }) {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewBancoSchema = Yup.object().shape({\n    bankName: Yup\n    .string()\n    .required('Ingrese nombre del banco'),\n    digit: Yup\n    .string()\n    .required('Ingrese dígitos'),\n    idSap: Yup\n    .string()\n    .required('Ingrese id de banco')\n    .matches(/[0-9]|\\./, \n    \"Ingresa un número válido\"\n    ),\n    // orders: Yup.string().required('Ingrese correo electrónico'),\n    // businessParthner: Yup.string().required('Ingresé número de teléfono'),\n  });\n  const handleKeyPressNumber= (e) =>{ \n    const key = e.key;\n    const regex = /[0-9]|\\./;\n    if( !regex.test(key) ) {\n        e.preventDefault();\n    }\n    else {\n        console.log( \"You pressed a key: \".key );\n    }\n};\n  const defaultValues = useMemo(\n    () => ({\n      bankName: currentBanco?.bankName || '',\n      digit: currentBanco?.digit || '',\n      idSap: currentBanco?.idSap || '',\n      orders: currentBanco?.orders || '',\n      businessParthner: currentBanco?.businessParthner || '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentBanco]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewBancoSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    // watch,\n    // setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  // const values = watch();\n\n  useEffect(() => {\n    if (isEdit && currentBanco) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentBanco]);\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar(!isEdit ? '¡Su banco fue registrado!' : '¡Sus cambios fueron actualizados!');\n      navigate(PATH_DASHBOARD.banco.list);\n      console.log('DATA', data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n \n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              rowGap={3}\n              columnGap={3}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(1, 1fr)',\n                sm: 'repeat(3, 1fr)',\n              }}\n            >\n              <RHFTextField name=\"bankName\" label=\"Nombre del banco\" />\n              <RHFTextField name=\"digit\" label=\"Dígitos\" />\n              <RHFTextField name=\"idSap\" label=\"Id banco SAP\"  onKeyPress={(e) => handleKeyPressNumber(e)}/>\n              <RHFCheckbox name=\"orders\" label=\"Visible para pedidos\" sx={{ mt: 3 }} />\n              <RHFCheckbox name=\"businessParthner\" label=\"¿Es socio de negocios?\" sx={{ mt: 3 }} />\n            </Box>\n\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {!isEdit ? 'Registrar Banco' : 'Guardar Cambios'}\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n"],"names":["BancoCreatePage","themeStretch","useSettingsContext","maxWidth","heading","links","name","href","PATH_DASHBOARD","action","component","RouterLink","to","variant","startIcon","icon","BancoNewEditForm","isEdit","currentBanco","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewBancoSchema","Yup","shape","bankName","required","digit","idSap","matches","defaultValues","useMemo","orders","businessParthner","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","formState","useEffect","onSubmit","data","Promise","resolve","setTimeout","console","log","error","container","spacing","item","xs","md","sx","p","rowGap","columnGap","display","gridTemplateColumns","sm","label","onKeyPress","e","key","test","preventDefault","handleKeyPressNumber","mt","alignItems","type","loading"],"sourceRoot":""}