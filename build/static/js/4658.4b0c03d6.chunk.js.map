{"version":3,"file":"static/js/4658.4b0c03d6.chunk.js","mappings":"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","sources":["pages/PaymentPage.js","sections/payment/PaymentNewCardDialog.js","sections/payment/PaymentMethods.js","sections/payment/PaymentSummary.js","sections/payment/PaymentBillingAddress.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Grid, Container, Typography } from '@mui/material';\n// hooks\nimport useResponsive from '../hooks/useResponsive';\n// sections\nimport { PaymentSummary, PaymentMethods, PaymentBillingAddress } from '../sections/payment';\n\n// ----------------------------------------------------------------------\n\nexport default function PaymentPage() {\n  const isDesktop = useResponsive('up', 'md');\n\n  return (\n    <>\n      <Helmet>\n        <title> Payment | Minimal UI</title>\n      </Helmet>\n\n      <Container\n        sx={{\n          pt: 15,\n          pb: 10,\n          minHeight: 1,\n        }}\n      >\n        <Typography variant=\"h3\" align=\"center\" paragraph>\n          {`Let's finish powering you up!`}\n        </Typography>\n\n        <Typography align=\"center\" sx={{ color: 'text.secondary', mb: 5 }}>\n          Professional plan is right for you.\n        </Typography>\n\n        <Grid container spacing={isDesktop ? 3 : 5}>\n          <Grid item xs={12} md={8}>\n            <Box\n              gap={5}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(1, 1fr)',\n                md: 'repeat(2, 1fr)',\n              }}\n              sx={{\n                p: { md: 5 },\n                borderRadius: 2,\n                border: (theme) => ({\n                  md: `dashed 1px ${theme.palette.divider}`,\n                }),\n              }}\n            >\n              <PaymentBillingAddress />\n\n              <PaymentMethods />\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <PaymentSummary />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Button,\n  Dialog,\n  TextField,\n  IconButton,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  InputAdornment,\n} from '@mui/material';\n// components\nimport Iconify from '../../components/iconify';\nimport MenuPopover from '../../components/menu-popover';\n\n// ----------------------------------------------------------------------\n\nPaymentNewCardDialog.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default function PaymentNewCardDialog({ onClose, ...other }) {\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <Dialog maxWidth=\"xs\" onClose={onClose} {...other}>\n        <DialogTitle> Add new card </DialogTitle>\n\n        <DialogContent sx={{ overflow: 'unset' }}>\n          <Stack spacing={3}>\n            <TextField fullWidth label=\"Name on card\" />\n\n            <TextField fullWidth label=\"Card number\" />\n\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n              <TextField label=\"MM/YY\" />\n\n              <TextField\n                label=\"CVV\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton size=\"small\" edge=\"end\" onClick={handleOpenPopover}>\n                        <Iconify icon=\"eva:info-fill\" />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Stack>\n          </Stack>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"inherit\" variant=\"outlined\" onClick={onClose}>\n            Cancel\n          </Button>\n\n          <Button variant=\"contained\" onClick={onClose}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"bottom-center\"\n        sx={{ maxWidth: 200, typography: 'body2', textAlign: 'center' }}\n      >\n        Three-digit number on the back of your VISA card\n      </MenuPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Stack,\n  Paper,\n  Radio,\n  Button,\n  TextField,\n  Typography,\n  RadioGroup,\n  FormControlLabel,\n} from '@mui/material';\n// components\nimport Iconify from '../../components/iconify';\n//\nimport PaymentNewCardDialog from './PaymentNewCardDialog';\n\n// ----------------------------------------------------------------------\n\nconst PAYMENT_OPTIONS = [\n  {\n    value: 'paypal',\n    title: 'Paypal',\n    icons: ['/assets/icons/payments/ic_paypal.svg'],\n  },\n  {\n    value: 'credit_card',\n    title: 'Credit / Debit Card',\n    icons: ['/assets/icons/payments/ic_mastercard.svg', '/assets/icons/payments/ic_visa.svg'],\n  },\n];\nconst CARD_OPTIONS = [\n  {\n    value: 'visa1',\n    label: '**** **** **** 1212 - Jimmy Holland',\n  },\n  {\n    value: 'visa2',\n    label: '**** **** **** 2424 - Shawn Stokes',\n  },\n  {\n    value: 'mastercard',\n    label: '**** **** **** 4545 - Cole Armstrong',\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function PaymentMethods() {\n  const [method, setMethod] = useState('paypal');\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeMethod = (event) => {\n    setMethod(event.target.value);\n  };\n\n  return (\n    <>\n      <Stack spacing={5}>\n        <Typography variant=\"h6\">Payment Method</Typography>\n\n        <RadioGroup value={method} onChange={handleChangeMethod}>\n          <Stack spacing={3}>\n            {PAYMENT_OPTIONS.map((option) => (\n              <PaymentOption\n                key={option.title}\n                option={option}\n                isSelected={method === option.value}\n                hasChild={option.value === 'credit_card'}\n                isCreditMethod={option.value === 'credit_card' && method === 'credit_card'}\n                onOpen={handleOpen}\n              />\n            ))}\n          </Stack>\n        </RadioGroup>\n      </Stack>\n\n      <PaymentNewCardDialog open={open} onClose={handleClose} />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nPaymentOption.propTypes = {\n  onOpen: PropTypes.func,\n  hasChild: PropTypes.bool,\n  option: PropTypes.object,\n  isSelected: PropTypes.bool,\n  isCreditMethod: PropTypes.bool,\n};\n\nfunction PaymentOption({ option, hasChild, isSelected, isCreditMethod, onOpen }) {\n  const { value, title, icons } = option;\n\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        transition: (theme) => theme.transitions.create('all'),\n        ...(hasChild && {\n          flexWrap: 'wrap',\n        }),\n        ...(isSelected && {\n          boxShadow: (theme) => theme.customShadows.z20,\n        }),\n      }}\n    >\n      <FormControlLabel\n        value={value}\n        control={<Radio checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />} />}\n        label={title}\n        sx={{ py: 2, pl: 2.5, flexGrow: 1, mr: 0 }}\n      />\n\n      <Stack\n        spacing={1}\n        direction=\"row\"\n        alignItems=\"center\"\n        sx={{ position: 'absolute', right: 20, top: 24 }}\n      >\n        {icons.map((icon) => (\n          <Box component=\"img\" key={icon} src={icon} />\n        ))}\n      </Stack>\n\n      {isCreditMethod && (\n        <Stack\n          alignItems=\"flex-start\"\n          sx={{\n            px: 3,\n            width: 1,\n          }}\n        >\n          <TextField\n            select\n            fullWidth\n            label=\"Card\"\n            SelectProps={{\n              native: true,\n            }}\n          >\n            {CARD_OPTIONS.map((card) => (\n              <option key={card.value} value={card.value}>\n                {card.label}\n              </option>\n            ))}\n          </TextField>\n\n          <Button\n            size=\"small\"\n            startIcon={<Iconify icon=\"eva:plus-fill\" />}\n            onClick={onOpen}\n            sx={{ my: 3 }}\n          >\n            Add new card\n          </Button>\n        </Stack>\n      )}\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Switch, Divider, Typography, Stack, Box } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// components\nimport Label from '../../components/label';\nimport Iconify from '../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nPaymentSummary.propTypes = {\n  sx: PropTypes.object,\n};\n\nexport default function PaymentSummary({ sx, ...other }) {\n  return (\n    <Box\n      sx={{\n        p: 5,\n        borderRadius: 2,\n        bgcolor: 'background.neutral',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Typography variant=\"h6\" sx={{ mb: 5 }}>\n        Summary\n      </Typography>\n\n      <Stack spacing={2.5}>\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Subscription\n          </Typography>\n\n          <Label color=\"error\">PREMIUM</Label>\n        </Stack>\n\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Billed Monthly\n          </Typography>\n          <Switch defaultChecked />\n        </Stack>\n\n        <Stack spacing={1} direction=\"row\" justifyContent=\"flex-end\">\n          <Typography variant=\"h5\">$</Typography>\n\n          <Typography variant=\"h2\">9.99</Typography>\n\n          <Typography component=\"span\" sx={{ mb: 1, alignSelf: 'center', color: 'text.secondary' }}>\n            /mo\n          </Typography>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h6\">Total Billed</Typography>\n\n          <Typography variant=\"h6\">$9.99*</Typography>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n      </Stack>\n\n      <Typography component=\"div\" variant=\"caption\" sx={{ color: 'text.secondary', mt: 1 }}>\n        * Plus applicable taxes\n      </Typography>\n\n      <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" sx={{ mt: 5, mb: 3 }}>\n        Upgrade My Plan\n      </LoadingButton>\n\n      <Stack alignItems=\"center\" spacing={1}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Iconify icon=\"eva:shield-fill\" sx={{ color: 'primary.main' }} />\n          <Typography variant=\"subtitle2\">Secure credit card payment</Typography>\n        </Stack>\n\n        <Typography variant=\"caption\" sx={{ color: 'text.secondary', textAlign: 'center' }}>\n          This is a secure 128-bit SSL encrypted payment\n        </Typography>\n      </Stack>\n    </Box>\n  );\n}\n","// @mui\nimport { Typography, TextField, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function PaymentBillingAddress() {\n  return (\n    <div>\n      <Typography variant=\"h6\">Billing Address</Typography>\n\n      <Stack spacing={3} mt={5}>\n        <TextField fullWidth label=\"Person name\" />\n        <TextField fullWidth label=\"Phone number\" />\n        <TextField fullWidth label=\"Email\" />\n        <TextField fullWidth label=\"Address\" />\n      </Stack>\n    </div>\n  );\n}\n"],"names":["PaymentPage","isDesktop","useResponsive","sx","pt","pb","minHeight","variant","align","paragraph","color","mb","container","spacing","item","xs","md","gap","display","gridTemplateColumns","p","borderRadius","border","theme","palette","divider","PaymentNewCardDialog","onClose","other","useState","openPopover","setOpenPopover","Dialog","maxWidth","DialogTitle","DialogContent","overflow","Stack","TextField","fullWidth","label","direction","sm","InputProps","endAdornment","InputAdornment","position","IconButton","size","edge","onClick","event","currentTarget","icon","DialogActions","Button","open","arrow","typography","textAlign","PAYMENT_OPTIONS","value","title","icons","CARD_OPTIONS","PaymentMethods","method","setMethod","setOpen","handleOpen","Typography","RadioGroup","onChange","target","map","option","PaymentOption","isSelected","hasChild","isCreditMethod","onOpen","Paper","alignItems","transition","transitions","create","flexWrap","boxShadow","customShadows","z20","FormControlLabel","control","Radio","checkedIcon","py","pl","flexGrow","mr","right","top","Box","component","src","px","width","select","SelectProps","native","card","startIcon","my","PaymentSummary","bgcolor","justifyContent","Switch","defaultChecked","alignSelf","Divider","borderStyle","mt","LoadingButton","type","PaymentBillingAddress"],"sourceRoot":""}