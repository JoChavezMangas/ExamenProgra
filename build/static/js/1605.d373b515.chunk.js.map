{"version":3,"file":"static/js/1605.d373b515.chunk.js","mappings":"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","sources":["components/badge-status/styles.js","components/badge-status/BadgeStatus.js","pages/components/mui/MUIAvatarPage.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js"],"sourcesContent":["// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport const StyledBadgeStatus = styled('span')(({ theme, ownerState }) => {\n  const { status, size } = ownerState;\n\n  return {\n    width: 10,\n    height: 10,\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:before, &:after': {\n      content: \"''\",\n      borderRadius: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n\n    ...(size === 'small' && { width: 8, height: 8 }),\n\n    ...(size === 'large' && { width: 12, height: 12 }),\n\n    ...(status === 'offline' && { backgroundColor: 'transparent' }),\n\n    ...(status === 'away' && {\n      backgroundColor: theme.palette.warning.main,\n      '&:before': {\n        width: 2,\n        height: 4,\n        transform: 'translateX(1px) translateY(-1px)',\n      },\n      '&:after': {\n        width: 2,\n        height: 4,\n        transform: 'translateY(1px) rotate(125deg)',\n      },\n    }),\n\n    ...(status === 'busy' && {\n      backgroundColor: theme.palette.error.main,\n      '&:before': { width: 6, height: 2 },\n    }),\n\n    ...(status === 'online' && {\n      backgroundColor: theme.palette.success.main,\n    }),\n\n    ...(status === 'invisible' && {\n      backgroundColor: theme.palette.text.disabled,\n      '&:before': {\n        width: 6,\n        height: 6,\n        borderRadius: '50%',\n      },\n    }),\n\n    ...(status === 'unread' && {\n      backgroundColor: theme.palette.info.main,\n    }),\n  };\n});\n","import PropTypes from 'prop-types';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n//\nimport { StyledBadgeStatus } from './styles';\n\n// ----------------------------------------------------------------------\n\nBadgeStatus.propTypes = {\n  sx: PropTypes.object,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  status: PropTypes.oneOf(['away', 'busy', 'unread', 'online', 'offline', 'invisible']),\n};\n\nexport default function BadgeStatus({ size = 'medium', status = 'offline', sx }) {\n  const theme = useTheme();\n\n  return <StyledBadgeStatus ownerState={{ status, size }} sx={sx} theme={theme} />;\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Container, Tooltip } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// _mock\nimport _mock from '../../../_mock';\n// components\nimport Iconify from '../../../components/iconify';\nimport BadgeStatus from '../../../components/badge-status';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\nimport { CustomAvatar, CustomAvatarGroup } from '../../../components/custom-avatar';\n// sections\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\nconst SIZES = ['tiny', 'small', 'medium', 'large'];\n\nconst VARIANTS = ['circular', 'rounded', 'square'];\n\nconst STATUS = ['online', 'away', 'busy', 'invisible'];\n\n// ----------------------------------------------------------------------\n\nexport default function MUIAvatarPage() {\n  const theme = useTheme();\n\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Avatar | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: theme.palette.mode === 'light' ? 'grey.200' : 'grey.800',\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Avatar\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Avatar' },\n            ]}\n            moreLink={['https://mui.com/components/avatars']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <Block\n            title=\"Image avatars\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            {[1, 2, 3, 4, 5].map((_, index) => (\n              <CustomAvatar key={index} alt=\"Remy Sharp\" src={_mock.image.avatar(index + 1)} />\n            ))}\n          </Block>\n\n          <Block\n            title=\"Letter avatars\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            {COLORS.map((color, index) => (\n              <Tooltip key={color} title={color}>\n                <CustomAvatar name={_mock.name.fullName(index)} />\n              </Tooltip>\n            ))}\n          </Block>\n\n          <Block\n            title=\"Icon avatars\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            {COLORS.map((color) => (\n              <CustomAvatar key={color} color={color}>\n                <Iconify icon=\"eva:folder-add-outline\" width={24} />\n              </CustomAvatar>\n            ))}\n          </Block>\n\n          <Block\n            title=\"Variant\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            {VARIANTS.map((variant) => (\n              <CustomAvatar key={variant} variant={variant} color=\"primary\">\n                <Iconify icon=\"eva:folder-add-outline\" width={24} />\n              </CustomAvatar>\n            ))}\n          </Block>\n\n          <Block\n            title=\"Grouped\"\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            {SIZES.map((size) => (\n              <Tooltip key={size} title={size}>\n                <CustomAvatarGroup key={size} size={size}>\n                  {COLORS.map((color, index) => (\n                    <CustomAvatar\n                      key={color}\n                      alt=\"Remy Sharp\"\n                      src={_mock.image.avatar(index + 1)}\n                    />\n                  ))}\n                </CustomAvatarGroup>\n              </Tooltip>\n            ))}\n\n            <Tooltip title=\"compact\">\n              <CustomAvatarGroup compact sx={{ width: 48, height: 48 }}>\n                {COLORS.slice(0, 2).map((color, index) => (\n                  <CustomAvatar key={color} alt=\"Remy Sharp\" src={_mock.image.avatar(index + 1)} />\n                ))}\n              </CustomAvatarGroup>\n            </Tooltip>\n          </Block>\n\n          <Block\n            title=\"With badge\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            <CustomAvatar\n              alt=\"Travis Howard\"\n              src={_mock.image.avatar(1)}\n              BadgeProps={{\n                badgeContent: (\n                  <CustomAvatar\n                    alt=\"Travis Howard\"\n                    src={_mock.image.avatar(7)}\n                    sx={{\n                      width: 24,\n                      height: 24,\n                      border: `solid 2px ${theme.palette.background.paper}`,\n                    }}\n                  />\n                ),\n              }}\n            />\n\n            {STATUS.map((status, index) => (\n              <CustomAvatar\n                key={status}\n                alt=\"Travis Howard\"\n                src={_mock.image.avatar(index + 1)}\n                BadgeProps={{\n                  badgeContent: <BadgeStatus status={status} size=\"large\" />,\n                }}\n              />\n            ))}\n          </Block>\n\n          <Block\n            title=\"Sizes\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            {[24, 32, 48, 56, 64, 80, 128].map((size, index) => (\n              <CustomAvatar\n                key={size}\n                alt=\"Travis Howard\"\n                src={_mock.image.avatar(index + 4)}\n                sx={{ width: size, height: size }}\n              />\n            ))}\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"],"names":["StyledBadgeStatus","styled","theme","ownerState","status","size","width","height","display","borderRadius","alignItems","justifyContent","content","backgroundColor","palette","common","white","warning","main","transform","error","success","text","disabled","info","BadgeStatus","sx","useTheme","COLORS","SIZES","VARIANTS","STATUS","MUIAvatarPage","pt","pb","bgcolor","mode","heading","links","name","href","PATH_PAGE","moreLink","my","columns","xs","md","spacing","title","mx","map","_","index","alt","src","_mock","color","icon","variant","flexDirection","compact","slice","BadgeProps","badgeContent","border","background","paper","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","margin","padding","MasonryRoot","overridesResolver","props","styles","root","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","flushSync","max","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","_jsx","_jsxs","as","clsx"],"sourceRoot":""}