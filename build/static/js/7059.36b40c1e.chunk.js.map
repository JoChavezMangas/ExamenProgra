{"version":3,"file":"static/js/7059.36b40c1e.chunk.js","mappings":"+WAsBe,SAASA,IACtB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAEAE,GAASC,EAAAA,EAAAA,MAATD,KACR,GAA8CE,EAAAA,EAAAA,YAAU,eAAjDC,EAAe,KAAEC,EAAkB,KA0B1C,OAxBEC,EAAAA,EAAAA,YAAU,YAEN,WACI,IAAMC,EAAcC,EAAAA,GAAiBC,EAAAA,GAC/BC,EAAG,iBAAaC,aAAaC,QAAQ,iBAC3CC,EAAAA,EAAAA,GAAM,CACFC,OAAQ,MACRC,IAAKR,EACLS,OAAQ,CAAEC,GAAIhB,GACdiB,QAAS,CAAE,cAAiBR,KAC7BS,MAAK,SAAAC,GACJC,QAAQC,IAAI,+BAAgCF,EAASG,MAErDlB,EAAmBe,EAASG,KAChC,IAAGC,OAAM,WACL,GAER,CACAC,EACJ,GAAG,CAACxB,KAMJ,iCACE,SAAC,KAAM,WACL,4CAGF,UAAC,IAAS,CAACyB,UAAU3B,GAAuB,KAAK,WAC/C,SAAC,IAAiB,CAChB4B,SACE,kDAEFC,MAAO,CACL,CACE3B,KAAM,YACN4B,KAAMC,EAAAA,GAAAA,MAER,CACE7B,KAAM,WACN4B,KAAMC,EAAAA,GAAAA,SAAAA,MAER,CAAE7B,KAAqB,OAAfG,QAAe,IAAfA,OAAe,EAAfA,EAAiB2B,iBAE3BC,QAAQ,SAAC,IAAM,CAACC,UAAWC,EAAAA,GACzBC,GAAIL,EAAAA,GAAAA,SAAAA,KACJM,QAAQ,YACRC,WAAW,SAAC,IAAO,CAACC,KAAK,wBAAyB,yBAOtD,SAAC,IAAmB,CAACC,QAAM,EAACnC,gBAAiBA,SAIrD,C","sources":["pages/Empleado/EmpleadoEditPage.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\nimport { paramCase } from 'change-case';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n// @mui\nimport { Button, Container, Icon, Typography } from '@mui/material';\nimport Iconify from '../../components/iconify/Iconify';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// _mock_\nimport { _userList } from '../../_mock/arrays';\n// components\nimport { useSettingsContext } from '../../components/settings';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport EmpleadoNewEditForm from '../../sections/@dashboard/empleado/EmpleadoNewEditForm';\nimport { HOST_API_LOCAL, END_POINT_OBTENER_EMPLEADO } from '../../config-global';\n\n\n// ----------------------------------------------------------------------\n\nexport default function EmpleadoEditPage() {\n  const { themeStretch } = useSettingsContext();\n\n  const { name } = useParams();\n  const [currentEmpleado, setCurrentEmpleado] = useState() // _userList.find((empleado) => paramCase(empleado.name) === name);\n\n    useEffect(() => {\n        \n        function ObtenerEmpleado() {\n            const urlEndPoint = HOST_API_LOCAL + END_POINT_OBTENER_EMPLEADO;\n            const AUT = `Bearer ${localStorage.getItem('accessToken')}`\n            axios({\n                method: 'get',\n                url: urlEndPoint,\n                params: { Id: name },\n                headers: { 'Authorization': AUT }\n            }).then(response => {\n                console.log('este es el response de axios', response.data)\n                \n                setCurrentEmpleado(response.data)\n            }).catch(() => {\n                // result = \"Error\";\n            })\n        }\n        ObtenerEmpleado()\n    }, [name])\n\n\n\n\n  return (\n    <>\n      <Helmet>\n        <title> Empleado</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading={\n            <>Editar empleado</>\n          }\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Empleado',\n              href: PATH_DASHBOARD.empleado.list,\n            },\n            { name: currentEmpleado?.nombreCompleto },\n          ]}\n          action={<Button component={RouterLink}\n            to={PATH_DASHBOARD.empleado.list}\n            variant=\"contained\"\n            startIcon={<Iconify icon=\"ic:round-arrow-back\" />}\n          >\n          \n            Regresar\n          </Button>}\n        />\n\n        <EmpleadoNewEditForm isEdit currentEmpleado={currentEmpleado} />\n      </Container>\n    </>\n  );\n}\n"],"names":["EmpleadoEditPage","themeStretch","useSettingsContext","name","useParams","useState","currentEmpleado","setCurrentEmpleado","useEffect","urlEndPoint","HOST_API_LOCAL","END_POINT_OBTENER_EMPLEADO","AUT","localStorage","getItem","axios","method","url","params","Id","headers","then","response","console","log","data","catch","ObtenerEmpleado","maxWidth","heading","links","href","PATH_DASHBOARD","nombreCompleto","action","component","RouterLink","to","variant","startIcon","icon","isEdit"],"sourceRoot":""}