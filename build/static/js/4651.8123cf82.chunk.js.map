{"version":3,"file":"static/js/4651.8123cf82.chunk.js","mappings":"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","sources":["components/badge-status/styles.js","components/badge-status/BadgeStatus.js","components/custom-input/CustomSmallSelect.js","components/custom-input/CustomTextField.js","components/custom-input/IncrementerButton.js","components/lightbox/styles.js","components/lightbox/Lightbox.js","components/skeleton/SkeletonPostItem.js","components/skeleton/SkeletonPostDetails.js","components/skeleton/SkeletonProductItem.js","components/skeleton/SkeletonMailNavItem.js","components/skeleton/SkeletonKanbanColumn.js","components/skeleton/SkeletonProductDetails.js","components/skeleton/SkeletonConversationItem.js","sections/@dashboard/chat/nav/ChatNavItem.js","sections/@dashboard/chat/nav/ChatNavList.js","sections/@dashboard/chat/nav/ChatNavSearch.js","sections/@dashboard/chat/nav/ChatNavAccount.js","sections/@dashboard/chat/nav/ChatNavSearchResults.js","sections/@dashboard/chat/nav/ChatNav.js","sections/@dashboard/chat/room/ChatRoomCollapseButton.js","sections/@dashboard/chat/room/ChatRoomAttachments.js","sections/@dashboard/chat/room/ChatRoomSingle.js","sections/@dashboard/chat/room/ChatRoomParticipantInfoDialog.js","sections/@dashboard/chat/room/ChatRoomGroup.js","sections/@dashboard/chat/room/ChatRoom.js","sections/@dashboard/chat/message/ChatMessageInput.js","sections/@dashboard/chat/message/ChatMessageItem.js","sections/@dashboard/chat/message/ChatMessageList.js","sections/@dashboard/chat/header/ChatHeaderDetail.js","sections/@dashboard/chat/header/ChatHeaderCompose.js","sections/@dashboard/chat/Chat.js","pages/dashboard/ChatPage.js","utils/formatTime.js","utils/uuidv4.js"],"sourcesContent":["// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport const StyledBadgeStatus = styled('span')(({ theme, ownerState }) => {\n  const { status, size } = ownerState;\n\n  return {\n    width: 10,\n    height: 10,\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:before, &:after': {\n      content: \"''\",\n      borderRadius: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n\n    ...(size === 'small' && { width: 8, height: 8 }),\n\n    ...(size === 'large' && { width: 12, height: 12 }),\n\n    ...(status === 'offline' && { backgroundColor: 'transparent' }),\n\n    ...(status === 'away' && {\n      backgroundColor: theme.palette.warning.main,\n      '&:before': {\n        width: 2,\n        height: 4,\n        transform: 'translateX(1px) translateY(-1px)',\n      },\n      '&:after': {\n        width: 2,\n        height: 4,\n        transform: 'translateY(1px) rotate(125deg)',\n      },\n    }),\n\n    ...(status === 'busy' && {\n      backgroundColor: theme.palette.error.main,\n      '&:before': { width: 6, height: 2 },\n    }),\n\n    ...(status === 'online' && {\n      backgroundColor: theme.palette.success.main,\n    }),\n\n    ...(status === 'invisible' && {\n      backgroundColor: theme.palette.text.disabled,\n      '&:before': {\n        width: 6,\n        height: 6,\n        borderRadius: '50%',\n      },\n    }),\n\n    ...(status === 'unread' && {\n      backgroundColor: theme.palette.info.main,\n    }),\n  };\n});\n","import PropTypes from 'prop-types';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n//\nimport { StyledBadgeStatus } from './styles';\n\n// ----------------------------------------------------------------------\n\nBadgeStatus.propTypes = {\n  sx: PropTypes.object,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  status: PropTypes.oneOf(['away', 'busy', 'unread', 'online', 'offline', 'invisible']),\n};\n\nexport default function BadgeStatus({ size = 'medium', status = 'offline', sx }) {\n  const theme = useTheme();\n\n  return <StyledBadgeStatus ownerState={{ status, size }} sx={sx} theme={theme} />;\n}\n","// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst CustomSmallSelect = styled((props) => (\n  <TextField select SelectProps={{ native: true }} {...props} />\n))(({ theme }) => ({\n  '& fieldset': {\n    display: 'none',\n  },\n  '& select': {\n    ...theme.typography.subtitle2,\n    padding: theme.spacing(0.5, 0, 0.5, 1),\n    paddingRight: '28px !important',\n  },\n  '& .MuiOutlinedInput-root': {\n    borderRadius: Number(theme.shape.borderRadius) * 0.75,\n    backgroundColor: alpha(theme.palette.grey[500], 0.08),\n  },\n}));\n\nexport default CustomSmallSelect;\n","// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst CustomTextField = styled(TextField, {\n  shouldForwardProp: (prop) => prop !== 'width',\n})(({ width, theme }) => ({\n  '& fieldset': {\n    display: 'none',\n  },\n  '& .MuiOutlinedInput-root': {\n    width,\n    border: `solid 1px ${alpha(theme.palette.grey[500], 0.32)}`,\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n      duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n      boxShadow: theme.customShadows.z20,\n      ...(width && {\n        [theme.breakpoints.up('sm')]: {\n          width: width + 60,\n        },\n      }),\n    },\n  },\n}));\n\nexport default CustomTextField;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Stack, IconButton } from '@mui/material';\n// components\nimport Iconify from '../iconify';\n\n// ----------------------------------------------------------------------\n\nconst IncrementerButton = forwardRef(\n  ({ quantity, onIncrease, onDecrease, disabledIncrease, disabledDecrease, sx, ...other }, ref) => (\n    <Stack\n      ref={ref}\n      flexShrink={0}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      sx={{\n        mb: 0.5,\n        py: 0.5,\n        px: 0.75,\n        width: 96,\n        borderRadius: 1,\n        border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.32)}`,\n        ...sx,\n      }}\n      {...other}\n    >\n      <IconButton\n        size=\"small\"\n        color=\"inherit\"\n        onClick={onDecrease}\n        disabled={disabledDecrease}\n        sx={{ color: 'text.secondary' }}\n      >\n        <Iconify icon=\"eva:minus-fill\" width={16} />\n      </IconButton>\n\n      {quantity}\n\n      <IconButton\n        size=\"small\"\n        color=\"inherit\"\n        onClick={onIncrease}\n        disabled={disabledIncrease}\n        sx={{ color: 'text.secondary' }}\n      >\n        <Iconify icon=\"eva:plus-fill\" width={16} />\n      </IconButton>\n    </Stack>\n  )\n);\n\nIncrementerButton.propTypes = {\n  sx: PropTypes.object,\n  onDecrease: PropTypes.func,\n  onIncrease: PropTypes.func,\n  quantity: PropTypes.number,\n  disabledDecrease: PropTypes.bool,\n  disabledIncrease: PropTypes.bool,\n};\n\nexport default IncrementerButton;\n","// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","/* eslint-disable import/no-unresolved */\nimport PropTypes from 'prop-types';\nimport ReactLightbox from 'yet-another-react-lightbox';\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\nimport { useLightboxState } from 'yet-another-react-lightbox/core';\n// @mui\nimport { Typography } from '@mui/material';\n//\nimport Iconify from '../iconify';\n//\nimport StyledLightbox from './styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = 24;\n\nLightbox.propTypes = {\n  slides: PropTypes.array,\n  disabledZoom: PropTypes.bool,\n  disabledVideo: PropTypes.bool,\n  disabledTotal: PropTypes.bool,\n  disabledCaptions: PropTypes.bool,\n  disabledSlideshow: PropTypes.bool,\n  disabledThumbnails: PropTypes.bool,\n  disabledFullscreen: PropTypes.bool,\n  onGetCurrentIndex: PropTypes.func,\n};\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: (index) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal\n              key={0}\n              totalItems={totalItems}\n              disabledTotal={disabledTotal}\n              disabledCaptions={disabledCaptions}\n            />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\nDisplayTotal.propTypes = {\n  disabledCaptions: PropTypes.bool,\n  disabledTotal: PropTypes.bool,\n  totalItems: PropTypes.number,\n};\n\nexport function DisplayTotal({ totalItems, disabledTotal, disabledCaptions }) {\n  const { state } = useLightboxState();\n\n  const { currentIndex } = state;\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Typography\n      className=\"yarl__button\"\n      sx={{\n        pl: 3,\n        left: 0,\n        position: 'fixed',\n        typography: 'body2',\n        ...(!disabledCaptions && {\n          px: 'unset',\n          minWidth: 64,\n          position: 'unset',\n          textAlign: 'center',\n        }),\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Typography>\n  );\n}\n","// @mui\nimport { Box, Skeleton, Grid } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostItem({ ...other }) {\n  return (\n    <Grid item xs={12} sm={6} md={3} {...other}>\n      <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ height: 200, borderRadius: 2 }} />\n      <Box sx={{ display: 'flex', mt: 1.5 }}>\n        <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n        <Skeleton variant=\"text\" sx={{ mx: 1, flexGrow: 1 }} />\n      </Box>\n    </Grid>\n  );\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostDetails() {\n  return (\n    <>\n      <Skeleton width=\"100%\" height={560} variant=\"rectangular\" sx={{ borderRadius: 2 }} />\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n        <Skeleton variant=\"circular\" width={64} height={64} />\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","// @mui\nimport { Card, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProductItem({ ...other }) {\n  return (\n    <Card {...other}>\n      <Skeleton variant=\"rectangular\" sx={{ paddingTop: '100%' }} />\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5 }} />\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\">\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n          </Stack>\n          <Skeleton variant=\"text\" sx={{ width: 40 }} />\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSkeletonMailNavItem.propTypes = {\n  sx: PropTypes.object,\n};\n\nexport default function SkeletonMailNavItem({ sx, ...other }) {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1, ...sx }} {...other}>\n      <Skeleton variant=\"circular\" width={32} height={32} />\n      <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n    </Stack>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, Box, Paper } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonKanbanColumn({ ...other }) {\n  return (\n    <Box gap={3} display=\"grid\" gridTemplateColumns=\"repeat(4, 1fr)\" {...other}>\n      {[...Array(3)].map((_, index) => (\n        <Paper variant=\"outlined\" key={index} sx={{ p: 2.5, width: 310 }}>\n          <Stack spacing={2}>\n            <Skeleton variant=\"rectangular\" sx={{ paddingTop: '75%', borderRadius: 1.5 }} />\n\n            {index === 0 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n\n            {index !== 2 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n          </Stack>\n        </Paper>\n      ))}\n    </Box>\n  );\n}\n","// @mui\nimport { Grid, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProductDetails({ ...other }) {\n  return (\n    <Grid container spacing={3} {...other}>\n      <Grid item xs={12} md={6} lg={7}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '100%', borderRadius: 2 }} />\n      </Grid>\n\n      <Grid item xs={12} md={6} lg={5}>\n        <Skeleton variant=\"circular\" width={80} height={80} />\n        <Skeleton variant=\"text\" height={240} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n      </Grid>\n    </Grid>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSkeletonConversationItem.propTypes = {\n  sx: PropTypes.object,\n};\n\nexport default function SkeletonConversationItem({ sx, ...other }) {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1.5 }}>\n      <Skeleton variant=\"circular\" width={48} height={48} />\n\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport {\n  Badge,\n  Stack,\n  Typography,\n  ListItemText,\n  ListItemButton,\n  ListItemAvatar,\n} from '@mui/material';\n// components\nimport { CustomAvatar, CustomAvatarGroup } from '../../../../components/custom-avatar';\nimport BadgeStatus from '../../../../components/badge-status';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\nChatNavItem.propTypes = {\n  openNav: PropTypes.bool,\n  onSelect: PropTypes.func,\n  isSelected: PropTypes.bool,\n  conversation: PropTypes.object,\n};\n\nexport default function ChatNavItem({ conversation, openNav, isSelected, onSelect }) {\n  const details = getDetails(conversation, CURRENT_USER_ID);\n\n  const lastActivity = conversation.messages[conversation.messages.length - 1].createdAt;\n\n  const isGroup = details.otherParticipants.length > 1;\n\n  const isUnread = conversation.unreadCount > 0;\n\n  const hasOnlineInGroup =\n    isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <ListItemButton\n      disableGutters\n      onClick={onSelect}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        ...(isSelected && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <ListItemAvatar>\n        {isGroup ? (\n          <Badge\n            overlap=\"circular\"\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            badgeContent={hasOnlineInGroup && <BadgeStatus status=\"online\" />}\n          >\n            <CustomAvatarGroup compact sx={{ width: 48, height: 48 }}>\n              {details.otherParticipants.slice(0, 2).map((participant) => (\n                <CustomAvatar\n                  key={participant.id}\n                  alt={participant.name}\n                  src={participant.avatar}\n                />\n              ))}\n            </CustomAvatarGroup>\n          </Badge>\n        ) : (\n          <CustomAvatar\n            key={details.otherParticipants[0].id}\n            alt={details.otherParticipants[0].name}\n            src={details.otherParticipants[0].avatar}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status={details.otherParticipants[0].status} />,\n            }}\n            sx={{ width: 48, height: 48 }}\n          />\n        )}\n      </ListItemAvatar>\n\n      {openNav && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{ noWrap: true, variant: 'subtitle2' }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'text.primary' : 'text.secondary',\n            }}\n          />\n\n          <Stack alignItems=\"flex-end\" sx={{ ml: 2, height: 44 }}>\n            <Typography\n              noWrap\n              variant=\"body2\"\n              component=\"span\"\n              sx={{\n                mb: 1.5,\n                fontSize: 12,\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(lastActivity), {\n                addSuffix: false,\n              })}\n            </Typography>\n\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Stack>\n        </>\n      )}\n    </ListItemButton>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n\n  const displayNames = otherParticipants.map((participant) => participant.name).join(', ');\n\n  let displayText = '';\n\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// @mui\nimport { List } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// components\nimport { SkeletonConversationItem } from '../../../../components/skeleton';\n//\nimport ChatNavItem from './ChatNavItem';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\nChatNavList.propTypes = {\n  sx: PropTypes.object,\n  openNav: PropTypes.bool,\n  selected: PropTypes.func,\n  onCloseNav: PropTypes.func,\n  conversations: PropTypes.object,\n};\n\nexport default function ChatNavList({\n  conversations,\n  openNav,\n  onCloseNav,\n  selected,\n  sx,\n  ...other\n}) {\n  const navigate = useNavigate();\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n\n    const conversation = conversations.byId[conversationId];\n\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== CURRENT_USER_ID\n      );\n\n      if (otherParticipant?.username) {\n        conversationKey = otherParticipant?.username;\n      }\n    }\n\n    navigate(PATH_DASHBOARD.chat.view(conversationKey));\n  };\n\n  const loading = !conversations.allIds.length;\n\n  return (\n    <List disablePadding sx={sx} {...other}>\n      {(loading ? [...Array(12)] : conversations.allIds).map((conversationId, index) =>\n        conversationId ? (\n          <ChatNavItem\n            key={conversationId}\n            openNav={openNav}\n            conversation={conversations.byId[conversationId]}\n            isSelected={selected(conversationId)}\n            onSelect={() => {\n              if (!isDesktop) {\n                onCloseNav();\n              }\n              handleSelectConversation(conversationId);\n            }}\n          />\n        ) : (\n          <SkeletonConversationItem key={index} />\n        )\n      )}\n    </List>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { InputAdornment, ClickAwayListener } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { CustomTextField } from '../../../../components/custom-input';\n\n// ----------------------------------------------------------------------\n\nChatNavSearch.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onClickAway: PropTypes.func,\n};\n\nexport default function ChatNavSearch({ value, onChange, onClickAway }) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <CustomTextField\n        fullWidth\n        size=\"small\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Search contacts...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ mt: 2.5 }}\n      />\n    </ClickAwayListener>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  List,\n  Stack,\n  Select,\n  Divider,\n  Tooltip,\n  MenuItem,\n  Typography,\n  IconButton,\n} from '@mui/material';\n// auth\nimport { useAuthContext } from '../../../../auth/useAuthContext';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport MenuPopover from '../../../../components/menu-popover';\nimport BadgeStatus from '../../../../components/badge-status';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'];\n\nexport default function ChatNavAccount() {\n  const { user } = useAuthContext();\n\n  const [status, setStatus] = useState('online');\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <CustomAvatar\n        src={user?.photoURL}\n        alt={user?.displayName}\n        name={user?.displayName}\n        BadgeProps={{\n          badgeContent: <BadgeStatus status={status} />,\n        }}\n        onClick={handleOpenPopover}\n        sx={{ cursor: 'pointer', width: 48, height: 48 }}\n      />\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} arrow=\"top-left\" sx={{ p: 0 }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ py: 2, pr: 1, pl: 2.5 }}>\n          <div>\n            <Typography noWrap variant=\"subtitle2\">\n              {user?.displayName}\n            </Typography>\n\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user?.email}\n            </Typography>\n          </div>\n\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"error\">\n              <Iconify icon=\"ic:round-power-settings-new\" />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n\n        <Divider />\n\n        <List sx={{ px: 1 }}>\n          <MenuItem>\n            <BadgeStatus size=\"large\" status={status} sx={{ m: 0.5, flexShrink: 0 }} />\n\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={(event) => setStatus(event.target.value)}\n              sx={{\n                '& .MuiInputBase-input': {\n                  p: 0,\n                  pl: 2,\n                  typography: 'body2',\n                  textTransform: 'capitalize',\n                },\n                '& .MuiNativeSelect-icon': {\n                  right: -16,\n                  top: 'unset',\n                },\n                '& .MuiOutlinedInput-notchedOutline': {\n                  display: 'none',\n                },\n              }}\n            >\n              {STATUS.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"ic:round-account-box\" />\n            Profile\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"eva:settings-2-fill\" />\n            Settings\n          </MenuItem>\n        </List>\n      </MenuPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Avatar, Typography, ListItemButton } from '@mui/material';\n//\nimport SearchNotFound from '../../../../components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nChatNavSearchResults.propTypes = {\n  searchResults: PropTypes.array,\n  onSelectContact: PropTypes.func,\n  searchContacts: PropTypes.string,\n};\n\nexport default function ChatNavSearchResults({ searchContacts, searchResults, onSelectContact }) {\n  const isNotFound = !searchResults.length && !!searchContacts;\n\n  return (\n    <>\n      <Typography\n        paragraph\n        variant=\"h6\"\n        sx={{\n          px: 2.5,\n        }}\n      >\n        Contacts\n      </Typography>\n\n      {isNotFound ? (\n        <SearchNotFound\n          query={searchContacts}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 40px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      ) : (\n        <>\n          {searchResults.map((result) => (\n            <ListItemButton\n              key={result.id}\n              onClick={() => onSelectContact(result)}\n              sx={{\n                px: 2.5,\n                py: 1.5,\n                typography: 'subtitle2',\n              }}\n            >\n              <Avatar alt={result.name} src={result.avatar} sx={{ mr: 2 }} />\n              {result.name}\n            </ListItemButton>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Stack, Drawer, IconButton } from '@mui/material';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// utils\nimport axios from '../../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\n//\nimport ChatNavList from './ChatNavList';\nimport ChatNavSearch from './ChatNavSearch';\nimport ChatNavAccount from './ChatNavAccount';\nimport ChatNavSearchResults from './ChatNavSearchResults';\n\n// ----------------------------------------------------------------------\n\nconst StyledToggleButton = styled((props) => <IconButton disableRipple {...props} />)(\n  ({ theme }) => ({\n    left: 0,\n    zIndex: 9,\n    width: 32,\n    height: 32,\n    position: 'absolute',\n    top: theme.spacing(13),\n    borderRadius: `0 12px 12px 0`,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.customShadows.primary,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.darker,\n    },\n  })\n);\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 320;\n\nconst NAV_COLLAPSE_WIDTH = 96;\n\nChatNav.propTypes = {\n  conversations: PropTypes.object,\n  activeConversationId: PropTypes.string,\n};\n\nexport default function ChatNav({ conversations, activeConversationId }) {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const [openNav, setOpenNav] = useState(false);\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [searchContacts, setSearchContacts] = useState('');\n\n  const isCollapse = isDesktop && !openNav;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      handleCloseNav();\n    } else {\n      handleOpenNav();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDesktop]);\n\n  const handleToggleNav = () => {\n    setOpenNav(!openNav);\n  };\n\n  const handleOpenNav = () => {\n    setOpenNav(true);\n  };\n\n  const handleCloseNav = () => {\n    setOpenNav(false);\n  };\n\n  const handleChangeSearch = async (event) => {\n    try {\n      const { value } = event.target;\n\n      setSearchContacts(value);\n\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value },\n        });\n\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSelectContact = (result) => {\n    setSearchContacts('');\n    navigate(PATH_DASHBOARD.chat.view(result.username));\n  };\n\n  const renderContent = (\n    <>\n      <Box sx={{ p: 2.5 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          {!isCollapse && (\n            <>\n              <ChatNavAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <IconButton onClick={handleToggleNav}>\n            <Iconify icon={openNav ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'} />\n          </IconButton>\n\n          {!isCollapse && (\n            <IconButton component={RouterLink} to={PATH_DASHBOARD.chat.new}>\n              <Iconify icon=\"eva:edit-fill\" />\n            </IconButton>\n          )}\n        </Stack>\n\n        {!isCollapse && (\n          <ChatNavSearch\n            value={searchContacts}\n            onChange={handleChangeSearch}\n            onClickAway={() => setSearchContacts('')}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!searchContacts ? (\n          <ChatNavList\n            openNav={openNav}\n            onCloseNav={handleCloseNav}\n            conversations={conversations}\n            selected={(conversationId) => activeConversationId === conversationId}\n          />\n        ) : (\n          <ChatNavSearchResults\n            searchContacts={searchContacts}\n            searchResults={searchResults}\n            onSelectContact={handleSelectContact}\n          />\n        )}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!isDesktop && (\n        <StyledToggleButton onClick={handleToggleNav}>\n          <Iconify width={16} icon=\"eva:people-fill\" />\n        </StyledToggleButton>\n      )}\n\n      {isDesktop ? (\n        <Drawer\n          open={openNav}\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              pb: 1,\n              width: 1,\n              position: 'static',\n              ...(isCollapse && {\n                transform: 'none !important',\n                visibility: 'visible !important',\n              }),\n            },\n          }}\n          sx={{\n            width: NAV_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(isCollapse && {\n              width: NAV_COLLAPSE_WIDTH,\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          open={openNav}\n          onClose={handleCloseNav}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{\n            sx: {\n              pb: 1,\n              width: NAV_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Button } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nChatRoomCollapseButton.propTypes = {\n  sx: PropTypes.object,\n  children: PropTypes.node,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomCollapseButton({ isCollapse, onCollapse, children, sx, ...other }) {\n  return (\n    <Button\n      fullWidth\n      color=\"inherit\"\n      onClick={onCollapse}\n      endIcon={\n        <Iconify\n          width={16}\n          icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n        />\n      }\n      sx={{\n        height: 40,\n        flexShrink: 0,\n        borderRadius: 0,\n        typography: 'overline',\n        color: 'text.disabled',\n        justifyContent: 'space-between',\n        p: (theme) => theme.spacing(1, 1.5, 1, 2.5),\n        ...sx,\n      }}\n      {...other}\n    >\n      {children}\n    </Button>\n  );\n}\n","import PropTypes from 'prop-types';\nimport uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\n// @mui\nimport { Box, Typography, Stack } from '@mui/material';\n// utils\nimport { fDateTime } from '../../../../utils/formatTime';\n// components\nimport Scrollbar from '../../../../components/scrollbar';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport ChatRoomCollapseButton from './ChatRoomCollapseButton';\n\n// ----------------------------------------------------------------------\n\nChatRoomAttachments.propTypes = {\n  conversation: PropTypes.object,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomAttachments({ conversation, isCollapse, onCollapse }) {\n  const totalAttachments = uniq(flatten(conversation.messages.map((item) => item.attachments)));\n\n  return (\n    <Stack\n      flexGrow={1}\n      sx={{\n        pb: 2,\n        height: 1,\n        overflow: 'hidden',\n        borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n      }}\n    >\n      <ChatRoomCollapseButton\n        isCollapse={isCollapse && !!totalAttachments.length}\n        onCollapse={onCollapse}\n        disabled={!totalAttachments.length}\n        sx={{\n          ...(!isCollapse && {\n            borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\n          }),\n        }}\n      >\n        Attachments ({totalAttachments.length})\n      </ChatRoomCollapseButton>\n\n      <Box\n        sx={{\n          overflow: 'hidden',\n          height: isCollapse ? 1 : 0,\n          transition: (theme) =>\n            theme.transitions.create('height', {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        <Scrollbar>\n          {totalAttachments.map((attachment, index) => (\n            <AttachmentItem key={attachment.name + index} attachment={attachment} />\n          ))}\n        </Scrollbar>\n      </Box>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nAttachmentItem.propTypes = {\n  attachment: PropTypes.object,\n};\n\nfunction AttachmentItem({ attachment }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ mt: 2, px: 2.5 }}>\n      <Stack\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{\n          width: 40,\n          height: 40,\n          flexShrink: 0,\n          borderRadius: 1,\n          overflow: 'hidden',\n          position: 'relative',\n          backgroundColor: 'background.neutral',\n        }}\n      >\n        <FileThumbnail\n          imageView\n          file={attachment.preview}\n          onDownload={() => console.log('DOWNLOAD')}\n          sx={{ width: 28, height: 28 }}\n        />\n      </Stack>\n\n      <Stack flexGrow={1} sx={{ ml: 1.5, minWidth: 0 }}>\n        <Typography variant=\"body2\" noWrap>\n          {attachment.name}\n        </Typography>\n\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(attachment.dateCreated)}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Avatar, Divider, Collapse, Typography, Stack } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n//\nimport ChatRoomCollapseButton from './ChatRoomCollapseButton';\n\n// ----------------------------------------------------------------------\n\nChatRoomSingle.propTypes = {\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n  participant: PropTypes.object,\n};\n\nexport default function ChatRoomSingle({ participant, isCollapse, onCollapse }) {\n  if (!participant) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Stack alignItems=\"center\" sx={{ py: 4 }}>\n        <Avatar\n          alt={participant.name}\n          src={participant.avatar}\n          sx={{ width: 96, height: 96, mb: 2 }}\n        />\n\n        <Typography variant=\"subtitle1\">{participant.name}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\n          {participant.role}\n        </Typography>\n      </Stack>\n\n      <Divider />\n\n      <ChatRoomCollapseButton isCollapse={isCollapse} onCollapse={onCollapse}>\n        information\n      </ChatRoomCollapseButton>\n\n      <Collapse in={isCollapse}>\n        <Stack\n          spacing={2}\n          sx={{\n            p: (theme) => theme.spacing(2, 2.5, 2.5, 2.5),\n          }}\n        >\n          {[\n            { icon: 'eva:pin-fill', value: participant.address },\n            { icon: 'eva:phone-fill', value: participant.phone },\n            { icon: 'eva:email-fill', value: participant.email },\n          ].map((row, index) => (\n            <Stack key={row.icon} direction=\"row\">\n              <Iconify\n                icon={row.icon}\n                sx={{\n                  mr: 1,\n                  mt: 0.5,\n                  flexShrink: 0,\n                  color: 'text.disabled',\n                }}\n              />\n              <Typography variant=\"body2\" noWrap={index === 2}>\n                {row.value}\n              </Typography>\n            </Stack>\n          ))}\n        </Stack>\n      </Collapse>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Typography, Dialog, DialogContent, Stack, IconButton } from '@mui/material';\n// components\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nChatRoomParticipantInfoDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  participant: PropTypes.object,\n};\n\nexport default function ChatRoomParticipantInfoDialog({ participant, open, onClose }) {\n  const { name, avatar, role, address } = participant;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <Iconify icon=\"eva:close-fill\" />\n      </IconButton>\n\n      <DialogContent sx={{ p: 5 }}>\n        <Stack direction=\"row\" spacing={3}>\n          <CustomAvatar alt={name} src={avatar} name={name} sx={{ width: 96, height: 96 }} />\n\n          <Stack spacing={1}>\n            <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\n              {role}\n            </Typography>\n\n            <Typography variant=\"h6\">{name}</Typography>\n\n            <Stack direction=\"row\" sx={{ typography: 'caption', color: 'text.secondary' }}>\n              <Iconify icon=\"eva:pin-fill\" width={16} sx={{ flexShrink: 0, mr: 0.5 }} />\n              {address}\n            </Stack>\n\n            <Stack direction=\"row\" sx={{ pt: 1 }}>\n              <IconButton color=\"info\">\n                <Iconify icon=\"eva:message-square-fill\" />\n              </IconButton>\n\n              <IconButton color=\"warning\">\n                <Iconify icon=\"eva:email-fill\" />\n              </IconButton>\n\n              <IconButton color=\"success\">\n                <Iconify icon=\"eva:phone-fill\" />\n              </IconButton>\n\n              <IconButton color=\"error\">\n                <Iconify icon=\"eva:video-fill\" />\n              </IconButton>\n            </Stack>\n          </Stack>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n// components\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport Scrollbar from '../../../../components/scrollbar';\nimport BadgeStatus from '../../../../components/badge-status';\n//\nimport ChatRoomParticipantInfoDialog from './ChatRoomParticipantInfoDialog';\nimport ChatRoomCollapseButton from './ChatRoomCollapseButton';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 60;\n\nChatRoomGroup.propTypes = {\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n  participants: PropTypes.array,\n  onOpenUserInfo: PropTypes.func,\n  selectUserId: PropTypes.string,\n};\n\nexport default function ChatRoomGroup({\n  participants,\n  selectUserId,\n  onOpenUserInfo,\n  isCollapse,\n  onCollapse,\n}) {\n  return (\n    <>\n      <ChatRoomCollapseButton isCollapse={isCollapse} onCollapse={onCollapse}>\n        In room ({participants.length})\n      </ChatRoomCollapseButton>\n\n      <Box\n        sx={{\n          height: isCollapse ? HEIGHT * 4 : 0,\n          transition: (theme) =>\n            theme.transitions.create('height', {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        <Scrollbar>\n          {participants.map((participant) => (\n            <Participant\n              key={participant.id}\n              participant={participant}\n              open={selectUserId === participant.id}\n              onOpen={() => onOpenUserInfo(participant.id)}\n              onClose={() => onOpenUserInfo(null)}\n            />\n          ))}\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nParticipant.propTypes = {\n  open: PropTypes.bool,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  participant: PropTypes.object,\n};\n\nfunction Participant({ participant, open, onClose, onOpen }) {\n  const { name, avatar, status, role } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onOpen} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <CustomAvatar\n            alt={name}\n            src={avatar}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status={status} />,\n            }}\n          />\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={name}\n          secondary={role}\n          primaryTypographyProps={{ noWrap: true, variant: 'subtitle2' }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n\n      <ChatRoomParticipantInfoDialog participant={participant} open={open} onClose={onClose} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, IconButton } from '@mui/material';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// components\nimport Iconify from '../../../../components/iconify';\n//\nimport ChatRoomAttachments from './ChatRoomAttachments';\nimport ChatRoomSingle from './ChatRoomSingle';\nimport ChatRoomGroup from './ChatRoomGroup';\n\n// ----------------------------------------------------------------------\n\nconst StyledToggleButton = styled((props) => <IconButton disableRipple {...props} />)(\n  ({ theme }) => ({\n    right: 0,\n    zIndex: 9,\n    width: 32,\n    height: 32,\n    position: 'absolute',\n    top: theme.spacing(1),\n    boxShadow: theme.customShadows.z8,\n    backgroundColor: theme.palette.background.paper,\n    border: `solid 1px ${theme.palette.divider}`,\n    borderRight: 0,\n    borderRadius: `12px 0 0 12px`,\n    transition: theme.transitions.create('all'),\n    '&:hover': {\n      backgroundColor: theme.palette.background.neutral,\n    },\n  })\n);\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 240;\n\nChatRoom.propTypes = {\n  participants: PropTypes.array,\n  conversation: PropTypes.object,\n};\n\nexport default function ChatRoom({ conversation, participants }) {\n  const theme = useTheme();\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const [openNav, setOpenNav] = useState(true);\n\n  const [openInfo, setOpenInfo] = useState(true);\n\n  const [openAttachments, setOpenAttachments] = useState(true);\n\n  const [openParticipants, setOpenParticipants] = useState(true);\n\n  const [selectUser, setSelectUser] = useState(null);\n\n  const onOpenNav = () => {\n    setOpenNav(true);\n  };\n\n  const onCloseNav = () => {\n    setOpenNav(false);\n  };\n\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      onCloseNav();\n    } else {\n      onOpenNav();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDesktop]);\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroup\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={openParticipants}\n          onCollapse={() => setOpenParticipants(!openParticipants)}\n          onOpenUserInfo={(participantId) => setSelectUser(participantId)}\n        />\n      ) : (\n        <ChatRoomSingle\n          participant={participants[0]}\n          isCollapse={openInfo}\n          onCollapse={() => setOpenInfo(!openInfo)}\n        />\n      )}\n\n      <ChatRoomAttachments\n        conversation={conversation}\n        isCollapse={openAttachments}\n        onCollapse={() => setOpenAttachments(!openAttachments)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <StyledToggleButton\n        onClick={() => setOpenNav(!openNav)}\n        sx={{\n          ...(openNav &&\n            isDesktop && {\n              right: NAV_WIDTH,\n            }),\n        }}\n      >\n        <Iconify\n          width={16}\n          icon={openNav ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n        />\n      </StyledToggleButton>\n\n      {isDesktop ? (\n        <Drawer\n          open={openNav}\n          anchor=\"right\"\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 1,\n              position: 'static',\n            },\n          }}\n          sx={{\n            height: 1,\n            width: NAV_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openNav && {\n              width: 0,\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          open={openNav}\n          onClose={onCloseNav}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{\n            sx: {\n              width: NAV_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useRef, useState } from 'react';\n// @mui\nimport { Stack, InputBase, IconButton, InputAdornment } from '@mui/material';\n// utils\nimport uuidv4 from '../../../../utils/uuidv4';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\nChatMessageInput.propTypes = {\n  sx: PropTypes.object,\n  onSend: PropTypes.func,\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, onSend, sx, ...other }) {\n  const fileInputRef = useRef(null);\n\n  const [message, setMessage] = useState('');\n\n  const handleClickAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleSend = (event) => {\n    if (event.key === 'Enter') {\n      console.log('Enter');\n      if (onSend && message && conversationId) {\n        onSend({\n          conversationId,\n          messageId: uuidv4(),\n          message,\n          contentType: 'text',\n          attachments: [],\n          createdAt: new Date(),\n          senderId: CURRENT_USER_ID,\n        });\n      }\n      setMessage('');\n    }\n  };\n\n  return (\n    <>\n      <InputBase\n        value={message}\n        onKeyUp={handleSend}\n        onChange={(event) => setMessage(event.target.value)}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <IconButton size=\"small\">\n              <Iconify icon=\"eva:smiling-face-fill\" />\n            </IconButton>\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={1} sx={{ flexShrink: 0, mr: 1.5 }}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleClickAttach}>\n              <Iconify icon=\"ic:round-add-photo-alternate\" />\n            </IconButton>\n\n            <IconButton disabled={disabled} size=\"small\" onClick={handleClickAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n\n            <IconButton disabled={disabled} size=\"small\">\n              <Iconify icon=\"eva:mic-fill\" />\n            </IconButton>\n          </Stack>\n        }\n        sx={{\n          pl: 1,\n          height: 56,\n          flexShrink: 0,\n          borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...sx,\n        }}\n        {...other}\n      />\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { Avatar, Typography, Stack } from '@mui/material';\n// components\nimport Image from '../../../../components/image';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object,\n  conversation: PropTypes.object,\n  onOpenLightbox: PropTypes.func,\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox }) {\n  const sender = conversation.participants.find(\n    (participant) => participant.id === message.senderId\n  );\n\n  const senderDetails =\n    message.senderId === CURRENT_USER_ID\n      ? {\n          type: 'me',\n        }\n      : {\n          avatar: sender?.avatar,\n          name: sender?.name,\n        };\n\n  const currentUser = senderDetails.type === 'me';\n\n  const isImage = message.contentType === 'image';\n\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <Stack direction=\"row\" justifyContent={currentUser ? 'flex-end' : 'unset'} sx={{ mb: 3 }}>\n      {!currentUser && (\n        <Avatar\n          alt={senderDetails.name}\n          src={senderDetails.avatar}\n          sx={{ width: 32, height: 32, mr: 2 }}\n        />\n      )}\n\n      <Stack spacing={1} alignItems=\"flex-end\">\n        <Typography\n          noWrap\n          variant=\"caption\"\n          sx={{\n            color: 'text.disabled',\n            ...(!currentUser && {\n              mr: 'auto',\n            }),\n          }}\n        >\n          {!currentUser && `${firstName},`} &nbsp;\n          {formatDistanceToNowStrict(new Date(message.createdAt), {\n            addSuffix: true,\n          })}\n        </Typography>\n\n        <Stack\n          sx={{\n            p: 1.5,\n            minWidth: 48,\n            maxWidth: 320,\n            borderRadius: 1,\n            overflow: 'hidden',\n            typography: 'body2',\n            bgcolor: 'background.neutral',\n            ...(currentUser && {\n              color: 'grey.800',\n              bgcolor: 'primary.lighter',\n            }),\n            ...(isImage && {\n              p: 0,\n            }),\n          }}\n        >\n          {isImage ? (\n            <Image\n              alt=\"attachment\"\n              src={message.body}\n              onClick={() => onOpenLightbox(message.body)}\n              sx={{\n                cursor: 'pointer',\n                '&:hover': {\n                  opacity: 0.9,\n                },\n              }}\n            />\n          ) : (\n            message.body\n          )}\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../../../components/scrollbar';\nimport Lightbox from '../../../../components/lightbox';\n//\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object,\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef(null);\n\n  const [selectedImage, setSelectedImage] = useState(-1);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const imagesLightbox = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => ({ src: messages.body }));\n\n  const handleOpenLightbox = (imageUrl) => {\n    const imageIndex = imagesLightbox.findIndex((image) => image.src === imageUrl);\n    setSelectedImage(imageIndex);\n  };\n\n  const handleCloseLightbox = () => {\n    setSelectedImage(-1);\n  };\n\n  return (\n    <>\n      <Scrollbar\n        scrollableNodeProps={{\n          ref: scrollRef,\n        }}\n        sx={{ p: 3, height: 1 }}\n      >\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={() => handleOpenLightbox(message.body)}\n          />\n        ))}\n      </Scrollbar>\n\n      <Lightbox\n        index={selectedImage}\n        slides={imagesLightbox}\n        open={selectedImage >= 0}\n        close={handleCloseLightbox}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Stack, Box, Link, Typography, IconButton } from '@mui/material';\n// utils\nimport { fToNow } from '../../../../utils/formatTime';\n// components\nimport Iconify from '../../../../components/iconify';\nimport BadgeStatus from '../../../../components/badge-status';\nimport { CustomAvatar, CustomAvatarGroup } from '../../../../components/custom-avatar';\n\n// ----------------------------------------------------------------------\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array,\n};\n\nexport default function ChatHeaderDetail({ participants }) {\n  const isGroup = participants.length > 1;\n\n  const participantInfo = participants.length ? participants[0] : null;\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        p: (theme) => theme.spacing(2, 1, 2, 2),\n      }}\n    >\n      {isGroup ? (\n        <Stack flexGrow={1}>\n          <CustomAvatarGroup max={3}>\n            {participants.map((participant) => (\n              <CustomAvatar key={participant.id} alt={participant.name} src={participant.avatar} />\n            ))}\n          </CustomAvatarGroup>\n\n          <Link\n            variant=\"body2\"\n            sx={{\n              mt: 0.5,\n              alignItems: 'center',\n              display: 'inline-flex',\n              color: 'text.secondary',\n            }}\n          >\n            {participants.length} persons\n            <Iconify icon=\"eva:arrow-ios-forward-fill\" width={16} />\n          </Link>\n        </Stack>\n      ) : (\n        <Stack flexGrow={1} direction=\"row\" alignItems=\"center\" spacing={2}>\n          <CustomAvatar\n            src={participantInfo?.avatar}\n            alt={participantInfo?.name}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status={participantInfo?.status} />,\n            }}\n          />\n\n          <div>\n            <Typography variant=\"subtitle2\">{participantInfo?.name}</Typography>\n\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {participantInfo?.status === 'offline' ? (\n                participantInfo?.lastActivity && fToNow(participantInfo?.lastActivity)\n              ) : (\n                <Box component=\"span\" sx={{ textTransform: 'capitalize' }}>\n                  {participantInfo?.status}\n                </Box>\n              )}\n            </Typography>\n          </div>\n        </Stack>\n      )}\n\n      <IconButton>\n        <Iconify icon=\"eva:phone-fill\" />\n      </IconButton>\n\n      <IconButton>\n        <Iconify icon=\"eva:video-fill\" />\n      </IconButton>\n\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Chip, Stack, Avatar, TextField, Typography, Autocomplete } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport SearchNotFound from '../../../../components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nChatHeaderCompose.propTypes = {\n  sx: PropTypes.object,\n  contacts: PropTypes.array,\n  recipients: PropTypes.array,\n  onAddRecipients: PropTypes.func,\n};\n\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipients, sx, ...other }) {\n  const [searchRecipients, setSearchRecipients] = useState('');\n\n  const handleAddRecipients = (selectedRecipients) => {\n    setSearchRecipients('');\n    onAddRecipients(selectedRecipients);\n  };\n\n  return (\n    <Stack\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        py: 2,\n        px: 2.5,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <Autocomplete\n        sx={{ minWidth: 240 }}\n        multiple\n        popupIcon={null}\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\n        onChange={(event, value) => handleAddRecipients(value)}\n        onInputChange={(event, value) => setSearchRecipients(value)}\n        options={contacts}\n        getOptionLabel={(recipient) => recipient.name}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            size=\"small\"\n            placeholder={recipients.length ? '+Recipients' : ''}\n          />\n        )}\n        renderOption={(props, recipient, { inputValue, selected }) => {\n          const { name, avatar } = recipient;\n          const matches = match(name, inputValue);\n          const parts = parse(name, matches);\n\n          return (\n            <Box\n              component=\"li\"\n              sx={{\n                p: '12px !important',\n              }}\n              {...props}\n            >\n              <Box\n                sx={{\n                  mr: 1.5,\n                  width: 32,\n                  height: 32,\n                  overflow: 'hidden',\n                  borderRadius: '50%',\n                  position: 'relative',\n                }}\n              >\n                <Avatar alt={name} src={avatar} />\n                <Box\n                  sx={{\n                    top: 0,\n                    opacity: 0,\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    position: 'absolute',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                    transition: (theme) =>\n                      theme.transitions.create('opacity', {\n                        easing: theme.transitions.easing.easeInOut,\n                        duration: theme.transitions.duration.shorter,\n                      }),\n                    ...(selected && {\n                      opacity: 1,\n                      color: 'primary.main',\n                    }),\n                  }}\n                >\n                  <Iconify icon=\"eva:checkmark-fill\" />\n                </Box>\n              </Box>\n\n              {parts.map((part, index) => (\n                <Typography\n                  key={index}\n                  variant=\"subtitle2\"\n                  color={part.highlight ? 'primary' : 'textPrimary'}\n                >\n                  {part.text}\n                </Typography>\n              ))}\n            </Box>\n          );\n        }}\n        renderTags={(selectedRecipients, getTagProps) =>\n          selectedRecipients.map((recipient, index) => (\n            <Chip\n              {...getTagProps({ index })}\n              key={recipient.id}\n              size=\"small\"\n              label={recipient.name}\n              avatar={<Avatar alt={recipient.name} src={recipient.avatar} />}\n            />\n          ))\n        }\n      />\n    </Stack>\n  );\n}\n","import { useEffect } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n// @mui\nimport { Card, Container, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  getContacts,\n  getConversation,\n  getParticipants,\n  getConversations,\n  addRecipients,\n  sendMessage,\n  markConversationAsRead,\n  resetActiveConversation,\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport { useSettingsContext } from '../../../components/settings';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport ChatNav from './nav/ChatNav';\nimport ChatRoom from './room/ChatRoom';\nimport ChatMessageInput from './message/ChatMessageInput';\nimport ChatMessageList from './message/ChatMessageList';\nimport ChatHeaderDetail from './header/ChatHeaderDetail';\nimport ChatHeaderCompose from './header/ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\nexport default function Chat() {\n  const { themeStretch } = useSettingsContext();\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  const { conversationKey = '' } = useParams();\n\n  const { contacts, recipients, participants, activeConversationId, conversations } = useSelector(\n    (state) => state.chat\n  );\n\n  const selectedConversation = useSelector(() => {\n    if (activeConversationId) {\n      return conversations.byId[activeConversationId];\n    }\n\n    return {\n      id: '',\n      messages: [],\n      participants: [],\n      unreadCount: 0,\n      type: '',\n    };\n  });\n\n  const detailView = !!conversationKey;\n\n  const displayParticipants = participants.filter((item) => item.id !== CURRENT_USER_ID);\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(`${conversationKey}`));\n      try {\n        await dispatch(getConversation(`${conversationKey}`));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (selectedRecipients) => {\n    dispatch(addRecipients(selectedRecipients));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      dispatch(sendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Container maxWidth={themeStretch ? false : 'xl'}>\n      <CustomBreadcrumbs\n        heading=\"Chat\"\n        links={[\n          {\n            name: 'Dashboard',\n            href: PATH_DASHBOARD.root,\n          },\n          { name: 'Chat' },\n        ]}\n      />\n\n      <Card sx={{ height: '72vh', display: 'flex' }}>\n        <ChatNav conversations={conversations} activeConversationId={activeConversationId} />\n\n        <Stack flexGrow={1}>\n          {detailView ? (\n            <ChatHeaderDetail participants={displayParticipants} />\n          ) : (\n            <ChatHeaderCompose\n              recipients={recipients}\n              contacts={Object.values(contacts.byId)}\n              onAddRecipients={handleAddRecipients}\n            />\n          )}\n\n          <Stack\n            direction=\"row\"\n            flexGrow={1}\n            sx={{\n              overflow: 'hidden',\n              borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Stack flexGrow={1}>\n              <ChatMessageList conversation={selectedConversation} />\n\n              <ChatMessageInput\n                conversationId={activeConversationId}\n                onSend={handleSendMessage}\n                disabled={\n                  pathname === PATH_DASHBOARD.chat.root || pathname === PATH_DASHBOARD.chat.new\n                }\n              />\n            </Stack>\n\n            {detailView && (\n              <ChatRoom conversation={selectedConversation} participants={displayParticipants} />\n            )}\n          </Stack>\n        </Stack>\n      </Card>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport { Chat } from '../../sections/@dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Chat | Minimal UI</title>\n      </Helmet>\n\n      <Chat />\n    </>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'yyyy MM dd';\n  // console.log (fm);\n  return date ? format(new Date(date), fm) : '';\n}\n\n\nexport function fEspDate(date, newFormat) {\n\n    const Meses = 'Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre'.split(',')\n    let result = \"\";\n\n        \n    if (date) {\n        result = `${date.getFullYear()}-${Meses[date.getMonth() + 1]}-${date.getDay()}`;\n    }\n\n    return result;\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":["StyledBadgeStatus","styled","theme","ownerState","status","size","width","height","display","borderRadius","alignItems","justifyContent","content","backgroundColor","palette","common","white","warning","main","transform","error","success","text","disabled","info","BadgeStatus","sx","useTheme","props","TextField","select","SelectProps","native","typography","subtitle2","padding","spacing","paddingRight","Number","shape","alpha","grey","shouldForwardProp","prop","border","transition","transitions","create","duration","shorter","boxShadow","customShadows","z20","breakpoints","up","IncrementerButton","forwardRef","ref","quantity","onIncrease","onDecrease","disabledIncrease","disabledDecrease","other","Stack","flexShrink","direction","mb","py","px","IconButton","color","onClick","icon","propTypes","PropTypes","StyledLightbox","GlobalStyles","styles","fontSize","h5","fontWeight","lineHeight","body2","filter","opacity","black","ICON_SIZE","Lightbox","slides","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","totalItems","length","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","index","toolbar","buttons","DisplayTotal","render","iconClose","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","currentIndex","useLightboxState","state","Typography","className","pl","left","position","minWidth","textAlign","SkeletonPostItem","Grid","item","xs","sm","md","variant","Box","mt","mx","flexGrow","SkeletonPostDetails","ml","SkeletonProductItem","Card","paddingTop","p","SkeletonMailNavItem","SkeletonKanbanColumn","gap","gridTemplateColumns","Array","map","_","Paper","SkeletonProductDetails","container","lg","SkeletonConversationItem","ChatNavItem","conversation","openNav","isSelected","onSelect","details","getDetails","lastActivity","messages","createdAt","isGroup","otherParticipants","isUnread","unreadCount","hasOnlineInGroup","includes","ListItemButton","disableGutters","bgcolor","ListItemAvatar","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","compact","slice","participant","alt","name","src","avatar","id","BadgeProps","ListItemText","primary","displayNames","primaryTypographyProps","noWrap","secondary","displayText","secondaryTypographyProps","component","formatDistanceToNowStrict","Date","addSuffix","currentUserId","participants","join","lastMessage","sender","senderId","message","contentType","body","ChatNavList","conversations","onCloseNav","selected","navigate","useNavigate","isDesktop","useResponsive","loading","allIds","List","disablePadding","conversationId","byId","conversationKey","type","otherParticipant","find","username","PATH_DASHBOARD","handleSelectConversation","ChatNavSearch","value","onChange","onClickAway","ClickAwayListener","fullWidth","placeholder","InputProps","startAdornment","InputAdornment","STATUS","ChatNavAccount","user","useAuthContext","useState","setStatus","openPopover","setOpenPopover","photoURL","displayName","event","currentTarget","cursor","open","onClose","arrow","pr","email","Tooltip","title","Divider","MenuItem","m","Select","target","textTransform","right","top","option","ChatNavSearchResults","searchContacts","searchResults","onSelectContact","isNotFound","paragraph","query","result","Avatar","mr","StyledToggleButton","disableRipple","zIndex","contrastText","darker","ChatNav","activeConversationId","setOpenNav","setSearchResults","setSearchContacts","isCollapse","useEffect","handleOpenNav","handleCloseNav","handleToggleNav","handleChangeSearch","axios","params","response","data","results","console","renderContent","RouterLink","to","Drawer","PaperProps","pb","visibility","ModalProps","keepMounted","ChatRoomCollapseButton","onCollapse","children","Button","endIcon","ChatRoomAttachments","totalAttachments","uniq","flatten","attachments","overflow","borderTop","divider","borderBottom","attachment","AttachmentItem","imageView","file","preview","onDownload","log","fDateTime","dateCreated","ChatRoomSingle","role","Collapse","in","address","phone","row","ChatRoomParticipantInfoDialog","Dialog","maxWidth","DialogContent","pt","ChatRoomGroup","selectUserId","onOpenUserInfo","HEIGHT","Participant","onOpen","z8","background","paper","borderRight","neutral","ChatRoom","openInfo","setOpenInfo","openAttachments","setOpenAttachments","openParticipants","setOpenParticipants","selectUser","setSelectUser","participantId","anchor","ChatMessageInput","onSend","fileInputRef","useRef","setMessage","handleClickAttach","current","click","InputBase","onKeyUp","key","messageId","uuidv4","endAdornment","style","ChatMessageItem","onOpenLightbox","senderDetails","currentUser","isImage","firstName","split","ChatMessageList","scrollRef","selectedImage","setSelectedImage","scrollTop","scrollHeight","imagesLightbox","scrollableNodeProps","imageUrl","imageIndex","findIndex","image","handleOpenLightbox","close","ChatHeaderDetail","participantInfo","max","Link","fToNow","ChatHeaderCompose","contacts","recipients","onAddRecipients","searchRecipients","setSearchRecipients","Autocomplete","multiple","popupIcon","noOptionsText","selectedRecipients","onInputChange","options","getOptionLabel","recipient","renderInput","renderOption","inputValue","matches","match","parts","parse","easing","easeInOut","part","highlight","renderTags","getTagProps","Chip","label","Chat","themeStretch","useSettingsContext","dispatch","useDispatch","pathname","useLocation","useParams","useSelector","chat","selectedConversation","detailView","displayParticipants","getConversations","getContacts","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","sendMessage","Container","heading","links","href","Object","values","addRecipients","ChatPage","fDate","date","newFormat","fm","format","fEspDate","Meses","getFullYear","getMonth","getDay","fTimestamp","getTime","formatDistanceToNow","replace","c","r","Math","random","toString"],"sourceRoot":""}