{"version":3,"file":"static/js/5604.deebfe69.chunk.js","mappings":"qcAqCe,SAASA,IAEpB,OAAsCC,EAAAA,EAAAA,WAAS,GAAM,eAA9CC,EAAW,KAAEC,EAAc,KAClC,GAAsCF,EAAAA,EAAAA,UAAS,MAAK,eAA7CG,EAAW,KAAEC,EAAc,KAClC,GAAkCJ,EAAAA,EAAAA,UAASK,EAAAA,IAAY,eAAhDC,EAAS,KAAEC,EAAY,KAC9B,GAA0BP,EAAAA,EAAAA,UAAS,IAAG,eAA/BQ,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,MAWXC,EAAqB,WACvBR,EAAe,KACnB,EASMS,EAAkB,SAACC,GACrB,IAAMC,EAAYT,EAAUU,QAAO,SAACC,GAAG,OAAKA,EAAIH,KAAOA,CAAE,IACzDP,EAAaQ,GACbb,GAAe,EACnB,EAEQgB,GAAoBC,EAAAA,EAAAA,MAApBD,gBACFE,EAAQ,yCAAG,WAAOC,GAAI,+FAEd,IAAIC,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAAS,IAAI,IAAE,KAAD,EACxDL,EAAgB,gCAAgC,+CAEhDO,QAAQC,MAAM,EAAD,IAAQ,wDAE5B,gBAPa,sCAWRC,EAAU,CACZ,CACIC,MAAO,SACPC,WAAY,SACZC,KAAM,EACNC,UAAU,GAEd,CACIH,MAAO,aACPC,WAAY,OACZC,KAAM,EACNC,UAAU,GAGd,CACIH,MAAO,gBACPC,WAAY,UACZC,KAAM,EACNC,UAAU,GAGd,CACIH,MAAO,SACPC,WAAY,WACZG,MAAO,SACPC,MAAO,GACPC,UAAU,EACVC,YAAY,EACZC,mBAAmB,EACnBC,WAAY,SAACC,GAAM,OACf,SAAC,IAAU,CAACC,MAAOpC,EAAc,UAAY,UAAWqC,QAAS,SAACC,GAAC,OA/DrD,SAACA,EAAGC,GAC1BjC,EAASiC,GACTtC,EAAeqC,EAAEE,cACrB,CA4DoFC,CAAkBH,EAAGH,EAAOrB,IAAIH,GAAG,EAAC,UACxG,SAAC,IAAO,CAAC+B,KAAK,4BACL,IAKzB,OACI,iCACI,SAAC,KAAM,WACH,2CAGJ,UAAC,IAAS,YAEN,SAAC,IAAiB,CACdC,SACI,yCAEJC,MAAO,CACH,CAAEC,KAAM,KAEZC,QACI,SAAC,IAAM,CACHC,UAAWC,EAAAA,GACXC,GAAIC,EAAAA,GAAAA,OAAAA,IACJC,QAAQ,YACRC,WAAW,SAAC,IAAO,CAACV,KAAK,kBAAmB,iCASxD,SAAC,IAAI,WACD,SAAC,IAAc,CAACW,GAAI,CAAEC,SAAU,WAAYC,SAAU,SAAU,UAC5D,SAAC,IAAqB,CAACC,SAAUC,EAAAA,GAA0BjC,QAASA,YAOhF,UAAC,IAAW,CACRkC,KAAM1D,EACN2D,QAASlD,EACTmD,MAAM,YACNP,GAAI,CAAEvB,MAAO,KAAM,WAEnB,UAAC,IAAQ,CACLO,QAAS,WAxHrBtC,GAAe,GA0HCU,GACJ,EACA4C,GAAI,CAAEjB,MAAO,cAAe,WAE5B,SAAC,IAAO,CAACM,KAAK,wBAAwB,aAI1C,UAAC,IAAQ,CACLL,QAAS,WAvHH,IAAC1B,IAwHWN,EAvH9BiB,QAAQuC,IAAIlD,GACZJ,EAAS2C,EAAAA,GAAAA,OAAAA,KAA2BvC,IAuHpBF,GACJ,EAAE,WAEF,SAAC,IAAO,CAACiC,KAAK,kBAAkB,gBAMxC,SAAC,IAAa,CACVgB,KAAM5D,EACN6D,QA9Ie,WACvB5D,GAAe,EACnB,EA6IY+D,MAAM,SACNC,QAAQ,6BACRjB,QACI,SAAC,IAAM,CAACK,QAAQ,YAAYf,MAAM,QAAQC,QApI9B,WACxB3B,EAAgBL,GAChBY,EAASZ,EACb,EAiIuF,wBAQ3F,C","sources":["pages/Puesto/BandejaPuesto.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// import { paramCase } from 'change-case';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n    Card,\n    Button,\n    // Divider,\n    Container,\n    IconButton,\n    TableContainer,\n    Typography,\n    MenuItem\n} from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\nimport { useSnackbar } from 'notistack';\n// routes\nimport { paramCase } from 'change-case';\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// _mock_\n// import { _userList, _companyList } from '../../_mock/arrays';\nimport { _puestoList } from '../../_mock/arrays';\n// components\nimport Iconify from '../../components/iconify';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport Label from '../../components/label';\nimport MenuPopover from '../../components/menu-popover';\nimport { END_POINT_BANDEJA_PUESTO } from '../../config-global';\n\n\n\n\nexport default function BandejaPuesto() {\n\n    const [openConfirm, setOpenConfirm] = useState(false);\n    const [openPopover, setOpenPopover] = useState(null);\n    const [tableData, setTableData] = useState(_puestoList);\n    const [IdAUX, setIdAUX] = useState('');\n    const navigate = useNavigate();\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true);\n    };\n    const handleCloseConfirm = () => {\n        setOpenConfirm(false);\n    };\n    const handleOpenPopover = (e, Id) => {\n        setIdAUX(Id)\n        setOpenPopover(e.currentTarget);\n    };\n    const handleClosePopover = () => {\n        setOpenPopover(null);\n    };\n    const handleEditRow = (id) => {\n        console.log(id)\n        navigate(PATH_DASHBOARD.puesto.edit(id));\n    };\n    const JustAfterClicDelete = () => {\n        handleDeleteRow(IdAUX);\n        onDelete(IdAUX);\n    }\n    const handleDeleteRow = (id) => {\n        const deleteRow = tableData.filter((row) => row.id !== id);\n        setTableData(deleteRow);\n        setOpenConfirm(false);\n    };\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onDelete = async (data) => {\n        try {\n            await new Promise((resolve) => setTimeout(resolve, 500));\n            enqueueSnackbar('Listo, el puesto fue borrado');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    // const stringAUX = \" /\";\n\n    const columns = [\n        {\n            field: 'nombre',\n            headerName: 'Puesto',\n            flex: 1,\n            editable: false,\n        },\n        {\n            field: 'nombreArea',\n            headerName: 'Area',\n            flex: 1,\n            editable: false,\n            // renderCell: (params) => RenderEmpresaArea(params.row.empresa, params.row.areaName),\n        },\n        {\n            field: 'nombreEmpresa',\n            headerName: 'Empresa',\n            flex: 1,\n            editable: false,\n            // renderCell: (params) => RenderEmpresaArea(params.row.empresa, params.row.areaName),\n        },\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 90,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n                <IconButton color={openPopover ? 'inherit' : 'default'} onClick={(e) => handleOpenPopover(e, params.row.id)}>\n                    <Iconify icon=\"eva:more-vertical-fill\" />\n                </IconButton>\n            ),\n        },\n    ];\n\n    return (\n        <>\n            <Helmet>\n                <title> Puesto </title>\n            </Helmet>\n\n            <Container>\n\n                <CustomBreadcrumbs\n                    heading={\n                        <>Puesto</>\n                    }\n                    links={[\n                        { name: '' },\n                    ]}\n                    action={\n                        <Button\n                            component={RouterLink}\n                            to={PATH_DASHBOARD.puesto.new}\n                            variant=\"contained\"\n                            startIcon={<Iconify icon=\"eva:plus-fill\" />}\n                        >\n                            Registrar puesto\n                        </Button>\n                    }\n                />\n\n\n\n                <Card>\n                    <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n                        <GenericDataGridCustom EndPoint={END_POINT_BANDEJA_PUESTO} columns={columns} />\n                    </TableContainer>\n                </Card>\n            </Container>\n\n\n\n            <MenuPopover\n                open={openPopover}\n                onClose={handleClosePopover}\n                arrow=\"right-top\"\n                sx={{ width: 140 }}\n            >\n                <MenuItem\n                    onClick={() => {\n                        handleOpenConfirm();\n                        handleClosePopover();\n                    }}\n                    sx={{ color: 'error.main' }}\n                >\n                    <Iconify icon=\"eva:trash-2-outline\" />\n                    Borrar\n                </MenuItem>\n\n                <MenuItem\n                    onClick={() => {\n                        handleEditRow(IdAUX);\n                        handleClosePopover();\n                    }}\n                >\n                    <Iconify icon=\"eva:edit-fill\" />\n                    Editar\n                </MenuItem>\n            </MenuPopover>\n\n\n            <ConfirmDialog\n                open={openConfirm}\n                onClose={handleCloseConfirm}\n                title=\"Borrar\"\n                content=\"Deseas borrar este puesto?\"\n                action={\n                    <Button variant=\"contained\" color=\"error\" onClick={JustAfterClicDelete}>\n                        Borrar\n                    </Button>\n                }\n            />\n\n        </>\n    );\n}\n\n\nfunction RenderStatus(getStatus,toshow) {\n    console.log(toshow)\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    return (\n        <Label\n            variant={isLight ? 'soft' : 'filled'}\n            color={(getStatus === 'Bloqueado' && 'error') || (getStatus === 'Inactivo' && 'warning') || 'success'}\n            sx={{ mx: 'auto' }}\n        >\n            {getStatus}\n        </Label>\n    );\n}\n\nfunction RenderEmpresaArea(empresa,area) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    return (\n        <a>\n\n            <Label\n                variant={isLight ? 'soft' : 'filled'}\n                color='success'\n                sx={{ mx: 'auto' }}\n            >\n                {empresa}\n            </Label>\n\n            <Label\n                variant={isLight ? 'soft' : 'filled'}\n                color='info'\n                sx={{ mx: 'auto' }}\n            >\n                {area}\n            </Label>\n        </a>\n    );\n}\n\n\n"],"names":["BandejaPuesto","useState","openConfirm","setOpenConfirm","openPopover","setOpenPopover","_puestoList","tableData","setTableData","IdAUX","setIdAUX","navigate","useNavigate","handleClosePopover","handleDeleteRow","id","deleteRow","filter","row","enqueueSnackbar","useSnackbar","onDelete","data","Promise","resolve","setTimeout","console","error","columns","field","headerName","flex","editable","align","width","sortable","filterable","disableColumnMenu","renderCell","params","color","onClick","e","Id","currentTarget","handleOpenPopover","icon","heading","links","name","action","component","RouterLink","to","PATH_DASHBOARD","variant","startIcon","sx","position","overflow","EndPoint","END_POINT_BANDEJA_PUESTO","open","onClose","arrow","log","title","content"],"sourceRoot":""}