{"version":3,"file":"static/js/6002.31180d76.chunk.js","mappings":"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","sources":["pages/components/mui/MUIBadgePage.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Container, Typography, Badge } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/iconify';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nexport default function MUIBadgePage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Badge | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Badge\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Badge' },\n            ]}\n            moreLink={['https://mui.com/components/badges']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <Block\n            title=\"Basic\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            <Badge badgeContent={4}>\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge badgeContent={4} color=\"primary\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge badgeContent={4} color=\"secondary\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge badgeContent={4} color=\"info\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge badgeContent={4} color=\"success\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge badgeContent={4} color=\"warning\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge badgeContent={4} color=\"error\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n          </Block>\n\n          <Block\n            title=\"Maximum value\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            <Badge\n              badgeContent={99}\n              color=\"error\"\n              children={<Iconify icon=\"eva:email-fill\" width={24} />}\n            />\n            <Badge\n              badgeContent={100}\n              color=\"error\"\n              children={<Iconify icon=\"eva:email-fill\" width={24} />}\n            />\n            <Badge\n              badgeContent={1000}\n              max={999}\n              color=\"error\"\n              children={<Iconify icon=\"eva:email-fill\" width={24} />}\n            />\n          </Block>\n\n          <Block\n            title=\"Dot badge\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            <Badge color=\"info\" variant=\"dot\">\n              <Iconify icon=\"eva:email-fill\" width={24} />\n            </Badge>\n\n            <Badge color=\"info\" variant=\"dot\">\n              <Typography>Typography</Typography>\n            </Badge>\n          </Block>\n\n          <Block\n            title=\"Badge overlap\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              '& > *': { mx: 1 },\n            }}\n          >\n            <Badge color=\"info\" badgeContent=\" \">\n              <Box sx={{ width: 40, height: 40, bgcolor: 'warning.main' }} />\n            </Badge>\n\n            <Badge color=\"info\" badgeContent=\" \" variant=\"dot\">\n              <Box sx={{ width: 40, height: 40, bgcolor: 'warning.main' }} />\n            </Badge>\n\n            <Badge color=\"info\" overlap=\"circular\" badgeContent=\" \">\n              <Box\n                sx={{\n                  width: 40,\n                  height: 40,\n                  borderRadius: '50%',\n                  bgcolor: 'warning.main',\n                }}\n              />\n            </Badge>\n\n            <Badge color=\"info\" overlap=\"circular\" badgeContent=\" \" variant=\"dot\">\n              <Box\n                sx={{\n                  width: 40,\n                  height: 40,\n                  borderRadius: '50%',\n                  bgcolor: 'warning.main',\n                }}\n              />\n            </Badge>\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"],"names":["MUIBadgePage","sx","pt","pb","bgcolor","theme","palette","mode","heading","links","name","href","PATH_PAGE","moreLink","my","columns","xs","md","spacing","title","display","alignItems","justifyContent","mx","badgeContent","icon","width","color","children","max","variant","height","overlap","borderRadius","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","margin","padding","MasonryRoot","styled","overridesResolver","props","styles","root","ownerState","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","flushSync","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","map","_","index","_jsx","_jsxs","as","clsx"],"sourceRoot":""}