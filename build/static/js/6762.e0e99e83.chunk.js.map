{"version":3,"file":"static/js/6762.e0e99e83.chunk.js","mappings":"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","sources":["components/empty-content/EmptyContent.js","components/table/utils.js","components/table/useTable.js","components/table/TableNoData.js","components/table/TableSkeleton.js","components/table/TableEmptyRows.js","components/table/TableHeadCustom.js","components/table/TableSelectedAction.js","components/table/TablePaginationCustom.js","components/text-max-line/useTypography.js","components/text-max-line/TextMaxLine.js","hooks/useCopyToClipboard.js","hooks/useDoubleClick.js","sections/@dashboard/file/FileInvitedItem.js","sections/@dashboard/file/portal/FileShareDialog.js","sections/@dashboard/file/portal/FileDetailsDrawer.js","sections/@dashboard/file/item/FileCard.js","sections/@dashboard/file/item/FileTableRow.js","sections/@dashboard/file/portal/FileNewFolderDialog.js","sections/@dashboard/file/item/FileFolderCard.js","sections/@dashboard/file/filter/FileFilterName.js","sections/@dashboard/file/filter/FileFilterButton.js","sections/@dashboard/file/filter/FileFilterType.js","sections/@dashboard/file/portal/FileActionSelected.js","sections/@dashboard/file/view/FileListView.js","sections/@dashboard/file/FilePanel.js","sections/@dashboard/file/view/FileGridView.js","sections/@dashboard/file/FileChangeViewButton.js","utils/formatTime.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { Typography, Stack } from '@mui/material';\n//\nimport Image from '../image';\n\n// ----------------------------------------------------------------------\n\nEmptyContent.propTypes = {\n  sx: PropTypes.object,\n  img: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default function EmptyContent({ title, description, img, sx, ...other }) {\n  return (\n    <Stack\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        height: 1,\n        textAlign: 'center',\n        p: (theme) => theme.spacing(8, 2),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Image\n        disabledEffect\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </Stack>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page, rowsPerPage, arrayLength) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useTable(props) {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked, newSelecteds) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }, []);\n\n  const onChangeDense = useCallback((event) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\nTableNoData.propTypes = {\n  isNotFound: PropTypes.bool,\n};\n\nexport default function TableNoData({ isNotFound }) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function TableSkeleton({ ...other }) {\n  return (\n    <TableRow {...other}>\n      <TableCell colSpan={12}>\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\n          <Skeleton\n            variant=\"rectangular\"\n            width={40}\n            height={40}\n            sx={{ borderRadius: 1, flexShrink: 0 }}\n          />\n          <Skeleton variant=\"text\" width=\"100%\" height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n        </Stack>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTableEmptyRows.propTypes = {\n  height: PropTypes.number,\n  emptyRows: PropTypes.number,\n};\n\nexport default function TableEmptyRows({ emptyRows, height }) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n};\n\n// ----------------------------------------------------------------------\n\nTableHeadCustom.propTypes = {\n  sx: PropTypes.object,\n  onSort: PropTypes.func,\n  orderBy: PropTypes.string,\n  headLabel: PropTypes.array,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllRows: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']),\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event) => onSelectAllRows(event.target.checked)}\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Checkbox, Typography, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTableSelectedAction.propTypes = {\n  sx: PropTypes.object,\n  dense: PropTypes.bool,\n  action: PropTypes.node,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllRows: PropTypes.func,\n};\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event) => onSelectAllRows(event.target.checked)}\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} Seleccionados\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Switch, TablePagination, FormControlLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTablePaginationCustom.propTypes = {\n  dense: PropTypes.bool,\n  onChangeDense: PropTypes.func,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  sx: PropTypes.object,\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 25],\n  sx,\n  ...other\n}) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","// @mui\nimport { useTheme } from '@mui/material/styles';\n// hooks\nimport { useWidth } from '../../hooks/useResponsive';\n// theme\nimport { remToPx } from '../../theme/typography';\n\n// ----------------------------------------------------------------------\n\nexport default function useTypography(variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport { Typography, Link } from '@mui/material';\n//\nimport useTypography from './useTypography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    };\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nTextMaxLine.propTypes = {\n  sx: PropTypes.object,\n  asLink: PropTypes.bool,\n  line: PropTypes.number,\n  persistent: PropTypes.bool,\n  children: PropTypes.node,\n  variant: PropTypes.oneOf([\n    'body1',\n    'body2',\n    'button',\n    'caption',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'inherit',\n    'overline',\n    'subtitle1',\n    'subtitle2',\n  ]),\n};\n\nexport default TextMaxLine;\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nfunction useCopyToClipboard() {\n  const [copiedText, setCopiedText] = useState(null);\n\n  const copy = async (text) => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported');\n      return false;\n    }\n\n    // Try to save to clipboard then save it in the state if worked\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(text);\n      return true;\n    } catch (error) {\n      console.warn('Copy failed', error);\n      setCopiedText(null);\n      return false;\n    }\n  };\n\n  return { copiedText, copy };\n}\n\nexport default useCopyToClipboard;\n","import { useCallback, useRef } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useDoubleClick({ click, doubleClick, timeout = 250 }) {\n  const clickTimeout = useRef();\n\n  const clearClickTimeout = () => {\n    if (clickTimeout) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n  };\n\n  return useCallback(\n    (event) => {\n      clearClickTimeout();\n      if (click && event.detail === 1) {\n        clickTimeout.current = setTimeout(() => {\n          click(event);\n        }, timeout);\n      }\n      if (event.detail % 2 === 0) {\n        doubleClick(event);\n      }\n    },\n    [click, doubleClick, timeout]\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Avatar,\n  Button,\n  Divider,\n  Tooltip,\n  ListItem,\n  MenuItem,\n  ListItemText,\n  ListItemAvatar,\n} from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\nimport MenuPopover from '../../../components/menu-popover';\n\n// ----------------------------------------------------------------------\n\nFileInvitedItem.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    avatar: PropTypes.string,\n    permission: PropTypes.string,\n  }),\n};\n\nexport default function FileInvitedItem({ person }) {\n  const [permission, setPermission] = useState(person.permission);\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangePermission = (newPermission) => {\n    setPermission(newPermission);\n  };\n\n  return (\n    <>\n      <ListItem disableGutters>\n        <ListItemAvatar>\n          <Avatar alt={person.name} src={person.avatar} />\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={person.name}\n          secondary={\n            <Tooltip title={person.email}>\n              <span>{person.email}</span>\n            </Tooltip>\n          }\n          primaryTypographyProps={{ noWrap: true, typography: 'subtitle2' }}\n          secondaryTypographyProps={{ noWrap: true }}\n          sx={{ flexGrow: 1, pr: 1 }}\n        />\n\n        <Button\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon={openPopover ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n          onClick={handleOpenPopover}\n          sx={{\n            flexShrink: 0,\n            textTransform: 'unset',\n            fontWeight: 'fontWeightMedium',\n            '& .MuiButton-endIcon': {\n              ml: 0,\n            },\n            ...(openPopover && {\n              bgcolor: 'action.selected',\n            }),\n          }}\n        >\n          Can {permission}\n        </Button>\n      </ListItem>\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ width: 160 }}>\n        <>\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n              handleChangePermission('view');\n            }}\n            sx={{\n              ...(permission === 'view' && {\n                bgcolor: 'action.selected',\n              }),\n            }}\n          >\n            <Iconify icon=\"eva:eye-fill\" />\n            Can view\n          </MenuItem>\n\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n              handleChangePermission('edit');\n            }}\n            sx={{\n              ...(permission === 'edit' && {\n                bgcolor: 'action.selected',\n              }),\n            }}\n          >\n            <Iconify icon=\"eva:edit-fill\" />\n            Can edit\n          </MenuItem>\n\n          <Divider sx={{ borderStyle: 'dashed' }} />\n\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n            }}\n            sx={{ color: 'error.main' }}\n          >\n            <Iconify icon=\"eva:trash-2-outline\" />\n            Remove\n          </MenuItem>\n        </>\n      </MenuPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport {\n  List,\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\n//\nimport FileInvitedItem from '../FileInvitedItem';\n\n// ----------------------------------------------------------------------\n\nFileShareDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  shared: PropTypes.array,\n  onCopyLink: PropTypes.func,\n  inviteEmail: PropTypes.string,\n  onChangeInvite: PropTypes.func,\n};\n\nexport default function FileShareDialog({\n  shared,\n  inviteEmail,\n  onCopyLink,\n  onChangeInvite,\n  //\n  open,\n  onClose,\n  ...other\n}) {\n  const hasShared = shared && !!shared.length;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle> Invite </DialogTitle>\n\n      <DialogContent sx={{ overflow: 'unset' }}>\n        {onChangeInvite && (\n          <Stack direction=\"row\" spacing={1} sx={{ mb: 3 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              value={inviteEmail}\n              placeholder=\"Email\"\n              onChange={onChangeInvite}\n            />\n            <Button disabled={!inviteEmail} variant=\"contained\" sx={{ flexShrink: 0 }}>\n              Send Invite\n            </Button>\n          </Stack>\n        )}\n\n        {hasShared && (\n          <Scrollbar sx={{ maxHeight: 60 * 6 }}>\n            <List disablePadding>\n              {shared.map((person) => (\n                <FileInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          </Scrollbar>\n        )}\n      </DialogContent>\n\n      <DialogActions sx={{ justifyContent: 'space-between' }}>\n        {onCopyLink && (\n          <Button startIcon={<Iconify icon=\"eva:link-2-fill\" />} onClick={onCopyLink}>\n            Copy link\n          </Button>\n        )}\n\n        {onClose && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n            Close\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Chip,\n  List,\n  Stack,\n  Drawer,\n  Button,\n  Divider,\n  Checkbox,\n  TextField,\n  Typography,\n  IconButton,\n  Autocomplete,\n} from '@mui/material';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\nimport { fDateTime } from '../../../../utils/formatTime';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\nimport FileThumbnail, { fileFormat } from '../../../../components/file-thumbnail';\n//\nimport FileShareDialog from './FileShareDialog';\nimport FileInvitedItem from '../FileInvitedItem';\n\n// ----------------------------------------------------------------------\n\nFileDetailsDrawer.propTypes = {\n  open: PropTypes.bool,\n  item: PropTypes.object,\n  onClose: PropTypes.func,\n  onDelete: PropTypes.func,\n  favorited: PropTypes.bool,\n  onCopyLink: PropTypes.func,\n  onFavorite: PropTypes.func,\n};\n\nexport default function FileDetailsDrawer({\n  item,\n  open,\n  favorited,\n  //\n  onFavorite,\n  onCopyLink,\n  onClose,\n  onDelete,\n  ...other\n}) {\n  const { name, size, url, type, shared, dateModified } = item;\n\n  const hasShared = shared && !!shared.length;\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [toggleTags, setToggleTags] = useState(true);\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [tags, setTags] = useState(item.tags.slice(0, 3));\n\n  const [toggleProperties, setToggleProperties] = useState(true);\n\n  const handleToggleTags = () => {\n    setToggleTags(!toggleTags);\n  };\n\n  const handleToggleProperties = () => {\n    setToggleProperties(!toggleProperties);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleChangeInvite = (event) => {\n    setInviteEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Drawer\n        open={open}\n        onClose={onClose}\n        anchor=\"right\"\n        BackdropProps={{\n          invisible: true,\n        }}\n        PaperProps={{\n          sx: { width: 320 },\n        }}\n        {...other}\n      >\n        <Scrollbar sx={{ height: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"h6\"> Info </Typography>\n\n            <Checkbox\n              color=\"warning\"\n              icon={<Iconify icon=\"eva:star-outline\" />}\n              checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n              checked={favorited}\n              onChange={onFavorite}\n              sx={{ p: 0.75 }}\n            />\n          </Stack>\n\n          <Stack\n            spacing={2.5}\n            justifyContent=\"center\"\n            sx={{ p: 2.5, bgcolor: 'background.neutral' }}\n          >\n            <FileThumbnail\n              imageView\n              file={type === 'folder' ? type : url}\n              sx={{ width: 64, height: 64 }}\n              imgSx={{ borderRadius: 1 }}\n            />\n\n            <Typography variant=\"h6\" sx={{ wordBreak: 'break-all' }}>\n              {name}\n            </Typography>\n\n            <Divider sx={{ borderStyle: 'dashed' }} />\n\n            <Stack spacing={1}>\n              <Panel label=\"Tags\" toggle={toggleTags} onToggle={handleToggleTags} />\n\n              {toggleTags && (\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  limitTags={2}\n                  options={item.tags.map((option) => option)}\n                  value={tags}\n                  onChange={(event, newValue) => {\n                    setTags([...tags, ...newValue.filter((option) => tags.indexOf(option) === -1)]);\n                  }}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip\n                        {...getTagProps({ index })}\n                        size=\"small\"\n                        variant=\"soft\"\n                        label={option}\n                        key={option}\n                      />\n                    ))\n                  }\n                  renderInput={(params) => <TextField {...params} placeholder=\"#Add a tags\" />}\n                />\n              )}\n            </Stack>\n\n            <Stack spacing={1.5}>\n              <Panel\n                label=\"Properties\"\n                toggle={toggleProperties}\n                onToggle={handleToggleProperties}\n              />\n\n              {toggleProperties && (\n                <Stack spacing={1.5}>\n                  <Row label=\"Size\" value={fData(size)} />\n\n                  <Row label=\"Modified\" value={fDateTime(dateModified)} />\n\n                  <Row label=\"Type\" value={fileFormat(type)} />\n                </Stack>\n              )}\n            </Stack>\n          </Stack>\n\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"subtitle2\"> File Share With </Typography>\n\n            <IconButton\n              size=\"small\"\n              color=\"success\"\n              onClick={handleOpenShare}\n              sx={{\n                p: 0,\n                width: 24,\n                height: 24,\n                color: 'common.white',\n                bgcolor: 'success.main',\n                '&:hover': {\n                  bgcolor: 'success.main',\n                },\n              }}\n            >\n              <Iconify icon=\"eva:plus-fill\" />\n            </IconButton>\n          </Stack>\n\n          {hasShared && (\n            <List disablePadding sx={{ pl: 2.5, pr: 1 }}>\n              {shared.map((person) => (\n                <FileInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          )}\n        </Scrollbar>\n\n        <Box sx={{ p: 2.5 }}>\n          <Button\n            fullWidth\n            variant=\"soft\"\n            color=\"error\"\n            size=\"large\"\n            startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n            onClick={onDelete}\n          >\n            Delete\n          </Button>\n        </Box>\n      </Drawer>\n\n      <FileShareDialog\n        open={openShare}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={onCopyLink}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nPanel.propTypes = {\n  toggle: PropTypes.bool,\n  label: PropTypes.string,\n  onToggle: PropTypes.func,\n};\n\nfunction Panel({ label, toggle, onToggle, ...other }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" {...other}>\n      <Typography variant=\"subtitle2\"> {label} </Typography>\n\n      <IconButton size=\"small\" onClick={onToggle}>\n        <Iconify icon={toggle ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />\n      </IconButton>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nRow.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n};\n\nfunction Row({ label, value = '' }) {\n  return (\n    <Stack direction=\"row\" sx={{ typography: 'caption', textTransform: 'capitalize' }}>\n      <Box component=\"span\" sx={{ width: 80, color: 'text.secondary', mr: 2 }}>\n        {label}\n      </Box>\n\n      {value}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Box, Card, Stack, Button, Divider, MenuItem, Checkbox, IconButton } from '@mui/material';\n// hooks\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fDateTime } from '../../../../utils/formatTime';\nimport { fData } from '../../../../utils/formatNumber';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport TextMaxLine from '../../../../components/text-max-line';\nimport FileThumbnail from '../../../../components/file-thumbnail';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\n\n// ----------------------------------------------------------------------\n\nFileCard.propTypes = {\n  sx: PropTypes.object,\n  file: PropTypes.object,\n  onDelete: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool,\n};\n\nexport default function FileCard({ file, selected, onSelect, onDelete, sx, ...other }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [showCheckbox, setShowCheckbox] = useState(false);\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [favorited, setFavorited] = useState(file.isFavorited);\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleShowCheckbox = () => {\n    setShowCheckbox(true);\n  };\n\n  const handleHideCheckbox = () => {\n    setShowCheckbox(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(file.url);\n  };\n\n  return (\n    <>\n      <Card\n        onMouseEnter={handleShowCheckbox}\n        onMouseLeave={handleHideCheckbox}\n        sx={{\n          p: 2.5,\n          width: 1,\n          maxWidth: 222,\n          boxShadow: 0,\n          bgcolor: 'background.default',\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...((showCheckbox || selected) && {\n            borderColor: 'transparent',\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        {(showCheckbox || selected) && onSelect ? (\n          <Checkbox\n            checked={selected}\n            onClick={onSelect}\n            icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n            checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          />\n        ) : (\n          <FileThumbnail file={file.type} sx={{ width: 40, height: 40 }} />\n        )}\n\n        <TextMaxLine\n          variant=\"subtitle2\"\n          persistent\n          onClick={handleOpenDetails}\n          sx={{ mt: 2, mb: 0.5 }}\n        >\n          {file.name}\n        </TextMaxLine>\n\n        <Stack\n          spacing={0.75}\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{ typography: 'caption', color: 'text.disabled', mt: 0.5 }}\n        >\n          <Box> {fData(file.size)} </Box>\n\n          <Box sx={{ width: 2, height: 2, borderRadius: '50%', bgcolor: 'currentColor' }} />\n\n          <Box> {fDateTime(file.dateModified)} </Box>\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n      </Card>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={file}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={() => {\n          handleCloseDetails();\n          onDelete();\n        }}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={file.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Divider,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n  AvatarGroup,\n} from '@mui/material';\n// hooks\nimport useDoubleClick from '../../../../hooks/useDoubleClick';\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fDate } from '../../../../utils/formatTime';\nimport { fData } from '../../../../utils/formatNumber';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\n\n// ----------------------------------------------------------------------\n\nFileTableRow.propTypes = {\n  row: PropTypes.object,\n  selected: PropTypes.bool,\n  onDeleteRow: PropTypes.func,\n  onSelectRow: PropTypes.func,\n};\n\nexport default function FileTableRow({ row, selected, onSelectRow, onDeleteRow }) {\n  const { name, size, type, dateModified, shared, isFavorited } = row;\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [favorited, setFavorited] = useState(isFavorited);\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleClick = useDoubleClick({\n    click: () => {\n      handleOpenDetails();\n    },\n    doubleClick: () => console.log('DOUBLE CLICK'),\n  });\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(row.url);\n  };\n\n  return (\n    <>\n      <TableRow\n        sx={{\n          borderRadius: 1,\n          '& .MuiTableCell-root': {\n            bgcolor: 'background.default',\n          },\n          ...(openDetails && {\n            '& .MuiTableCell-root': {\n              color: 'text.primary',\n              typography: 'subtitle2',\n              bgcolor: 'background.default',\n            },\n          }),\n        }}\n      >\n        <TableCell\n          padding=\"checkbox\"\n          sx={{\n            borderTopLeftRadius: 8,\n            borderBottomLeftRadius: 8,\n          }}\n        >\n          <Checkbox\n            checked={selected}\n            onDoubleClick={() => console.log('ON DOUBLE CLICK')}\n            onClick={onSelectRow}\n          />\n        </TableCell>\n\n        <TableCell onClick={handleClick}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <FileThumbnail file={type} />\n\n            <Typography noWrap variant=\"inherit\" sx={{ maxWidth: 360, cursor: 'pointer' }}>\n              {name}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell\n          align=\"left\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {fData(size)}\n        </TableCell>\n\n        <TableCell\n          align=\"center\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {type}\n        </TableCell>\n\n        <TableCell\n          align=\"left\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {fDate(dateModified)}\n        </TableCell>\n\n        <TableCell align=\"right\" onClick={handleClick}>\n          <AvatarGroup\n            max={4}\n            sx={{\n              '& .MuiAvatarGroup-avatar': {\n                width: 24,\n                height: 24,\n                '&:first-of-type': {\n                  fontSize: 12,\n                },\n              },\n            }}\n          >\n            {shared &&\n              shared.map((person) => (\n                <Avatar key={person.id} alt={person.name} src={person.avatar} />\n              ))}\n          </AvatarGroup>\n        </TableCell>\n\n        <TableCell\n          align=\"right\"\n          sx={{\n            whiteSpace: 'nowrap',\n            borderTopRightRadius: 8,\n            borderBottomRightRadius: 8,\n          }}\n        >\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={row}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={onDeleteRow}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect, useState, useCallback } from 'react';\n// @mui\nimport {\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { Upload } from '../../../../components/upload';\n\n// ----------------------------------------------------------------------\n\nFileNewFolderDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  onCreate: PropTypes.func,\n  onUpdate: PropTypes.func,\n  folderName: PropTypes.string,\n  onChangeFolderName: PropTypes.func,\n};\n\nexport default function FileNewFolderDialog({\n  title = 'Upload Files',\n  open,\n  onClose,\n  //\n  onCreate,\n  onUpdate,\n  //\n  folderName,\n  onChangeFolderName,\n  ...other\n}) {\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    if (!open) {\n      setFiles([]);\n    }\n  }, [open]);\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setFiles([...files, ...newFiles]);\n    },\n    [files]\n  );\n\n  const handleUpload = () => {\n    onClose();\n    console.log('ON UPLOAD');\n  };\n\n  const handleRemoveFile = (inputFile) => {\n    const filtered = files.filter((file) => file !== inputFile);\n    setFiles(filtered);\n  };\n\n  const handleRemoveAllFiles = () => {\n    setFiles([]);\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ p: (theme) => theme.spacing(3, 3, 2, 3) }}> {title} </DialogTitle>\n\n      <DialogContent dividers sx={{ pt: 1, pb: 0, border: 'none' }}>\n        {(onCreate || onUpdate) && (\n          <TextField\n            fullWidth\n            label=\"Folder name\"\n            value={folderName}\n            onChange={onChangeFolderName}\n            sx={{ mb: 3 }}\n          />\n        )}\n\n        <Upload multiple files={files} onDrop={handleDrop} onRemove={handleRemoveFile} />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\n          onClick={handleUpload}\n        >\n          Upload\n        </Button>\n\n        {!!files.length && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleRemoveAllFiles}>\n            Remove all\n          </Button>\n        )}\n\n        {(onCreate || onUpdate) && (\n          <Stack direction=\"row\" justifyContent=\"flex-end\" flexGrow={1}>\n            <Button variant=\"soft\" onClick={onCreate || onUpdate}>\n              {onUpdate ? 'Save' : 'Create'}\n            </Button>\n          </Stack>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Box, Card, Stack, Button, Divider, MenuItem, Checkbox, IconButton } from '@mui/material';\n// hooks\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport TextMaxLine from '../../../../components/text-max-line';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\nimport FileNewFolderDialog from '../portal/FileNewFolderDialog';\n\n// ----------------------------------------------------------------------\n\nFileFolderCard.propTypes = {\n  sx: PropTypes.object,\n  folder: PropTypes.object,\n  onDelete: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool,\n};\n\nexport default function FileFolderCard({ folder, selected, onSelect, onDelete, sx, ...other }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [showCheckbox, setShowCheckbox] = useState(false);\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [folderName, setFolderName] = useState(folder.name);\n\n  const [openEditFolder, setOpenEditFolder] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const [favorited, setFavorited] = useState(folder.isFavorited);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleShowCheckbox = () => {\n    setShowCheckbox(true);\n  };\n\n  const handleHideCheckbox = () => {\n    setShowCheckbox(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenEditFolder = () => {\n    setOpenEditFolder(true);\n  };\n\n  const handleCloseEditFolder = () => {\n    setOpenEditFolder(false);\n  };\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(folder.url);\n  };\n\n  return (\n    <>\n      <Card\n        onMouseEnter={handleShowCheckbox}\n        onMouseLeave={handleHideCheckbox}\n        sx={{\n          p: 2.5,\n          width: 1,\n          maxWidth: 222,\n          boxShadow: 0,\n          bgcolor: 'background.default',\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...((showCheckbox || selected) && {\n            borderColor: 'transparent',\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n\n        {(showCheckbox || selected) && onSelect ? (\n          <Checkbox\n            checked={selected}\n            onClick={onSelect}\n            icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n            checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          />\n        ) : (\n          <Box\n            component=\"img\"\n            src=\"/assets/icons/files/ic_folder.svg\"\n            sx={{ width: 40, height: 40 }}\n          />\n        )}\n\n        <TextMaxLine variant=\"h6\" onClick={handleOpenDetails} sx={{ mt: 1, mb: 0.5 }}>\n          {folder.name}\n        </TextMaxLine>\n\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={0.75}\n          sx={{ typography: 'caption', color: 'text.disabled' }}\n        >\n          <Box> {fData(folder.size)} </Box>\n\n          <Box sx={{ width: 2, height: 2, borderRadius: '50%', bgcolor: 'currentColor' }} />\n\n          <Box> {folder.totalFiles} files </Box>\n        </Stack>\n      </Card>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenEditFolder();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={folder}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={() => {\n          handleCloseDetails();\n          onDelete();\n        }}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={folder.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileNewFolderDialog\n        open={openEditFolder}\n        onClose={handleCloseEditFolder}\n        title=\"Edit Folder\"\n        onUpdate={() => {\n          handleCloseEditFolder();\n          setFolderName(folderName);\n          console.log('UPDATE FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={(event) => setFolderName(event.target.value)}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TextField, InputAdornment } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nFileFilterName.propTypes = {\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n};\n\nexport default function FileFilterName({ filterName, onFilterName }) {\n  return (\n    <TextField\n      size=\"small\"\n      value={filterName}\n      onChange={onFilterName}\n      placeholder=\"Search...\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Button } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nFileFilterButton.propTypes = {\n  children: PropTypes.node,\n  isSelected: PropTypes.bool,\n};\n\nexport default function FileFilterButton({ children, isSelected, ...other }) {\n  return (\n    <Button\n      variant=\"soft\"\n      color=\"inherit\"\n      sx={{\n        textTransform: 'unset',\n        color: 'text.secondary',\n        width: { xs: 1, md: 'auto' },\n        justifyContent: 'flex-start',\n        fontWeight: 'fontWeightMedium',\n        ...(isSelected && {\n          color: 'text.primary',\n        }),\n      }}\n      {...other}\n    >\n      {children}\n\n      <Box sx={{ flexGrow: 1 }} />\n    </Button>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Stack, Button, Typography, CardActionArea } from '@mui/material';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport FileFilterButton from './FileFilterButton';\n\n// ----------------------------------------------------------------------\n\nFileFilterType.propTypes = {\n  onReset: PropTypes.func,\n  filterType: PropTypes.array,\n  onFilterType: PropTypes.func,\n  optionsType: PropTypes.array,\n};\n\nexport default function FileFilterType({ optionsType, filterType, onFilterType, onReset }) {\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const isSelected = !!filterType.length;\n\n  const renderLabel = filterType.length ? filterType.slice(0, 2).join(',') : 'All type';\n\n  return (\n    <>\n      <FileFilterButton\n        isSelected={isSelected}\n        endIcon={<Iconify icon={openPopover ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n        onClick={handleOpenPopover}\n      >\n        {renderLabel}\n        {filterType.length > 2 && (\n          <Label color=\"info\" sx={{ ml: 1 }}>\n            +{filterType.length - 2}\n          </Label>\n        )}\n      </FileFilterButton>\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ p: 2.5 }}>\n        <Stack spacing={2.5}>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{ xs: 'repeat(2, 1fr)', sm: 'repeat(4, 1fr)' }}\n            gap={1}\n          >\n            {optionsType.map((type) => {\n              const selected = filterType.includes(type);\n\n              return (\n                <CardActionArea\n                  key={type}\n                  onClick={() => onFilterType(type)}\n                  sx={{\n                    p: 1,\n                    borderRadius: 1,\n                    cursor: 'pointer',\n                    color: 'text.secondary',\n                    border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.12)}`,\n                    ...(selected && {\n                      color: 'text.primary',\n                      bgcolor: 'action.selected',\n                    }),\n                  }}\n                >\n                  <Stack spacing={0.5} direction=\"row\" alignItems=\"center\">\n                    <FileThumbnail file={type} />\n\n                    <Typography variant=\"body2\">{type}</Typography>\n                  </Stack>\n                </CardActionArea>\n              );\n            })}\n          </Box>\n\n          <Stack spacing={1} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Button variant=\"outlined\" color=\"inherit\" onClick={onReset}>\n              Clear\n            </Button>\n\n            <Button variant=\"contained\" onClick={handleClosePopover}>\n              Apply\n            </Button>\n          </Stack>\n        </Stack>\n      </MenuPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Typography, Checkbox, Portal } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  right: 24,\n  zIndex: 9,\n  bottom: 40,\n  display: 'flex',\n  position: 'fixed',\n  alignItems: 'center',\n  boxShadow: theme.customShadows.z20,\n  padding: theme.spacing(1.5, 1, 1.5, 2),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.text.primary,\n}));\n\n// ----------------------------------------------------------------------\n\nFileActionSelected.propTypes = {\n  sx: PropTypes.object,\n  action: PropTypes.node,\n  selected: PropTypes.array,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllItems: PropTypes.func,\n};\n\nexport default function FileActionSelected({\n  action,\n  selected,\n  rowCount,\n  numSelected,\n  onSelectAllItems,\n  sx,\n  ...other\n}) {\n  return (\n    <Portal>\n      <StyledRoot sx={sx} {...other}>\n        <Checkbox\n          indeterminate={numSelected > 0 && numSelected < rowCount}\n          checked={rowCount > 0 && numSelected === rowCount}\n          onChange={(event) => onSelectAllItems(event.target.checked)}\n          icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n          checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          indeterminateIcon={<Iconify icon=\"eva:minus-circle-fill\" />}\n        />\n\n        {selected && (\n          <Typography\n            variant=\"subtitle2\"\n            sx={{\n              mr: 2,\n              color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\n            }}\n          >\n            {selected.length}\n            <Box component=\"span\" sx={{ ml: 0.5 }}>\n              items selected\n            </Box>\n          </Typography>\n        )}\n\n        {action && action}\n      </StyledRoot>\n    </Portal>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Table, Tooltip, TableBody, IconButton, TableContainer, Box } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport {\n  emptyRows,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from '../../../../components/table';\n//\nimport FileTableRow from '../item/FileTableRow';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', align: 'left' },\n  { id: 'size', label: 'Size', align: 'left', width: 120 },\n  { id: 'type', label: 'Type', align: 'center', width: 120 },\n  { id: 'dateModified', label: 'Modified', align: 'left', width: 160 },\n  { id: 'shared', label: 'Shared', align: 'right', width: 100 },\n  { id: '' },\n];\n\nFileListView.propTypes = {\n  table: PropTypes.object,\n  isNotFound: PropTypes.bool,\n  tableData: PropTypes.array,\n  onDeleteRow: PropTypes.func,\n  dataFiltered: PropTypes.array,\n  onOpenConfirm: PropTypes.func,\n};\n\nexport default function FileListView({\n  table,\n  tableData,\n  isNotFound,\n  onDeleteRow,\n  dataFiltered,\n  onOpenConfirm,\n}) {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = table;\n\n  const denseHeight = dense ? 52 : 72;\n\n  return (\n    <>\n      <Box sx={{ px: 1, position: 'relative', borderRadius: 1.5, bgcolor: 'background.neutral' }}>\n        <TableSelectedAction\n          dense={dense}\n          numSelected={selected.length}\n          rowCount={tableData.length}\n          onSelectAllRows={(checked) =>\n            onSelectAllRows(\n              checked,\n              tableData.map((row) => row.id)\n            )\n          }\n          action={\n            <>\n              <Tooltip title=\"Share\">\n                <IconButton color=\"primary\">\n                  <Iconify icon=\"eva:share-fill\" />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Delete\">\n                <IconButton color=\"primary\" onClick={onOpenConfirm}>\n                  <Iconify icon=\"eva:trash-2-outline\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          }\n          sx={{\n            pl: 1,\n            pr: 2,\n            top: 8,\n            left: 8,\n            right: 8,\n            width: 'auto',\n            borderRadius: 1,\n          }}\n        />\n\n        <TableContainer>\n          <Table\n            size={dense ? 'small' : 'medium'}\n            sx={{\n              minWidth: 960,\n              borderCollapse: 'separate',\n              borderSpacing: '0 8px',\n              '& .MuiTableCell-head': {\n                boxShadow: 'none !important',\n              },\n            }}\n          >\n            <TableHeadCustom\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={tableData.length}\n              numSelected={selected.length}\n              onSort={onSort}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              sx={{\n                '& .MuiTableCell-head': {\n                  bgcolor: 'transparent',\n                },\n              }}\n            />\n\n            <TableBody>\n              {dataFiltered\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <FileTableRow\n                    key={row.id}\n                    row={row}\n                    selected={selected.includes(row.id)}\n                    onSelectRow={() => onSelectRow(row.id)}\n                    onDeleteRow={() => onDeleteRow(row.id)}\n                  />\n                ))}\n\n              <TableEmptyRows\n                height={denseHeight}\n                emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n              />\n\n              <TableNoData isNotFound={isNotFound} />\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n\n      <TablePaginationCustom\n        count={dataFiltered.length}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n        //\n        dense={dense}\n        onChangeDense={onChangeDense}\n        sx={{\n          '& .MuiTablePagination-root': { borderTop: 'none' },\n          '& .MuiFormControlLabel-root': { px: 0 },\n        }}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Button, Typography, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nFilePanel.propTypes = {\n  sx: PropTypes.object,\n  link: PropTypes.string,\n  onOpen: PropTypes.func,\n  title: PropTypes.string,\n  collapse: PropTypes.bool,\n  subTitle: PropTypes.string,\n  onCollapse: PropTypes.func,\n};\n\nexport default function FilePanel({\n  title,\n  subTitle,\n  link,\n  onOpen,\n  collapse,\n  onCollapse,\n  sx,\n  ...other\n}) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 3, ...sx }} {...other}>\n      <Stack flexGrow={1}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} flexGrow={1}>\n          <Typography variant=\"h6\"> {title} </Typography>\n\n          <IconButton\n            size=\"small\"\n            color=\"success\"\n            onClick={onOpen}\n            sx={{\n              p: 0,\n              width: 24,\n              height: 24,\n              color: 'common.white',\n              bgcolor: 'success.main',\n              '&:hover': {\n                bgcolor: 'success.main',\n              },\n            }}\n          >\n            <Iconify icon=\"eva:plus-fill\" />\n          </IconButton>\n        </Stack>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.disabled', mt: 0.5 }}>\n          {subTitle}\n        </Typography>\n      </Stack>\n\n      {link && (\n        <Button\n          component={RouterLink}\n          to={link}\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon=\"eva:chevron-right-fill\" />}\n        >\n          View All\n        </Button>\n      )}\n\n      {onCollapse && (\n        <IconButton onClick={onCollapse}>\n          <Iconify icon={collapse ? 'eva:chevron-down-fill' : 'eva:chevron-up-fill'} />\n        </IconButton>\n      )}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useRef } from 'react';\n// @mui\nimport { Collapse, Box, Divider, Button } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n//\nimport FilePanel from '../FilePanel';\nimport FileCard from '../item/FileCard';\nimport FileFolderCard from '../item/FileFolderCard';\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileActionSelected from '../portal/FileActionSelected';\nimport FileNewFolderDialog from '../portal/FileNewFolderDialog';\n\n// ----------------------------------------------------------------------\n\nFileGridView.propTypes = {\n  data: PropTypes.array,\n  table: PropTypes.object,\n  onDeleteItem: PropTypes.func,\n  dataFiltered: PropTypes.array,\n  onOpenConfirm: PropTypes.func,\n};\n\nexport default function FileGridView({ table, data, dataFiltered, onDeleteItem, onOpenConfirm }) {\n  const { selected, onSelectRow: onSelectItem, onSelectAllRows: onSelectAllItems } = table;\n\n  const containerRef = useRef(null);\n\n  const [folderName, setFolderName] = useState('');\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [collapseFiles, setCollapseFiles] = useState(false);\n\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n\n  const [openUploadFile, setOpenUploadFile] = useState(false);\n\n  const [collapseFolders, setCollapseFolders] = useState(false);\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenNewFolder = () => {\n    setOpenNewFolder(true);\n  };\n\n  const handleCloseNewFolder = () => {\n    setOpenNewFolder(false);\n  };\n\n  const handleOpenUploadFile = () => {\n    setOpenUploadFile(true);\n  };\n\n  const handleCloseUploadFile = () => {\n    setOpenUploadFile(false);\n  };\n\n  const handleChangeInvite = (event) => {\n    setInviteEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Box ref={containerRef}>\n        <FilePanel\n          title=\"Folders\"\n          subTitle={`${data.filter((item) => item.type === 'folder').length} folders`}\n          onOpen={handleOpenNewFolder}\n          collapse={collapseFolders}\n          onCollapse={() => setCollapseFolders(!collapseFolders)}\n        />\n\n        <Collapse in={!collapseFolders} unmountOnExit>\n          <Box\n            gap={3}\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n          >\n            {dataFiltered\n              .filter((i) => i.type === 'folder')\n              .map((folder) => (\n                <FileFolderCard\n                  key={folder.id}\n                  folder={folder}\n                  selected={selected.includes(folder.id)}\n                  onSelect={() => onSelectItem(folder.id)}\n                  onDelete={() => onDeleteItem(folder.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        <Divider sx={{ my: 5, borderStyle: 'dashed' }} />\n\n        <FilePanel\n          title=\"Files\"\n          subTitle={`${data.filter((item) => item.type !== 'folder').length} files`}\n          onOpen={handleOpenUploadFile}\n          collapse={collapseFiles}\n          onCollapse={() => setCollapseFiles(!collapseFiles)}\n        />\n\n        <Collapse in={!collapseFiles} unmountOnExit>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n            gap={3}\n          >\n            {dataFiltered\n              .filter((i) => i.type !== 'folder')\n              .map((file) => (\n                <FileCard\n                  key={file.id}\n                  file={file}\n                  selected={selected.includes(file.id)}\n                  onSelect={() => onSelectItem(file.id)}\n                  onDelete={() => onDeleteItem(file.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        {!!selected?.length && (\n          <FileActionSelected\n            numSelected={selected.length}\n            rowCount={data.length}\n            selected={selected}\n            onSelectAllItems={(checked) =>\n              onSelectAllItems(\n                checked,\n                data.map((row) => row.id)\n              )\n            }\n            action={\n              <>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n                  onClick={onOpenConfirm}\n                  sx={{ mr: 1 }}\n                >\n                  Delete\n                </Button>\n\n                <Button\n                  color=\"inherit\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"eva:share-fill\" />}\n                  onClick={handleOpenShare}\n                  sx={{\n                    color: (theme) =>\n                      theme.palette.mode === 'light' ? 'grey.800' : 'common.white',\n                    bgcolor: (theme) =>\n                      theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n                    '&:hover': {\n                      color: (theme) =>\n                        theme.palette.mode === 'light' ? 'grey.800' : 'common.white',\n                      bgcolor: (theme) =>\n                        theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n                    },\n                  }}\n                >\n                  Share\n                </Button>\n              </>\n            }\n          />\n        )}\n      </Box>\n\n      <FileShareDialog\n        open={openShare}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileNewFolderDialog open={openUploadFile} onClose={handleCloseUploadFile} />\n\n      <FileNewFolderDialog\n        open={openNewFolder}\n        onClose={handleCloseNewFolder}\n        title=\"New Folder\"\n        onCreate={() => {\n          handleCloseNewFolder();\n          setFolderName('');\n          console.log('CREATE NEW FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={(event) => setFolderName(event.target.value)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nFileChangeViewButton.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default function FileChangeViewButton({ value, onChange, ...other }) {\n  return (\n    <ToggleButtonGroup\n      size=\"small\"\n      color=\"primary\"\n      value={value}\n      exclusive\n      onChange={onChange}\n      {...other}\n    >\n      <ToggleButton value=\"list\">\n        <Iconify icon=\"eva:list-fill\" />\n      </ToggleButton>\n\n      <ToggleButton value=\"grid\">\n        <Iconify icon=\"eva:grid-fill\" />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'yyyy MM dd';\n  // console.log (fm);\n  return date ? format(new Date(date), fm) : '';\n}\n\n\nexport function fEspDate(date, newFormat) {\n\n    const Meses = 'Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre'.split(',')\n    let result = \"\";\n\n        \n    if (date) {\n        result = `${date.getFullYear()}-${Meses[date.getMonth() + 1]}-${date.getDay()}`;\n    }\n\n    return result;\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n"],"names":["EmptyContent","title","description","img","sx","other","Stack","alignItems","justifyContent","height","textAlign","p","theme","spacing","disabledEffect","alt","src","mb","Typography","variant","gutterBottom","color","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","onChangeDense","TableNoData","isNotFound","TableRow","TableCell","colSpan","TableSkeleton","direction","Skeleton","width","borderRadius","flexShrink","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","onClick","textTransform","label","Box","TableSelectedAction","action","pl","pr","top","left","zIndex","bgcolor","ml","flexGrow","TablePaginationCustom","rowsPerPageOptions","TablePagination","component","FormControlLabel","control","Switch","py","md","useTypography","useTheme","breakpoints","useWidth","key","up","getFont","typography","fontSize","remToPx","lineHeight","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","children","styles","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","Link","copiedText","setCopiedText","copy","text","navigator","clipboard","console","warn","writeText","useDoubleClick","click","doubleClick","timeout","clickTimeout","useRef","clearTimeout","current","detail","setTimeout","FileInvitedItem","person","permission","setPermission","openPopover","setOpenPopover","handleClosePopover","handleChangePermission","newPermission","ListItem","disableGutters","ListItemAvatar","Avatar","name","avatar","ListItemText","primary","secondary","Tooltip","email","primaryTypographyProps","noWrap","secondaryTypographyProps","Button","size","endIcon","icon","currentTarget","open","onClose","MenuItem","Divider","borderStyle","FileShareDialog","shared","inviteEmail","onCopyLink","onChangeInvite","hasShared","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","placeholder","disabled","maxHeight","List","disablePadding","DialogActions","startIcon","FileDetailsDrawer","item","favorited","onFavorite","onDelete","url","type","dateModified","openShare","setOpenShare","toggleTags","setToggleTags","setInviteEmail","tags","setTags","toggleProperties","setToggleProperties","Drawer","anchor","BackdropProps","invisible","PaperProps","checkedIcon","imageView","file","imgSx","wordBreak","Panel","toggle","onToggle","Autocomplete","multiple","freeSolo","limitTags","options","option","newValue","filter","renderTags","getTagProps","index","Chip","renderInput","params","Row","fData","fDateTime","fileFormat","IconButton","mr","FileCard","onSelect","enqueueSnackbar","useSnackbar","useCopyToClipboard","showCheckbox","setShowCheckbox","openConfirm","setOpenConfirm","openDetails","setOpenDetails","isFavorited","setFavorited","handleFavorite","handleCloseDetails","handleCopy","Card","onMouseEnter","onMouseLeave","boxShadow","palette","divider","borderColor","customShadows","z20","mt","right","arrow","content","FileTableRow","row","onDeleteRow","handleClick","log","borderTopLeftRadius","borderBottomLeftRadius","onDoubleClick","cursor","fDate","AvatarGroup","borderTopRightRadius","borderBottomRightRadius","FileNewFolderDialog","onCreate","onUpdate","folderName","onChangeFolderName","files","setFiles","useEffect","handleDrop","acceptedFiles","newFiles","Object","assign","preview","URL","createObjectURL","dividers","pt","pb","onDrop","onRemove","inputFile","filtered","FileFolderCard","folder","setFolderName","openEditFolder","setOpenEditFolder","handleCloseEditFolder","totalFiles","FileFilterName","filterName","onFilterName","InputProps","startAdornment","InputAdornment","FileFilterButton","isSelected","xs","FileFilterType","optionsType","filterType","onFilterType","onReset","renderLabel","join","gridTemplateColumns","sm","gap","includes","CardActionArea","alpha","grey","StyledRoot","styled","bottom","shape","backgroundColor","FileActionSelected","onSelectAllItems","Portal","indeterminateIcon","mode","TABLE_HEAD","FileListView","table","tableData","dataFiltered","onOpenConfirm","denseHeight","px","TableContainer","Table","borderCollapse","borderSpacing","TableBody","count","onPageChange","onRowsPerPageChange","borderTop","FilePanel","subTitle","link","onOpen","collapse","onCollapse","RouterLink","to","FileGridView","data","onDeleteItem","onSelectItem","containerRef","collapseFiles","setCollapseFiles","openNewFolder","setOpenNewFolder","openUploadFile","setOpenUploadFile","collapseFolders","setCollapseFolders","handleCloseNewFolder","Collapse","in","unmountOnExit","lg","i","my","FileChangeViewButton","ToggleButtonGroup","exclusive","ToggleButton","date","newFormat","fm","format","Date","fEspDate","Meses","split","result","getFullYear","getMonth","getDay","fTimestamp","getTime","fToNow","formatDistanceToNow","addSuffix"],"sourceRoot":""}