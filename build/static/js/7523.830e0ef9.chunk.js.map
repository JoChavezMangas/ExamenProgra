{"version":3,"file":"static/js/7523.830e0ef9.chunk.js","mappings":"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","sources":["components/text-max-line/useTypography.js","components/text-max-line/TextMaxLine.js","pages/components/extra/DemoTextMaxLinePage.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js"],"sourcesContent":["// @mui\nimport { useTheme } from '@mui/material/styles';\n// hooks\nimport { useWidth } from '../../hooks/useResponsive';\n// theme\nimport { remToPx } from '../../theme/typography';\n\n// ----------------------------------------------------------------------\n\nexport default function useTypography(variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport { Typography, Link } from '@mui/material';\n//\nimport useTypography from './useTypography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    };\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nTextMaxLine.propTypes = {\n  sx: PropTypes.object,\n  asLink: PropTypes.bool,\n  line: PropTypes.number,\n  persistent: PropTypes.bool,\n  children: PropTypes.node,\n  variant: PropTypes.oneOf([\n    'body1',\n    'body2',\n    'button',\n    'caption',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'inherit',\n    'overline',\n    'subtitle1',\n    'subtitle2',\n  ]),\n};\n\nexport default TextMaxLine;\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport { Box, Card, CardHeader, Container, CardContent } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport TextMaxLine from '../../../components/text-max-line';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nexport default function DemoTextMaxLinePage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra Components: Text Max Line | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"TextMaxLine\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'TextMaxLine' },\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={3} spacing={3}>\n          <Card>\n            <CardHeader title=\"1 Line\" />\n            <CardContent>\n              <TextMaxLine line={1}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"2 Line\" />\n            <CardContent>\n              <TextMaxLine>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"3 Line\" />\n            <CardContent>\n              <TextMaxLine line={3}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"4 Line\" />\n            <CardContent>\n              <TextMaxLine line={4}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"As Link\" />\n            <CardContent>\n              <TextMaxLine asLink line={3} href=\"#\" color=\"primary\" sx={{ maxWidth: 300 }}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Persistent\" />\n            <CardContent>\n              <TextMaxLine persistent line={3} href=\"#\" sx={{ bgcolor: 'background.neutral' }}>\n                Donec posuere vulputate arcu.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["useTypography","variant","theme","useTheme","breakpoints","useWidth","key","up","getFont","typography","fontSize","remToPx","lineHeight","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","children","sx","other","styles","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","height","Link","color","Typography","DemoTextMaxLinePage","pt","pb","bgcolor","palette","mode","heading","links","name","href","PATH_PAGE","my","columns","spacing","title","maxWidth","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","replace","lineBreakStyle","flexBasis","width","margin","padding","MasonryRoot","styled","overridesResolver","props","root","ownerState","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","useThemeProps","className","component","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","flushSync","max","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","map","_","index","_jsx","_jsxs","as","clsx","getCardContentUtilityClass","CardContentRoot","paddingBottom"],"sourceRoot":""}