{"version":3,"file":"static/js/2341.539a956c.chunk.js","mappings":"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","sources":["components/date-range-picker/useDateRangePicker.js","components/date-range-picker/DateRangePicker.js","pages/dashboard/FileManagerPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { isSameDay, isSameMonth, getYear, isBefore } from 'date-fns';\n// utils\nimport { fDate } from '../../utils/formatTime';\n\n// ----------------------------------------------------------------------\n\nexport default function useDateRangePicker(start, end) {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const isError =\n    (startDate && endDate && isBefore(new Date(endDate), new Date(startDate))) || false;\n\n  const currentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const isCurrentYear = currentYear === startDateYear && currentYear === endDateYear;\n\n  const isSameDays =\n    startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const isSameMonths =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  const standardLabel = `${fDate(startDate)} - ${fDate(endDate)}`;\n\n  const getShortLabel = () => {\n    if (isCurrentYear) {\n      if (isSameMonths) {\n        if (isSameDays) {\n          return fDate(endDate, 'dd MMM yy');\n        }\n        return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n      }\n      return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n  };\n\n  const onChangeStartDate = (newValue) => {\n    setStartDate(newValue);\n  };\n\n  const onChangeEndDate = (newValue) => {\n    if (isError) {\n      setEndDate(null);\n    }\n    setEndDate(newValue);\n  };\n\n  const onReset = () => {\n    setStartDate(null);\n    setEndDate(null);\n  };\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen: () => setOpen(true),\n    onClose: () => setOpen(false),\n    onReset,\n    //\n    isSelected: !!startDate && !!endDate,\n    isError,\n    //\n    label: standardLabel || '',\n    shortLabel: getShortLabel() || '',\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport {\n  Paper,\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  FormHelperText,\n} from '@mui/material';\nimport { DatePicker, CalendarPicker } from '@mui/x-date-pickers';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n\n// ----------------------------------------------------------------------\n\nDateRangePicker.propTypes = {\n  open: PropTypes.bool,\n  isError: PropTypes.bool,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  onChangeEndDate: PropTypes.func,\n  onChangeStartDate: PropTypes.func,\n  variant: PropTypes.oneOf(['input', 'calendar']),\n  startDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  endDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n};\n\nexport default function DateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  isError,\n}) {\n  const isDesktop = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            isDesktop && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && isDesktop ? 'row' : 'column'}\n          justifyContent=\"center\"\n          sx={{\n            pt: 1,\n            '& .MuiCalendarPicker-root': {\n              ...(!isDesktop && {\n                width: 'auto',\n              }),\n            },\n          }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{ borderRadius: 2, borderColor: 'divider', borderStyle: 'dashed' }}\n              >\n                <CalendarPicker date={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{ borderRadius: 2, borderColor: 'divider', borderStyle: 'dashed' }}\n              >\n                <CalendarPicker date={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker\n                label=\"Start date\"\n                value={startDate}\n                onChange={onChangeStartDate}\n                renderInput={(params) => <TextField {...params} />}\n              />\n\n              <DatePicker\n                label=\"End date\"\n                value={endDate}\n                onChange={onChangeEndDate}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </>\n          )}\n        </Stack>\n\n        {isError && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={isError} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { useState } from 'react';\n// @mui\nimport { Stack, Button, Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// utils\nimport { fTimestamp } from '../../utils/formatTime';\n// _mock_\nimport { _allFiles } from '../../_mock/arrays';\n// components\nimport Iconify from '../../components/iconify';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport { fileFormat } from '../../components/file-thumbnail';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport { useSettingsContext } from '../../components/settings';\nimport { useTable, getComparator } from '../../components/table';\nimport DateRangePicker, { useDateRangePicker } from '../../components/date-range-picker';\n// sections\nimport {\n  FileListView,\n  FileGridView,\n  FileFilterType,\n  FileFilterName,\n  FileFilterButton,\n  FileChangeViewButton,\n  FileNewFolderDialog,\n} from '../../sections/@dashboard/file';\n\n// ----------------------------------------------------------------------\n\nconst FILE_TYPE_OPTIONS = [\n  'folder',\n  'txt',\n  'zip',\n  'audio',\n  'image',\n  'video',\n  'word',\n  'excel',\n  'powerpoint',\n  'pdf',\n  'photoshop',\n  'illustrator',\n];\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerPage() {\n  const table = useTable({ defaultRowsPerPage: 10 });\n\n  const {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    open: openPicker,\n    onOpen: onOpenPicker,\n    onClose: onClosePicker,\n    onReset: onResetPicker,\n    isSelected: isSelectedValuePicker,\n    isError,\n    shortLabel,\n  } = useDateRangePicker(null, null);\n\n  const { themeStretch } = useSettingsContext();\n\n  const [view, setView] = useState('list');\n\n  const [filterName, setFilterName] = useState('');\n\n  const [tableData, setTableData] = useState(_allFiles);\n\n  const [filterType, setFilterType] = useState([]);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openUploadFile, setOpenUploadFile] = useState(false);\n\n  const dataFiltered = applyFilter({\n    inputData: tableData,\n    comparator: getComparator(table.order, table.orderBy),\n    filterName,\n    filterType,\n    filterStartDate: startDate,\n    filterEndDate: endDate,\n    isError: !!isError,\n  });\n\n  const dataInPage = dataFiltered.slice(\n    table.page * table.rowsPerPage,\n    table.page * table.rowsPerPage + table.rowsPerPage\n  );\n\n  const isNotFound =\n    (!dataFiltered.length && !!filterName) ||\n    (!dataFiltered.length && !!filterType) ||\n    (!dataFiltered.length && !!endDate && !!startDate);\n\n  const isFiltered = !!filterName || !!filterType.length || (!!startDate && !!endDate);\n\n  const handleChangeView = (event, newView) => {\n    if (newView !== null) {\n      setView(newView);\n    }\n  };\n\n  const handleFilterName = (event) => {\n    table.setPage(0);\n    setFilterName(event.target.value);\n  };\n\n  const handleChangeStartDate = (newValue) => {\n    table.setPage(0);\n    onChangeStartDate(newValue);\n  };\n\n  const handleChangeEndDate = (newValue) => {\n    table.setPage(0);\n    onChangeEndDate(newValue);\n  };\n\n  const handleFilterType = (type) => {\n    const checked = filterType.includes(type)\n      ? filterType.filter((value) => value !== type)\n      : [...filterType, type];\n\n    table.setPage(0);\n    setFilterType(checked);\n  };\n\n  const handleDeleteItem = (id) => {\n    const { page, setPage, setSelected } = table;\n    const deleteRow = tableData.filter((row) => row.id !== id);\n    setSelected([]);\n    setTableData(deleteRow);\n\n    if (page > 0) {\n      if (dataInPage.length < 2) {\n        setPage(page - 1);\n      }\n    }\n  };\n\n  const handleDeleteItems = (selected) => {\n    const { page, rowsPerPage, setPage, setSelected } = table;\n    const deleteRows = tableData.filter((row) => !selected.includes(row.id));\n    setSelected([]);\n    setTableData(deleteRows);\n\n    if (page > 0) {\n      if (selected.length === dataInPage.length) {\n        setPage(page - 1);\n      } else if (selected.length === dataFiltered.length) {\n        setPage(0);\n      } else if (selected.length > dataInPage.length) {\n        const newPage = Math.ceil((tableData.length - selected.length) / rowsPerPage) - 1;\n        setPage(newPage);\n      }\n    }\n  };\n\n  const handleClearAll = () => {\n    if (onResetPicker) {\n      onResetPicker();\n    }\n    setFilterName('');\n    setFilterType([]);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenUploadFile = () => {\n    setOpenUploadFile(true);\n  };\n\n  const handleCloseUploadFile = () => {\n    setOpenUploadFile(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> File Manager | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"File Manager\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            { name: 'File Manager' },\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\n              onClick={handleOpenUploadFile}\n            >\n              Upload\n            </Button>\n          }\n        />\n\n        <Stack\n          spacing={2.5}\n          direction={{ xs: 'column', md: 'row' }}\n          alignItems={{ xs: 'flex-end', md: 'center' }}\n          justifyContent=\"space-between\"\n          sx={{ mb: 5 }}\n        >\n          <Stack\n            spacing={1}\n            direction={{ xs: 'column', md: 'row' }}\n            alignItems={{ md: 'center' }}\n            sx={{ width: 1 }}\n          >\n            <FileFilterName filterName={filterName} onFilterName={handleFilterName} />\n\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={1}>\n              <>\n                <FileFilterButton\n                  isSelected={!!isSelectedValuePicker}\n                  startIcon={<Iconify icon=\"eva:calendar-fill\" />}\n                  onClick={onOpenPicker}\n                >\n                  {isSelectedValuePicker ? shortLabel : 'Select Date'}\n                </FileFilterButton>\n\n                <DateRangePicker\n                  variant=\"calendar\"\n                  startDate={startDate}\n                  endDate={endDate}\n                  onChangeStartDate={handleChangeStartDate}\n                  onChangeEndDate={handleChangeEndDate}\n                  open={openPicker}\n                  onClose={onClosePicker}\n                  isSelected={isSelectedValuePicker}\n                  isError={isError}\n                />\n              </>\n\n              <FileFilterType\n                filterType={filterType}\n                onFilterType={handleFilterType}\n                optionsType={FILE_TYPE_OPTIONS}\n                onReset={() => setFilterType([])}\n              />\n\n              {isFiltered && (\n                <Button\n                  variant=\"soft\"\n                  color=\"error\"\n                  onClick={handleClearAll}\n                  startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n                >\n                  Clear\n                </Button>\n              )}\n            </Stack>\n          </Stack>\n\n          <FileChangeViewButton value={view} onChange={handleChangeView} />\n        </Stack>\n\n        {view === 'list' ? (\n          <FileListView\n            table={table}\n            tableData={tableData}\n            dataFiltered={dataFiltered}\n            onDeleteRow={handleDeleteItem}\n            isNotFound={isNotFound}\n            onOpenConfirm={handleOpenConfirm}\n          />\n        ) : (\n          <FileGridView\n            table={table}\n            data={tableData}\n            dataFiltered={dataFiltered}\n            onDeleteItem={handleDeleteItem}\n            onOpenConfirm={handleOpenConfirm}\n          />\n        )}\n      </Container>\n\n      <FileNewFolderDialog open={openUploadFile} onClose={handleCloseUploadFile} />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              handleDeleteItems(table.selected);\n              handleCloseConfirm();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({\n  inputData,\n  comparator,\n  filterName,\n  filterType,\n  filterStartDate,\n  filterEndDate,\n  isError,\n}) {\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (filterName) {\n    inputData = inputData.filter(\n      (file) => file.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    );\n  }\n\n  if (filterType.length) {\n    inputData = inputData.filter((file) => filterType.includes(fileFormat(file.type)));\n  }\n\n  if (filterStartDate && filterEndDate && !isError) {\n    inputData = inputData.filter(\n      (file) =>\n        fTimestamp(file.dateCreated) >= fTimestamp(filterStartDate) &&\n        fTimestamp(file.dateCreated) <= fTimestamp(filterEndDate)\n    );\n  }\n\n  return inputData;\n}\n"],"names":["useDateRangePicker","start","end","useState","open","setOpen","endDate","setEndDate","startDate","setStartDate","isError","isBefore","Date","currentYear","getFullYear","startDateYear","getYear","endDateYear","isCurrentYear","isSameDays","isSameDay","isSameMonths","isSameMonth","standardLabel","fDate","onChangeStartDate","newValue","onChangeEndDate","onOpen","onClose","onReset","isSelected","label","shortLabel","DateRangePicker","title","variant","isDesktop","useResponsive","isCalendarView","Dialog","fullWidth","maxWidth","PaperProps","sx","DialogTitle","pb","DialogContent","overflow","Stack","spacing","direction","justifyContent","pt","width","Paper","borderRadius","borderColor","borderStyle","CalendarPicker","date","onChange","DatePicker","value","renderInput","params","TextField","FormHelperText","error","px","DialogActions","Button","color","onClick","disabled","FILE_TYPE_OPTIONS","FileManagerPage","table","useTable","defaultRowsPerPage","openPicker","onOpenPicker","onClosePicker","onResetPicker","isSelectedValuePicker","themeStretch","useSettingsContext","view","setView","filterName","setFilterName","_allFiles","tableData","setTableData","filterType","setFilterType","openConfirm","setOpenConfirm","openUploadFile","setOpenUploadFile","dataFiltered","inputData","comparator","filterStartDate","filterEndDate","stabilizedThis","map","el","index","sort","a","b","order","filter","file","name","toLowerCase","indexOf","length","includes","fileFormat","type","fTimestamp","dateCreated","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","isNotFound","isFiltered","handleDeleteItem","id","setPage","setSelected","deleteRow","row","handleOpenConfirm","handleCloseConfirm","heading","links","href","PATH_DASHBOARD","action","startIcon","icon","xs","md","alignItems","mb","onFilterName","event","target","sm","onFilterType","checked","optionsType","newView","onDeleteRow","onOpenConfirm","data","onDeleteItem","content","selected","deleteRows","Math","ceil","handleDeleteItems"],"sourceRoot":""}