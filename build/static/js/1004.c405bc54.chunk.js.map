{"version":3,"file":"static/js/1004.c405bc54.chunk.js","mappings":"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","sources":["sections/auth/AuthNewPasswordForm.js","pages/auth/NewPasswordPage.js"],"sourcesContent":["import { useState } from 'react';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, IconButton, InputAdornment, FormHelperText } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Iconify from '../../components/iconify';\nimport { useSnackbar } from '../../components/snackbar';\nimport FormProvider, { RHFTextField, RHFCodes } from '../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function AuthNewPasswordForm() {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const emailRecovery =\n    typeof window !== 'undefined' ? sessionStorage.getItem('email-recovery') : '';\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n    email: Yup.string().required('Email is required').email('Debe ingresar un correo válido'),\n    password: Yup.string()\n      .min(6, 'La contraseña debe tener como mínimo 6 caracteres')\n      .required('La contraseña es requerida'),\n    confirmPassword: Yup.string()\n      .required('Confirmar contraseña')\n      .oneOf([Yup.ref('password'), null], 'La contraseña debe coincidir'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n    email: emailRecovery || '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      console.log('DATA:', {\n        email: data.email,\n        code: `${data.code1}${data.code2}${data.code3}${data.code4}${data.code5}${data.code6}`,\n        password: data.password,\n      });\n      sessionStorage.removeItem('email-recovery');\n      enqueueSnackbar('Change password success!');\n      navigate(PATH_DASHBOARD.root);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <RHFTextField\n          variant=\"filled\"\n          name=\"email\"\n          label=\"Correo electrónico\"\n          disabled={!!emailRecovery}\n          InputLabelProps={{ shrink: true }}\n        />\n\n        <RHFCodes keyName=\"code\" inputs={['code1', 'code2', 'code3', 'code4', 'code5', 'code6']} />\n\n        {(!!errors.code1 ||\n          !!errors.code2 ||\n          !!errors.code3 ||\n          !!errors.code4 ||\n          !!errors.code5 ||\n          !!errors.code6) && (\n          <FormHelperText error sx={{ px: 2 }}>\n            Code is required\n          </FormHelperText>\n        )}\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Contraseña\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <RHFTextField\n          name=\"confirmPassword\"\n          label=\"Confirmar nueva contraseña\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n          sx={{ mt: 3 }}\n        >\n          Actualizar contraseña\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Link, Typography } from '@mui/material';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Iconify from '../../components/iconify';\n// sections\nimport AuthNewPasswordForm from '../../sections/auth/AuthNewPasswordForm';\n// assets\nimport { SentIcon } from '../../assets/icons';\n\n// ----------------------------------------------------------------------\n\nexport default function NewPasswordPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Nueva contraseña</title>\n      </Helmet>\n\n      <SentIcon sx={{ mb: 5, height: 96 }} />\n\n      <Typography variant=\"h4\" paragraph>\n        ¡Solicitud enviada con éxito!\n      </Typography>\n\n      <Typography sx={{ color: 'text.secondary', mb: 5 }}>\n        Hemos enviado un código de confirmación de 6 dígitos a tu correo electrónico\n        <br />\n      </Typography>\n\n      <AuthNewPasswordForm />\n\n      <Typography variant=\"body2\" sx={{ my: 3 }}>\n        ¿Aún no recibes el código? &nbsp;\n        <Link variant=\"subtitle2\">Reenviar código</Link>\n      </Typography>\n\n      <Link\n        component={RouterLink}\n        to={PATH_AUTH.login}\n        color=\"inherit\"\n        variant=\"subtitle2\"\n        sx={{\n          mx: 'auto',\n          alignItems: 'center',\n          display: 'inline-flex',\n        }}\n      >\n        <Iconify icon=\"eva:chevron-left-fill\" width={16} />\n        Regresar\n      </Link>\n    </>\n  );\n}\n"],"names":["AuthNewPasswordForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","useState","showPassword","setShowPassword","emailRecovery","window","sessionStorage","getItem","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","email","password","min","confirmPassword","oneOf","defaultValues","methods","useForm","mode","resolver","yupResolver","handleSubmit","formState","isSubmitting","errors","onSubmit","data","Promise","resolve","setTimeout","console","log","code","removeItem","PATH_DASHBOARD","error","Stack","spacing","variant","name","label","disabled","InputLabelProps","shrink","keyName","inputs","FormHelperText","sx","px","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","icon","LoadingButton","fullWidth","size","loading","mt","NewPasswordPage","mb","height","Typography","paragraph","color","my","Link","component","RouterLink","to","PATH_AUTH","mx","alignItems","display","width"],"sourceRoot":""}