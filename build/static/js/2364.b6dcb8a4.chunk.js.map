{"version":3,"file":"static/js/2364.b6dcb8a4.chunk.js","mappings":"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","sources":["pages/Area/BandejaArea.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// import { paramCase } from 'change-case';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n    Card,\n    Button,\n    // Divider,\n    Container,\n    IconButton,\n    TableContainer,\n    Typography,\n    MenuItem\n} from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\nimport { useSnackbar } from 'notistack';\n// routes\nimport { paramCase } from 'change-case';\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// _mock_\n// import { _userList, _companyList } from '../../_mock/arrays';\nimport {  _areaList } from '../../_mock/arrays';\n// components\nimport Iconify from '../../components/iconify';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport Label from '../../components/label';\nimport { CustomAvatar } from '../../components/custom-avatar';\nimport MenuPopover from '../../components/menu-popover';\nimport { HOST_API_LOCAL, END_POINT_BANDEJA_AREA } from '../../config-global';\n\n\n\n\nexport default function BandejaArea() {\n\n    const [openConfirm, setOpenConfirm] = useState(false);\n    const [openPopover, setOpenPopover] = useState(null);\n    const [tableData, setTableData] = useState(_areaList);\n    const [IdAUX, setIdAUX] = useState('');\n    const navigate = useNavigate();\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true);\n    };\n    const handleCloseConfirm = () => {\n        setOpenConfirm(false);\n    };\n    const handleOpenPopover = (e, Id) => {\n        setIdAUX(Id)\n        setOpenPopover(e.currentTarget);\n    };\n    const handleClosePopover = () => {\n        setOpenPopover(null);\n    };\n    const handleEditRow = (id) => {\n        console.log(id)\n        navigate(PATH_DASHBOARD.area.edit(id));\n    };\n    const JustAfterClicDelete = () => {\n        handleDeleteRow(IdAUX);\n        onDelete(IdAUX);\n    }\n    const handleDeleteRow = (id) => {\n        const deleteRow = tableData.filter((row) => row.id !== id);\n        setTableData(deleteRow);\n        setOpenConfirm(false);\n    };\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onDelete = async (data) => {\n        try {\n            await new Promise((resolve) => setTimeout(resolve, 500));\n            enqueueSnackbar('Listo, el área');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n\n    const columns = [\n        {\n            field: 'avatar',\n            headerName: '',\n            align: 'center',\n            headerAlign: 'center',\n            width: 64,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => <CustomAvatar name={params.row.nombre} sx={{ width: 36, height: 36 }} />,\n        },\n        {\n            field: 'nombre',\n            headerName: 'Area',\n            flex: 1,\n            editable: false,\n        },\n        {\n            field: 'nombreRazonSocial',\n            headerName: 'Empresa',\n            flex: 1,\n            editable: false,\n        },\n        // {\n        //    field: 'status',\n        //    type: 'singleSelect',\n        //    headerName: 'Estatus',\n        //    valueOptions: ['Activo', 'Inactivo', 'Bloqueado'],\n        //    align: 'center',\n        //    headerAlign: 'center',\n        //    width: 120,\n        //    renderCell: (params) => RenderStatus(params.row.status, params.row),\n        // },\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 90,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n                <IconButton color={openPopover ? 'inherit' : 'default'} onClick={(e) => handleOpenPopover(e, params.row.id)}>\n                    <Iconify icon=\"eva:more-vertical-fill\" />\n                </IconButton>\n            ),\n        },\n    ];\n\n    return (\n        <>\n            <Helmet>\n                <title> Area </title>\n            </Helmet>\n\n            <Container>\n\n                <CustomBreadcrumbs\n                    heading={\n                        <>Área</>\n                    }\n                    links={[\n                        { name: '' },\n                    ]}\n                    action={\n                        <Button\n                            component={RouterLink}\n                            to={PATH_DASHBOARD.area.new}\n                            variant=\"contained\"\n                            startIcon={<Iconify icon=\"eva:plus-fill\" />}\n                        >\n                            Crear nueva area\n                        </Button>\n                    }\n                />\n\n\n\n                <Card>\n                    <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n                        <GenericDataGridCustom EndPoint={END_POINT_BANDEJA_AREA} columns={columns} />\n                    </TableContainer>\n                </Card>\n            </Container>\n\n\n\n            <MenuPopover\n                open={openPopover}\n                onClose={handleClosePopover}\n                arrow=\"right-top\"\n                sx={{ width: 140 }}\n            >\n                <MenuItem\n                    onClick={() => {\n                        handleOpenConfirm();\n                        handleClosePopover();\n                    }}\n                    sx={{ color: 'error.main' }}\n                >\n                    <Iconify icon=\"eva:trash-2-outline\" />\n                    Borrar\n                </MenuItem>\n\n                <MenuItem\n                    onClick={() => {\n                        handleEditRow(IdAUX);\n                        handleClosePopover();\n                    }}\n                >\n                    <Iconify icon=\"eva:edit-fill\" />\n                    Editar\n                </MenuItem>\n            </MenuPopover>\n\n\n            <ConfirmDialog\n                open={openConfirm}\n                onClose={handleCloseConfirm}\n                title=\"Borrar\"\n                content=\"Deseas borrar esta area?\"\n                action={\n                    <Button variant=\"contained\" color=\"error\" onClick={JustAfterClicDelete}>\n                        Borrar\n                    </Button>\n                }\n            />\n\n        </>\n    );\n}\n\n\nfunction RenderStatus(getStatus, toshow) {\n\n    console.log(toshow)\n\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    return (\n        <Label\n            variant={isLight ? 'soft' : 'filled'}\n            color={(getStatus === 'Bloqueado' && 'error') || (getStatus === 'Inactivo' && 'warning') || 'success'}\n            sx={{ mx: 'auto' }}\n        >\n            {getStatus}\n        </Label>\n    );\n}\n"],"names":["BandejaArea","useState","openConfirm","setOpenConfirm","openPopover","setOpenPopover","_areaList","tableData","setTableData","IdAUX","setIdAUX","navigate","useNavigate","handleClosePopover","handleDeleteRow","id","deleteRow","filter","row","enqueueSnackbar","useSnackbar","onDelete","data","Promise","resolve","setTimeout","console","error","columns","field","headerName","align","headerAlign","width","sortable","filterable","disableColumnMenu","renderCell","params","name","nombre","sx","height","flex","editable","color","onClick","e","Id","currentTarget","handleOpenPopover","icon","heading","links","action","component","RouterLink","to","PATH_DASHBOARD","variant","startIcon","position","overflow","EndPoint","END_POINT_BANDEJA_AREA","open","onClose","arrow","log","title","content"],"sourceRoot":""}