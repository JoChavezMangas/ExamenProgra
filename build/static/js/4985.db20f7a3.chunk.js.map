{"version":3,"file":"static/js/4985.db20f7a3.chunk.js","mappings":"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","sources":["components/color-utils/ColorPreview.js","components/color-utils/Icon.js","components/color-utils/ColorMultiPicker.js","components/color-utils/ColorSinglePicker.js","pages/dashboard/CalendarPage.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Typography, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nColorPreview.propTypes = {\n  sx: PropTypes.object,\n  limit: PropTypes.number,\n  colors: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default function ColorPreview({ colors, limit = 3, sx }) {\n  const showColor = colors.slice(0, limit);\n\n  const moreColor = colors.length - limit;\n\n  return (\n    <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={sx}>\n      {showColor.map((color, index) => (\n        <Box\n          key={color + index}\n          sx={{\n            ml: -0.75,\n            width: 16,\n            height: 16,\n            borderRadius: '50%',\n            border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n            boxShadow: (theme) => `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`,\n            bgcolor: color,\n          }}\n        />\n      ))}\n\n      {colors.length > limit && <Typography variant=\"subtitle2\">{`+${moreColor}`}</Typography>}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n//\nimport Iconify from '../iconify';\n\n// ----------------------------------------------------------------------\n\nIcon.propTypes = {\n  sx: PropTypes.object,\n  checked: PropTypes.bool,\n  whiteColor: PropTypes.bool,\n};\n\nexport default function Icon({ checked, whiteColor, sx, ...other }) {\n  const shadow = (\n    <Box\n      sx={{\n        width: 1,\n        height: 1,\n        opacity: 0.48,\n        borderRadius: '50%',\n        position: 'absolute',\n        boxShadow: '4px 4px 8px 0 currentColor',\n      }}\n    />\n  );\n\n  const icon = (\n    <Iconify\n      icon=\"eva:checkmark-fill\"\n      sx={{\n        opacity: 0,\n        ...(checked && {\n          opacity: 1,\n          color: 'common.white',\n          ...(whiteColor && {\n            color: 'common.black',\n          }),\n        }),\n      }}\n    />\n  );\n\n  return (\n    <Box\n      sx={{\n        width: 20,\n        height: 20,\n        display: 'flex',\n        borderRadius: '50%',\n        position: 'relative',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'currentColor',\n        transition: (theme) =>\n          theme.transitions.create('all', {\n            duration: theme.transitions.duration.shortest,\n          }),\n        ...(whiteColor && {\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          boxShadow: (theme) => `4px 4px 8px 0 ${alpha(theme.palette.grey[500], 0.24)}`,\n        }),\n        ...(checked && {\n          transform: 'scale(1.4)',\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      {checked && shadow}\n\n      {icon}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Checkbox } from '@mui/material';\n//\nimport Icon from './Icon';\n\n// ----------------------------------------------------------------------\n\nColorMultiPicker.propTypes = {\n  sx: PropTypes.object,\n  colors: PropTypes.array,\n  onChangeColor: PropTypes.func,\n  selected: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default function ColorMultiPicker({ colors, selected, onChangeColor, sx, ...other }) {\n  return (\n    <Box sx={sx}>\n      {colors.map((color) => {\n        const whiteColor = color === '#FFFFFF' || color === 'white';\n\n        return (\n          <Checkbox\n            key={color}\n            size=\"small\"\n            value={color}\n            color=\"default\"\n            checked={selected.includes(color)}\n            onChange={() => onChangeColor(color)}\n            icon={<Icon whiteColor={whiteColor} />}\n            checkedIcon={<Icon checked whiteColor={whiteColor} />}\n            sx={{\n              color,\n              '&:hover': { opacity: 0.72 },\n              '& svg': { width: 12, height: 12 },\n            }}\n            {...other}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport { Radio, RadioGroup } from '@mui/material';\n//\nimport Icon from './Icon';\n\n// ----------------------------------------------------------------------\n\nconst ColorSinglePicker = forwardRef(({ colors, ...other }, ref) => (\n  <RadioGroup row ref={ref} {...other}>\n    {colors.map((color) => {\n      const whiteColor = color === '#FFFFFF' || color === 'white';\n\n      return (\n        <Radio\n          key={color}\n          value={color}\n          color=\"default\"\n          icon={<Icon whiteColor={whiteColor} />}\n          checkedIcon={<Icon checked whiteColor={whiteColor} />}\n          sx={{\n            color,\n            '&:hover': { opacity: 0.72 },\n            '& svg': { width: 12, height: 12 },\n          }}\n        />\n      );\n    })}\n  </RadioGroup>\n));\n\nColorSinglePicker.propTypes = {\n  colors: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ColorSinglePicker;\n","import FullCalendar from '@fullcalendar/react'; // => request placed at the top\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\n//\nimport { Helmet } from 'react-helmet-async';\nimport { useState, useRef, useEffect } from 'react';\n// @mui\nimport { Card, Button, Container, DialogTitle, Dialog } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport {\n  getEvents,\n  createEvent,\n  updateEvent,\n  deleteEvent,\n  selectEvent,\n  selectRange,\n  onOpenModal,\n  onCloseModal,\n} from '../../redux/slices/calendar';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// utils\nimport { fTimestamp } from '../../utils/formatTime';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n// components\nimport Iconify from '../../components/iconify';\nimport { useSnackbar } from '../../components/snackbar';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport { useSettingsContext } from '../../components/settings';\nimport { useDateRangePicker } from '../../components/date-range-picker';\n// sections\nimport {\n  CalendarForm,\n  StyledCalendar,\n  CalendarToolbar,\n  CalendarFilterDrawer,\n} from '../../sections/@dashboard/calendar';\n\n// ----------------------------------------------------------------------\n\nconst COLOR_OPTIONS = [\n  '#00AB55', // theme.palette.primary.main,\n  '#1890FF', // theme.palette.info.main,\n  '#54D62C', // theme.palette.success.main,\n  '#FFC107', // theme.palette.warning.main,\n  '#FF4842', // theme.palette.error.main\n  '#04297A', // theme.palette.info.darker\n  '#7A0C2E', // theme.palette.error.darker\n];\n\nexport default function CalendarPage() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { themeStretch } = useSettingsContext();\n\n  const dispatch = useDispatch();\n\n  const isDesktop = useResponsive('up', 'sm');\n\n  const calendarRef = useRef(null);\n\n  const { events, openModal, selectedRange, selectedEventId } = useSelector(\n    (state) => state.calendar\n  );\n\n  const selectedEvent = useSelector(() => {\n    if (selectedEventId) {\n      return events.find((event) => event.id === selectedEventId);\n    }\n\n    return null;\n  });\n\n  const picker = useDateRangePicker(null, null);\n\n  const [date, setDate] = useState(new Date());\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const [filterEventColor, setFilterEventColor] = useState([]);\n\n  const [view, setView] = useState(isDesktop ? 'dayGridMonth' : 'listWeek');\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = isDesktop ? 'dayGridMonth' : 'listWeek';\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [isDesktop]);\n\n  const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n  const handleCloseFilter = () => {\n    setOpenFilter(false);\n  };\n\n  const handleClickToday = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleChangeView = (newView) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleClickDatePrev = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleClickDateNext = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleSelectRange = (arg) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.unselect();\n    }\n    dispatch(\n      selectRange({\n        start: arg.start,\n        end: arg.end,\n      })\n    );\n  };\n\n  const handleSelectEvent = (arg) => {\n    dispatch(selectEvent(arg.event.id));\n  };\n\n  const handleResizeEvent = async ({ event }) => {\n    try {\n      dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end,\n        })\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDropEvent = async ({ event }) => {\n    try {\n      dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end,\n        })\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleOpenModal = () => {\n    dispatch(onOpenModal());\n  };\n\n  const handleCloseModal = () => {\n    dispatch(onCloseModal());\n  };\n\n  const handleCreateUpdateEvent = (newEvent) => {\n    if (selectedEventId) {\n      dispatch(updateEvent(selectedEventId, newEvent));\n      enqueueSnackbar('Update success!');\n    } else {\n      dispatch(createEvent(newEvent));\n      enqueueSnackbar('Create success!');\n    }\n  };\n\n  const handleDeleteEvent = async () => {\n    try {\n      if (selectedEventId) {\n        dispatch(deleteEvent(selectedEventId));\n        handleCloseModal();\n        enqueueSnackbar('Delete success!');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFilterEventColor = (eventColor) => {\n    const checked = filterEventColor.includes(eventColor)\n      ? filterEventColor.filter((value) => value !== eventColor)\n      : [...filterEventColor, eventColor];\n\n    setFilterEventColor(checked);\n  };\n\n  const dataFiltered = applyFilter({\n    inputData: events,\n    filterEventColor,\n    filterStartDate: picker.startDate,\n    filterEndDate: picker.endDate,\n    isError: !!picker.isError,\n  });\n\n  return (\n    <>\n      <Helmet>\n        <title> Calendar | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <CustomBreadcrumbs\n          heading=\"Calendar\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Calendar',\n            },\n          ]}\n          moreLink={['https://fullcalendar.io/docs/react']}\n          action={\n            <Button\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\n              onClick={handleOpenModal}\n            >\n              New Event\n            </Button>\n          }\n        />\n\n        <Card>\n          <StyledCalendar>\n            <CalendarToolbar\n              date={date}\n              view={view}\n              onNextDate={handleClickDateNext}\n              onPrevDate={handleClickDatePrev}\n              onToday={handleClickToday}\n              onChangeView={handleChangeView}\n              onOpenFilter={handleOpenFilter}\n            />\n            <FullCalendar\n              weekends\n              editable\n              droppable\n              selectable\n              allDayMaintainDuration\n              eventResizableFromStart\n              events={dataFiltered}\n              initialEvents={events}\n              ref={calendarRef}\n              initialDate={date}\n              initialView={view}\n              dayMaxEventRows={3}\n              eventDisplay=\"block\"\n              headerToolbar={false}\n              select={handleSelectRange}\n              eventDrop={handleDropEvent}\n              eventClick={handleSelectEvent}\n              eventResize={handleResizeEvent}\n              height={isDesktop ? 720 : 'auto'}\n              plugins={[\n                listPlugin,\n                dayGridPlugin,\n                timelinePlugin,\n                timeGridPlugin,\n                interactionPlugin,\n              ]}\n            />\n          </StyledCalendar>\n        </Card>\n      </Container>\n\n      <Dialog fullWidth maxWidth=\"xs\" open={openModal} onClose={handleCloseModal}>\n        <DialogTitle>{selectedEvent ? 'Edit Event' : 'Add Event'}</DialogTitle>\n\n        <CalendarForm\n          event={selectedEvent}\n          range={selectedRange}\n          onCancel={handleCloseModal}\n          onCreateUpdateEvent={handleCreateUpdateEvent}\n          onDeleteEvent={handleDeleteEvent}\n          colorOptions={COLOR_OPTIONS}\n        />\n      </Dialog>\n\n      <CalendarFilterDrawer\n        events={events}\n        picker={picker}\n        open={openFilter}\n        onClose={handleCloseFilter}\n        colorOptions={COLOR_OPTIONS}\n        filterEventColor={filterEventColor}\n        onFilterEventColor={handleFilterEventColor}\n        onResetFilter={() => {\n          const { setStartDate, setEndDate } = picker;\n          setFilterEventColor([]);\n          if (setStartDate && setEndDate) {\n            setStartDate(null);\n            setEndDate(null);\n          }\n        }}\n        onSelectEvent={(eventId) => {\n          if (eventId) {\n            handleOpenModal();\n            dispatch(selectEvent(eventId));\n          }\n        }}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({ inputData, filterEventColor, filterStartDate, filterEndDate, isError }) {\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (filterEventColor.length) {\n    inputData = inputData.filter((event) => filterEventColor.includes(event.textColor));\n  }\n\n  if (filterStartDate && filterEndDate && !isError) {\n    inputData = inputData.filter(\n      (event) =>\n        fTimestamp(event.start) >= fTimestamp(filterStartDate) &&\n        fTimestamp(event.end) <= fTimestamp(filterEndDate)\n    );\n  }\n\n  return inputData;\n}\n"],"names":["ColorPreview","colors","limit","sx","showColor","slice","moreColor","length","Stack","component","direction","alignItems","justifyContent","map","color","index","Box","ml","width","height","borderRadius","border","theme","palette","background","paper","boxShadow","alpha","common","black","bgcolor","Typography","variant","Icon","checked","whiteColor","other","shadow","opacity","position","icon","display","transition","transitions","create","duration","shortest","divider","grey","transform","ColorMultiPicker","selected","onChangeColor","Checkbox","size","value","includes","onChange","checkedIcon","forwardRef","ref","RadioGroup","row","Radio","COLOR_OPTIONS","CalendarPage","enqueueSnackbar","useSnackbar","themeStretch","useSettingsContext","dispatch","useDispatch","isDesktop","useResponsive","calendarRef","useRef","useSelector","state","calendar","events","openModal","selectedRange","selectedEventId","selectedEvent","find","event","id","picker","useDateRangePicker","useState","Date","date","setDate","openFilter","setOpenFilter","filterEventColor","setFilterEventColor","view","setView","useEffect","getEvents","calendarEl","current","calendarApi","getApi","newView","changeView","handleResizeEvent","updateEvent","allDay","start","end","error","console","handleDropEvent","handleOpenModal","onOpenModal","handleCloseModal","onCloseModal","handleDeleteEvent","deleteEvent","dataFiltered","inputData","filterStartDate","filterEndDate","isError","stabilizedThis","el","filter","textColor","fTimestamp","applyFilter","startDate","endDate","maxWidth","heading","links","name","href","PATH_DASHBOARD","moreLink","action","startIcon","onClick","onNextDate","next","getDate","onPrevDate","prev","onToday","today","onChangeView","onOpenFilter","weekends","editable","droppable","selectable","allDayMaintainDuration","eventResizableFromStart","initialEvents","initialDate","initialView","dayMaxEventRows","eventDisplay","headerToolbar","select","arg","unselect","selectRange","eventDrop","eventClick","selectEvent","eventResize","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin","fullWidth","open","onClose","range","onCancel","onCreateUpdateEvent","newEvent","createEvent","onDeleteEvent","colorOptions","onFilterEventColor","eventColor","onResetFilter","setStartDate","setEndDate","onSelectEvent","eventId"],"sourceRoot":""}