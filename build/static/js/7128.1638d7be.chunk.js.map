{"version":3,"file":"static/js/7128.1638d7be.chunk.js","mappings":"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","sources":["components/empty-content/EmptyContent.js","components/table/utils.js","components/table/useTable.js","components/table/TableNoData.js","components/table/TableSkeleton.js","components/table/TableEmptyRows.js","components/table/TableHeadCustom.js","components/table/TableSelectedAction.js","components/table/TablePaginationCustom.js","sections/@dashboard/invoice/InvoiceAnalytic.js","sections/@dashboard/invoice/list/InvoiceTableRow.js","sections/@dashboard/invoice/list/InvoiceTableToolbar.js","pages/dashboard/InvoiceListPage.js","utils/formatTime.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { Typography, Stack } from '@mui/material';\n//\nimport Image from '../image';\n\n// ----------------------------------------------------------------------\n\nEmptyContent.propTypes = {\n  sx: PropTypes.object,\n  img: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default function EmptyContent({ title, description, img, sx, ...other }) {\n  return (\n    <Stack\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        height: 1,\n        textAlign: 'center',\n        p: (theme) => theme.spacing(8, 2),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Image\n        disabledEffect\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </Stack>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page, rowsPerPage, arrayLength) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useTable(props) {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked, newSelecteds) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }, []);\n\n  const onChangeDense = useCallback((event) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\nTableNoData.propTypes = {\n  isNotFound: PropTypes.bool,\n};\n\nexport default function TableNoData({ isNotFound }) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function TableSkeleton({ ...other }) {\n  return (\n    <TableRow {...other}>\n      <TableCell colSpan={12}>\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\n          <Skeleton\n            variant=\"rectangular\"\n            width={40}\n            height={40}\n            sx={{ borderRadius: 1, flexShrink: 0 }}\n          />\n          <Skeleton variant=\"text\" width=\"100%\" height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n        </Stack>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTableEmptyRows.propTypes = {\n  height: PropTypes.number,\n  emptyRows: PropTypes.number,\n};\n\nexport default function TableEmptyRows({ emptyRows, height }) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n};\n\n// ----------------------------------------------------------------------\n\nTableHeadCustom.propTypes = {\n  sx: PropTypes.object,\n  onSort: PropTypes.func,\n  orderBy: PropTypes.string,\n  headLabel: PropTypes.array,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllRows: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']),\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event) => onSelectAllRows(event.target.checked)}\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Checkbox, Typography, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTableSelectedAction.propTypes = {\n  sx: PropTypes.object,\n  dense: PropTypes.bool,\n  action: PropTypes.node,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllRows: PropTypes.func,\n};\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event) => onSelectAllRows(event.target.checked)}\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} Seleccionados\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Switch, TablePagination, FormControlLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTablePaginationCustom.propTypes = {\n  dense: PropTypes.bool,\n  onChangeDense: PropTypes.func,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  sx: PropTypes.object,\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 25],\n  sx,\n  ...other\n}) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Stack, Typography, Box, CircularProgress } from '@mui/material';\n// utils\nimport { fShortenNumber, fCurrency } from '../../../utils/formatNumber';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nInvoiceAnalytic.propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  color: PropTypes.string,\n  price: PropTypes.number,\n  total: PropTypes.number,\n  percent: PropTypes.number,\n};\n\nexport default function InvoiceAnalytic({ title, total, icon, color, percent, price }) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{ width: 1, minWidth: 200 }}\n    >\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\n        <Iconify icon={icon} width={24} sx={{ color, position: 'absolute' }} />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={percent}\n          size={56}\n          thickness={4}\n          sx={{ color, opacity: 0.48 }}\n        />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={100}\n          size={56}\n          thickness={4}\n          sx={{\n            top: 0,\n            left: 0,\n            opacity: 0.48,\n            position: 'absolute',\n            color: (theme) => alpha(theme.palette.grey[500], 0.16),\n          }}\n        />\n      </Stack>\n\n      <Stack spacing={0.5} sx={{ ml: 2 }}>\n        <Typography variant=\"h6\">{title}</Typography>\n\n        <Typography variant=\"subtitle2\">\n          {fShortenNumber(total)}{' '}\n          <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\n            invoices\n          </Box>\n        </Typography>\n\n        <Typography variant=\"subtitle2\" sx={{ color }}>\n          {fCurrency(price)}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Link,\n  Stack,\n  Button,\n  Divider,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n} from '@mui/material';\n// utils\nimport { fDate } from '../../../../utils/formatTime';\nimport { fCurrency } from '../../../../utils/formatNumber';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport MenuPopover from '../../../../components/menu-popover';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n\n// ----------------------------------------------------------------------\n\nInvoiceTableRow.propTypes = {\n  row: PropTypes.object,\n  selected: PropTypes.bool,\n  onEditRow: PropTypes.func,\n  onViewRow: PropTypes.func,\n  onDeleteRow: PropTypes.func,\n  onSelectRow: PropTypes.func,\n};\n\nexport default function InvoiceTableRow({\n  row,\n  selected,\n  onSelectRow,\n  onViewRow,\n  onEditRow,\n  onDeleteRow,\n}) {\n  const { sent, invoiceNumber, createDate, dueDate, status, invoiceTo, totalPrice } = row;\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <TableRow hover selected={selected}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox checked={selected} onClick={onSelectRow} />\n        </TableCell>\n\n        <TableCell>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <CustomAvatar name={invoiceTo.name} />\n\n            <div>\n              <Typography variant=\"subtitle2\" noWrap>\n                {invoiceTo.name}\n              </Typography>\n\n              <Link\n                noWrap\n                variant=\"body2\"\n                onClick={onViewRow}\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\n              >\n                {`INV-${invoiceNumber}`}\n              </Link>\n            </div>\n          </Stack>\n        </TableCell>\n\n        <TableCell align=\"left\">{fDate(createDate)}</TableCell>\n\n        <TableCell align=\"left\">{fDate(dueDate)}</TableCell>\n\n        <TableCell align=\"center\">{fCurrency(totalPrice)}</TableCell>\n\n        <TableCell align=\"center\" sx={{ textTransform: 'capitalize' }}>\n          {sent}\n        </TableCell>\n\n        <TableCell align=\"left\">\n          <Label\n            variant=\"soft\"\n            color={\n              (status === 'paid' && 'success') ||\n              (status === 'unpaid' && 'warning') ||\n              (status === 'overdue' && 'error') ||\n              'default'\n            }\n          >\n            {status}\n          </Label>\n        </TableCell>\n\n        <TableCell align=\"right\">\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            onViewRow();\n            handleClosePopover();\n          }}\n        >\n          <Iconify icon=\"eva:eye-fill\" />\n          View\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            onEditRow();\n            handleClosePopover();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Stack, InputAdornment, TextField, MenuItem, Button } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst INPUT_WIDTH = 160;\n\nInvoiceTableToolbar.propTypes = {\n  isFiltered: PropTypes.bool,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n  onResetFilter: PropTypes.func,\n  filterService: PropTypes.string,\n  onFilterEndDate: PropTypes.func,\n  onFilterService: PropTypes.func,\n  onFilterStartDate: PropTypes.func,\n  filterEndDate: PropTypes.instanceOf(Date),\n  filterStartDate: PropTypes.instanceOf(Date),\n  optionsService: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default function InvoiceTableToolbar({\n  isFiltered,\n  filterName,\n  onFilterName,\n  filterEndDate,\n  filterService,\n  onResetFilter,\n  optionsService,\n  filterStartDate,\n  onFilterService,\n  onFilterEndDate,\n  onFilterStartDate,\n}) {\n  return (\n    <Stack\n      spacing={2}\n      alignItems=\"center\"\n      direction={{\n        xs: 'column',\n        md: 'row',\n      }}\n      sx={{ px: 2.5, py: 3 }}\n    >\n      <TextField\n        fullWidth\n        select\n        label=\"Service type\"\n        value={filterService}\n        onChange={onFilterService}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: { maxHeight: 220 },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { md: INPUT_WIDTH },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsService.map((option) => (\n          <MenuItem\n            key={option}\n            value={option}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <DatePicker\n        label=\"Start date\"\n        value={filterStartDate}\n        onChange={onFilterStartDate}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{\n              maxWidth: { md: INPUT_WIDTH },\n            }}\n          />\n        )}\n      />\n\n      <DatePicker\n        label=\"End date\"\n        value={filterEndDate}\n        onChange={onFilterEndDate}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{\n              maxWidth: { md: INPUT_WIDTH },\n            }}\n          />\n        )}\n      />\n\n      <TextField\n        fullWidth\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search client or invoice number...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      {isFiltered && (\n        <Button\n          color=\"error\"\n          sx={{ flexShrink: 0 }}\n          onClick={onResetFilter}\n          startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n        >\n          Clear\n        </Button>\n      )}\n    </Stack>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { useState } from 'react';\nimport sumBy from 'lodash/sumBy';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Tab,\n  Tabs,\n  Card,\n  Table,\n  Stack,\n  Button,\n  Tooltip,\n  Divider,\n  TableBody,\n  Container,\n  IconButton,\n  TableContainer,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// utils\nimport { fTimestamp } from '../../utils/formatTime';\n// _mock_\nimport { _invoices } from '../../_mock/arrays';\n// components\nimport Label from '../../components/label';\nimport Iconify from '../../components/iconify';\nimport Scrollbar from '../../components/scrollbar';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport { useSettingsContext } from '../../components/settings';\nimport {\n  useTable,\n  getComparator,\n  emptyRows,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from '../../components/table';\n// sections\nimport InvoiceAnalytic from '../../sections/@dashboard/invoice/InvoiceAnalytic';\nimport { InvoiceTableRow, InvoiceTableToolbar } from '../../sections/@dashboard/invoice/list';\n\n// ----------------------------------------------------------------------\n\nconst SERVICE_OPTIONS = [\n  'all',\n  'full stack development',\n  'backend development',\n  'ui design',\n  'ui/ux design',\n  'front end development',\n];\n\nconst TABLE_HEAD = [\n  { id: 'invoiceNumber', label: 'Client', align: 'left' },\n  { id: 'createDate', label: 'Create', align: 'left' },\n  { id: 'dueDate', label: 'Due', align: 'left' },\n  { id: 'price', label: 'Amount', align: 'center', width: 140 },\n  { id: 'sent', label: 'Sent', align: 'center', width: 140 },\n  { id: 'status', label: 'Status', align: 'left' },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceListPage() {\n  const theme = useTheme();\n\n  const { themeStretch } = useSettingsContext();\n\n  const navigate = useNavigate();\n\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable({ defaultOrderBy: 'createDate' });\n\n  const [tableData, setTableData] = useState(_invoices);\n\n  const [filterName, setFilterName] = useState('');\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  const [filterEndDate, setFilterEndDate] = useState(null);\n\n  const [filterService, setFilterService] = useState('all');\n\n  const [filterStartDate, setFilterStartDate] = useState(null);\n\n  const dataFiltered = applyFilter({\n    inputData: tableData,\n    comparator: getComparator(order, orderBy),\n    filterName,\n    filterService,\n    filterStatus,\n    filterStartDate,\n    filterEndDate,\n  });\n\n  const dataInPage = dataFiltered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n  const denseHeight = dense ? 56 : 76;\n\n  const isFiltered =\n    filterStatus !== 'all' ||\n    filterName !== '' ||\n    filterService !== 'all' ||\n    (!!filterStartDate && !!filterEndDate);\n\n  const isNotFound =\n    (!dataFiltered.length && !!filterName) ||\n    (!dataFiltered.length && !!filterStatus) ||\n    (!dataFiltered.length && !!filterService) ||\n    (!dataFiltered.length && !!filterEndDate) ||\n    (!dataFiltered.length && !!filterStartDate);\n\n  const getLengthByStatus = (status) => tableData.filter((item) => item.status === status).length;\n\n  const getTotalPriceByStatus = (status) =>\n    sumBy(\n      tableData.filter((item) => item.status === status),\n      'totalPrice'\n    );\n\n  const getPercentByStatus = (status) => (getLengthByStatus(status) / tableData.length) * 100;\n\n  const TABS = [\n    { value: 'all', label: 'All', color: 'info', count: tableData.length },\n    { value: 'paid', label: 'Paid', color: 'success', count: getLengthByStatus('paid') },\n    { value: 'unpaid', label: 'Unpaid', color: 'warning', count: getLengthByStatus('unpaid') },\n    { value: 'overdue', label: 'Overdue', color: 'error', count: getLengthByStatus('overdue') },\n    { value: 'draft', label: 'Draft', color: 'default', count: getLengthByStatus('draft') },\n  ];\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleFilterStatus = (event, newValue) => {\n    setPage(0);\n    setFilterStatus(newValue);\n  };\n\n  const handleFilterName = (event) => {\n    setPage(0);\n    setFilterName(event.target.value);\n  };\n\n  const handleFilterService = (event) => {\n    setPage(0);\n    setFilterService(event.target.value);\n  };\n\n  const handleDeleteRow = (id) => {\n    const deleteRow = tableData.filter((row) => row.id !== id);\n    setSelected([]);\n    setTableData(deleteRow);\n\n    if (page > 0) {\n      if (dataInPage.length < 2) {\n        setPage(page - 1);\n      }\n    }\n  };\n\n  const handleDeleteRows = (selectedRows) => {\n    const deleteRows = tableData.filter((row) => !selectedRows.includes(row.id));\n    setSelected([]);\n    setTableData(deleteRows);\n\n    if (page > 0) {\n      if (selectedRows.length === dataInPage.length) {\n        setPage(page - 1);\n      } else if (selectedRows.length === dataFiltered.length) {\n        setPage(0);\n      } else if (selectedRows.length > dataInPage.length) {\n        const newPage = Math.ceil((tableData.length - selectedRows.length) / rowsPerPage) - 1;\n        setPage(newPage);\n      }\n    }\n  };\n\n  const handleEditRow = (id) => {\n    navigate(PATH_DASHBOARD.invoice.edit(id));\n  };\n\n  const handleViewRow = (id) => {\n    navigate(PATH_DASHBOARD.invoice.view(id));\n  };\n\n  const handleResetFilter = () => {\n    setFilterName('');\n    setFilterStatus('all');\n    setFilterService('all');\n    setFilterEndDate(null);\n    setFilterStartDate(null);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> Invoice: List | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Invoice List\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Invoices',\n              href: PATH_DASHBOARD.invoice.root,\n            },\n            {\n              name: 'List',\n            },\n          ]}\n          action={\n            <Button\n              component={RouterLink}\n              to={PATH_DASHBOARD.invoice.new}\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\n            >\n              New Invoice\n            </Button>\n          }\n        />\n\n        <Card sx={{ mb: 5 }}>\n          <Scrollbar>\n            <Stack\n              direction=\"row\"\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\n              sx={{ py: 2 }}\n            >\n              <InvoiceAnalytic\n                title=\"Total\"\n                total={tableData.length}\n                percent={100}\n                price={sumBy(tableData, 'totalPrice')}\n                icon=\"ic:round-receipt\"\n                color={theme.palette.info.main}\n              />\n\n              <InvoiceAnalytic\n                title=\"Paid\"\n                total={getLengthByStatus('paid')}\n                percent={getPercentByStatus('paid')}\n                price={getTotalPriceByStatus('paid')}\n                icon=\"eva:checkmark-circle-2-fill\"\n                color={theme.palette.success.main}\n              />\n\n              <InvoiceAnalytic\n                title=\"Unpaid\"\n                total={getLengthByStatus('unpaid')}\n                percent={getPercentByStatus('unpaid')}\n                price={getTotalPriceByStatus('unpaid')}\n                icon=\"eva:clock-fill\"\n                color={theme.palette.warning.main}\n              />\n\n              <InvoiceAnalytic\n                title=\"Overdue\"\n                total={getLengthByStatus('overdue')}\n                percent={getPercentByStatus('overdue')}\n                price={getTotalPriceByStatus('overdue')}\n                icon=\"eva:bell-fill\"\n                color={theme.palette.error.main}\n              />\n\n              <InvoiceAnalytic\n                title=\"Draft\"\n                total={getLengthByStatus('draft')}\n                percent={getPercentByStatus('draft')}\n                price={getTotalPriceByStatus('draft')}\n                icon=\"eva:file-fill\"\n                color={theme.palette.text.secondary}\n              />\n            </Stack>\n          </Scrollbar>\n        </Card>\n\n        <Card>\n          <Tabs\n            value={filterStatus}\n            onChange={handleFilterStatus}\n            sx={{\n              px: 2,\n              bgcolor: 'background.neutral',\n            }}\n          >\n            {TABS.map((tab) => (\n              <Tab\n                key={tab.value}\n                value={tab.value}\n                label={tab.label}\n                icon={\n                  <Label color={tab.color} sx={{ mr: 1 }}>\n                    {tab.count}\n                  </Label>\n                }\n              />\n            ))}\n          </Tabs>\n\n          <Divider />\n\n          <InvoiceTableToolbar\n            filterName={filterName}\n            isFiltered={isFiltered}\n            filterService={filterService}\n            filterEndDate={filterEndDate}\n            onFilterName={handleFilterName}\n            optionsService={SERVICE_OPTIONS}\n            filterStartDate={filterStartDate}\n            onResetFilter={handleResetFilter}\n            onFilterService={handleFilterService}\n            onFilterStartDate={(newValue) => {\n              setFilterStartDate(newValue);\n            }}\n            onFilterEndDate={(newValue) => {\n              setFilterEndDate(newValue);\n            }}\n          />\n\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n            <TableSelectedAction\n              dense={dense}\n              numSelected={selected.length}\n              rowCount={tableData.length}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              action={\n                <Stack direction=\"row\">\n                  <Tooltip title=\"Sent\">\n                    <IconButton color=\"primary\">\n                      <Iconify icon=\"ic:round-send\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Download\">\n                    <IconButton color=\"primary\">\n                      <Iconify icon=\"eva:download-outline\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Print\">\n                    <IconButton color=\"primary\">\n                      <Iconify icon=\"eva:printer-fill\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton color=\"primary\" onClick={handleOpenConfirm}>\n                      <Iconify icon=\"eva:trash-2-outline\" />\n                    </IconButton>\n                  </Tooltip>\n                </Stack>\n              }\n            />\n\n            <Scrollbar>\n              <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\n                <TableHeadCustom\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={tableData.length}\n                  numSelected={selected.length}\n                  onSort={onSort}\n                  onSelectAllRows={(checked) =>\n                    onSelectAllRows(\n                      checked,\n                      tableData.map((row) => row.id)\n                    )\n                  }\n                />\n\n                <TableBody>\n                  {dataFiltered\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => (\n                      <InvoiceTableRow\n                        key={row.id}\n                        row={row}\n                        selected={selected.includes(row.id)}\n                        onSelectRow={() => onSelectRow(row.id)}\n                        onViewRow={() => handleViewRow(row.id)}\n                        onEditRow={() => handleEditRow(row.id)}\n                        onDeleteRow={() => handleDeleteRow(row.id)}\n                      />\n                    ))}\n\n                  <TableEmptyRows\n                    height={denseHeight}\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n                  />\n\n                  <TableNoData isNotFound={isNotFound} />\n                </TableBody>\n              </Table>\n            </Scrollbar>\n          </TableContainer>\n\n          <TablePaginationCustom\n            count={dataFiltered.length}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            onPageChange={onChangePage}\n            onRowsPerPageChange={onChangeRowsPerPage}\n            //\n            dense={dense}\n            onChangeDense={onChangeDense}\n          />\n        </Card>\n      </Container>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {selected.length} </strong> items?\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              handleDeleteRows(selected);\n              handleCloseConfirm();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({\n  inputData,\n  comparator,\n  filterName,\n  filterStatus,\n  filterService,\n  filterStartDate,\n  filterEndDate,\n}) {\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (filterName) {\n    inputData = inputData.filter(\n      (invoice) =>\n        invoice.invoiceNumber.toLowerCase().indexOf(filterName.toLowerCase()) !== -1 ||\n        invoice.invoiceTo.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    );\n  }\n\n  if (filterStatus !== 'all') {\n    inputData = inputData.filter((invoice) => invoice.status === filterStatus);\n  }\n\n  if (filterService !== 'all') {\n    inputData = inputData.filter((invoice) =>\n      invoice.items.some((c) => c.service === filterService)\n    );\n  }\n\n  if (filterStartDate && filterEndDate) {\n    inputData = inputData.filter(\n      (invoice) =>\n        fTimestamp(invoice.createDate) >= fTimestamp(filterStartDate) &&\n        fTimestamp(invoice.createDate) <= fTimestamp(filterEndDate)\n    );\n  }\n\n  return inputData;\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'yyyy MM dd';\n  // console.log (fm);\n  return date ? format(new Date(date), fm) : '';\n}\n\n\nexport function fEspDate(date, newFormat) {\n\n    const Meses = 'Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre'.split(',')\n    let result = \"\";\n\n        \n    if (date) {\n        result = `${date.getFullYear()}-${Meses[date.getMonth() + 1]}-${date.getDay()}`;\n    }\n\n    return result;\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n"],"names":["EmptyContent","title","description","img","sx","other","Stack","alignItems","justifyContent","height","textAlign","p","theme","spacing","disabledEffect","alt","src","mb","Typography","variant","gutterBottom","color","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","onChangeDense","TableNoData","isNotFound","TableRow","TableCell","colSpan","TableSkeleton","direction","Skeleton","width","borderRadius","flexShrink","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","onClick","textTransform","label","Box","TableSelectedAction","action","pl","pr","top","left","zIndex","bgcolor","ml","flexGrow","TablePaginationCustom","rowsPerPageOptions","TablePagination","component","FormControlLabel","control","Switch","py","md","InvoiceAnalytic","total","icon","percent","price","CircularProgress","size","thickness","opacity","alpha","palette","grey","fShortenNumber","typography","fCurrency","InvoiceTableRow","row","onViewRow","onEditRow","onDeleteRow","sent","invoiceNumber","createDate","dueDate","status","invoiceTo","totalPrice","openConfirm","setOpenConfirm","openPopover","setOpenPopover","handleClosePopover","hover","name","noWrap","Link","cursor","fDate","IconButton","currentTarget","open","onClose","arrow","MenuItem","Divider","borderStyle","content","Button","InvoiceTableToolbar","isFiltered","filterName","onFilterName","filterEndDate","filterService","onResetFilter","optionsService","filterStartDate","onFilterService","onFilterEndDate","onFilterStartDate","xs","px","TextField","fullWidth","select","SelectProps","MenuProps","PaperProps","maxHeight","maxWidth","option","mx","DatePicker","renderInput","params","placeholder","InputProps","startAdornment","InputAdornment","startIcon","SERVICE_OPTIONS","TABLE_HEAD","InvoiceListPage","useTheme","themeStretch","useSettingsContext","navigate","useNavigate","_invoices","tableData","setTableData","setFilterName","filterStatus","setFilterStatus","setFilterEndDate","setFilterService","setFilterStartDate","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","filter","invoice","toLowerCase","items","some","c","service","fTimestamp","applyFilter","dataInPage","denseHeight","getLengthByStatus","item","getTotalPriceByStatus","sumBy","getPercentByStatus","TABS","count","handleCloseConfirm","Container","heading","links","href","PATH_DASHBOARD","RouterLink","to","Card","divider","orientation","flexItem","info","main","success","warning","error","text","secondary","Tabs","newValue","tab","Tab","mr","TableContainer","Tooltip","Table","TableBody","includes","deleteRow","handleDeleteRow","onPageChange","onRowsPerPageChange","selectedRows","deleteRows","ceil","handleDeleteRows","date","newFormat","fm","format","Date","fEspDate","Meses","split","result","getFullYear","getMonth","getDay","fDateTime","getTime","fToNow","formatDistanceToNow","addSuffix"],"sourceRoot":""}