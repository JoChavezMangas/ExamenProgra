{"version":3,"file":"static/js/1174.82a1cee7.chunk.js","mappings":"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","sources":["sections/_examples/extra/form/schema.js","sections/_examples/extra/form/ValuesPreview.js","sections/_examples/extra/form/ReactHookForm.js","pages/components/extra/DemoFormValidationPage.js"],"sourcesContent":["import * as Yup from 'yup';\n\n// ----------------------------------------------------------------------\n\nexport const FormSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .required('Full name is required')\n    .min(6, 'Mininum 6 characters')\n    .max(32, 'Maximum 32 characters'),\n  email: Yup.string().required('Email is required').email('Email must be a valid email address'),\n  age: Yup.number()\n    .required('Age is required')\n    .moreThan(18, 'Age must be between 18 and 100')\n    .lessThan(100, 'Age must be between 18 and 100'),\n  //\n  startDate: Yup.date().nullable().required('Start date is required'),\n  endDate: Yup.date()\n    .required('End date is required')\n    .nullable()\n    .min(Yup.ref('startDate'), 'End date must be later than start date'),\n  //\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password should be of minimum 6 characters length'),\n  confirmPassword: Yup.string()\n    .required('Confirm password is required')\n    .oneOf([Yup.ref('password')], \"Password's not match\"),\n  //\n  slider: Yup.number().required('Slider is required').min(10, 'Mininum value is >= 10'),\n  sliderRange: Yup.mixed()\n    .required('Slider range is is required')\n    .test('min', 'Range must be between 20 and 80', (value) => value[0] >= 20)\n    .test('max', 'Range must be between 20 and 80', (value) => value[1] <= 80),\n  //\n  singleUpload: Yup.mixed().required('Single upload is required').nullable(true),\n  multiUpload: Yup.array().min(2, 'Must have at least 2 items'),\n  //\n  checkbox: Yup.boolean().oneOf([true], 'Checkbox is required'),\n  multiCheckbox: Yup.array().min(1, 'Choose at least one option'),\n  //\n  singleSelect: Yup.string().required('Single select is required'),\n  multiSelect: Yup.array().min(2, 'Must have at least 2 items'),\n  //\n  switch: Yup.boolean().oneOf([true], 'Switch is required'),\n  radioGroup: Yup.string().required('Choose at least one option'),\n  editor: Yup.string().required('Editor is required'),\n  autocomplete: Yup.mixed().required('Autocomplete is required').nullable(true),\n});\n","// form\nimport { useFormContext } from 'react-hook-form';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Stack, Typography, Portal, Divider } from '@mui/material';\n// utils\nimport { bgBlur } from '../../../../utils/cssStyles';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// components\nimport { fileData } from '../../../../components/file-thumbnail';\n\n// ----------------------------------------------------------------------\n\nexport default function ValuesPreview() {\n  const theme = useTheme();\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const {\n    watch,\n    formState: { errors },\n  } = useFormContext();\n\n  const values = watch();\n\n  if (!isDesktop) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Stack\n        sx={{\n          p: 3,\n          top: 0,\n          right: 0,\n          height: 1,\n          width: 280,\n          position: 'fixed',\n          overflowX: 'auto',\n          color: 'common.white',\n          zIndex: theme.zIndex.drawer,\n          ...bgBlur({ color: theme.palette.grey[900] }),\n        }}\n      >\n        <Typography variant=\"overline\" sx={{ mb: 2, color: 'success.light' }}>\n          Values\n        </Typography>\n\n        {Object.keys(values).map((value) => (\n          <Stack key={value} sx={{ typography: 'caption', mt: 0.5 }}>\n            <Typography variant=\"body2\" sx={{ color: 'warning.main' }}>\n              {value} :\n            </Typography>\n\n            {parseValue(values, value)}\n          </Stack>\n        ))}\n\n        <Divider sx={{ my: 2 }} />\n\n        <Typography variant=\"overline\" sx={{ mb: 2, color: 'error.light' }}>\n          Errors\n        </Typography>\n\n        <Typography variant=\"caption\" sx={{ color: 'error.light' }}>\n          {JSON.stringify(Object.keys(errors), null, 2)}\n        </Typography>\n      </Stack>\n    </Portal>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction parseValue(values, value) {\n  if (value === 'singleUpload') {\n    return JSON.stringify(values.singleUpload && fileData(values.singleUpload));\n  }\n  if (value === 'multiUpload') {\n    return JSON.stringify(values.multiUpload.map((file) => fileData(file)));\n  }\n  return JSON.stringify(values[value]) || '---';\n}\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// form\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm, Controller } from 'react-hook-form';\n// @mui\nimport {\n  Grid,\n  Stack,\n  Divider,\n  MenuItem,\n  Backdrop,\n  TextField,\n  Typography,\n  IconButton,\n  InputAdornment,\n  CircularProgress,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\n// components\nimport Iconify from '../../../../components/iconify';\nimport FormProvider, {\n  RHFEditor,\n  RHFSelect,\n  RHFUpload,\n  RHFSwitch,\n  RHFSlider,\n  RHFCheckbox,\n  RHFTextField,\n  RHFRadioGroup,\n  RHFMultiSelect,\n  RHFAutocomplete,\n  RHFMultiCheckbox,\n} from '../../../../components/hook-form';\n//\nimport { FormSchema } from './schema';\nimport ValuesPreview from './ValuesPreview';\n\n// ----------------------------------------------------------------------\n\nconst OPTIONS = [\n  { value: 'option 1', label: 'Option 1' },\n  { value: 'option 2', label: 'Option 2' },\n  { value: 'option 3', label: 'Option 3' },\n  { value: 'option 4', label: 'Option 4' },\n  { value: 'option 5', label: 'Option 5' },\n  { value: 'option 6', label: 'Option 6' },\n  { value: 'option 7', label: 'Option 7' },\n  { value: 'option 8', label: 'Option 8' },\n];\n\nexport const defaultValues = {\n  age: 0,\n  email: '',\n  fullName: '',\n  //\n  editor: '',\n  switch: false,\n  radioGroup: '',\n  autocomplete: null,\n  //\n  password: '',\n  confirmPassword: '',\n  //\n  startDate: new Date(),\n  endDate: null,\n  //\n  singleUpload: null,\n  multiUpload: [],\n  //\n  singleSelect: '',\n  multiSelect: [],\n  //\n  checkbox: false,\n  multiCheckbox: [],\n  //\n  slider: 8,\n  sliderRange: [15, 80],\n};\n\nReactHookForm.propTypes = {\n  debug: PropTypes.bool,\n};\n\nexport default function ReactHookForm({ debug }) {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const methods = useForm({\n    resolver: yupResolver(FormSchema),\n    defaultValues,\n  });\n\n  const {\n    watch,\n    reset,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n\n  const onSubmit = async (data) => {\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n    console.log('DATA', data);\n    reset();\n  };\n\n  const handleDropSingleFile = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      const newFile = Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      });\n\n      if (newFile) {\n        setValue('singleUpload', newFile, { shouldValidate: true });\n      }\n    },\n    [setValue]\n  );\n\n  const handleDropMultiFile = useCallback(\n    (acceptedFiles) => {\n      const files = values.multiUpload || [];\n\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setValue('multiUpload', [...files, ...newFiles], { shouldValidate: true });\n    },\n    [setValue, values.multiUpload]\n  );\n\n  return (\n    <>\n      {isSubmitting && (\n        <Backdrop open sx={{ zIndex: (theme) => theme.zIndex.modal + 1 }}>\n          <CircularProgress color=\"primary\" />\n        </Backdrop>\n      )}\n\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Grid container spacing={5}>\n          <Grid item xs={12} md={6}>\n            <Stack spacing={2}>\n              <Block>\n                <RHFTextField name=\"fullName\" label=\"Full Name\" />\n              </Block>\n\n              <Block>\n                <RHFTextField name=\"email\" label=\"Email address\" />\n              </Block>\n\n              <Block>\n                <RHFTextField\n                  name=\"age\"\n                  label=\"Age\"\n                  onChange={(event) =>\n                    setValue('age', Number(event.target.value), { shouldValidate: true })\n                  }\n                  InputProps={{\n                    type: 'number',\n                  }}\n                />\n              </Block>\n\n              <Stack spacing={2} direction={{ xs: 'column', sm: 'row' }}>\n                <Controller\n                  name=\"startDate\"\n                  control={control}\n                  render={({ field, fieldState: { error } }) => (\n                    <DatePicker\n                      {...field}\n                      label=\"Start date\"\n                      inputFormat=\"dd/MM/yyyy\"\n                      renderInput={(params) => (\n                        <TextField\n                          fullWidth\n                          {...params}\n                          error={!!error}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                  )}\n                />\n\n                <Controller\n                  name=\"endDate\"\n                  control={control}\n                  render={({ field, fieldState: { error } }) => (\n                    <DatePicker\n                      {...field}\n                      label=\"End date\"\n                      inputFormat=\"dd/MM/yyyy\"\n                      renderInput={(params) => (\n                        <TextField\n                          fullWidth\n                          {...params}\n                          error={!!error}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                  )}\n                />\n              </Stack>\n\n              <Stack spacing={2} direction={{ xs: 'column', sm: 'row' }}>\n                <Block>\n                  <RHFTextField\n                    name=\"password\"\n                    label=\"Password\"\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                            <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Block>\n\n                <Block>\n                  <RHFTextField\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                            <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Block>\n              </Stack>\n\n              <Block label=\"RHFAutocomplete\">\n                <RHFAutocomplete\n                  name=\"autocomplete\"\n                  label=\"Autocomplete\"\n                  options={OPTIONS}\n                  getOptionLabel={(option) => option.label}\n                  isOptionEqualToValue={(option, value) => option.value === value.value}\n                />\n              </Block>\n\n              <Block label=\"RHFSelect\">\n                <RHFSelect name=\"singleSelect\" label=\"Single select\">\n                  <MenuItem value=\"\">None</MenuItem>\n                  <Divider sx={{ borderStyle: 'dashed' }} />\n                  {OPTIONS.map((option) => (\n                    <MenuItem key={option.value} value={option.label}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </RHFSelect>\n              </Block>\n\n              <Block label=\"RHFMultiSelect\">\n                <RHFMultiSelect\n                  chip\n                  checkbox\n                  name=\"multiSelect\"\n                  label=\"Multi select\"\n                  options={OPTIONS}\n                />\n              </Block>\n\n              <Block label=\"RHFEditor\">\n                <RHFEditor simple name=\"editor\" sx={{ height: 200 }} />\n              </Block>\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Stack spacing={2}>\n              <Block label=\"RHFUpload\">\n                <RHFUpload\n                  name=\"singleUpload\"\n                  maxSize={3145728}\n                  onDrop={handleDropSingleFile}\n                  onDelete={() => setValue('singleUpload', null, { shouldValidate: true })}\n                />\n              </Block>\n\n              <Block label=\"RHFUpload\">\n                <RHFUpload\n                  multiple\n                  thumbnail\n                  name=\"multiUpload\"\n                  maxSize={3145728}\n                  onDrop={handleDropMultiFile}\n                  onRemove={(inputFile) =>\n                    setValue(\n                      'multiUpload',\n                      values.multiUpload &&\n                        values.multiUpload?.filter((file) => file !== inputFile),\n                      { shouldValidate: true }\n                    )\n                  }\n                  onRemoveAll={() => setValue('multiUpload', [], { shouldValidate: true })}\n                  onUpload={() => console.log('ON UPLOAD')}\n                />\n              </Block>\n\n              <RHFCheckbox name=\"checkbox\" label=\"RHFCheckbox\" />\n\n              <RHFSwitch name=\"switch\" label=\"RHFSwitch\" />\n\n              <RHFRadioGroup\n                row\n                name=\"radioGroup\"\n                label=\"RHFRadioGroup\"\n                spacing={4}\n                options={[\n                  { value: 'option 1', label: 'Radio 1' },\n                  { value: 'option 2', label: 'Radio 2' },\n                  { value: 'option 3', label: 'Radio 3' },\n                ]}\n              />\n\n              <RHFMultiCheckbox\n                row\n                name=\"multiCheckbox\"\n                label=\"RHFMultiCheckbox\"\n                spacing={4}\n                options={[\n                  { value: 'option 1', label: 'Checkbox 1' },\n                  { value: 'option 2', label: 'Checkbox 2' },\n                  { value: 'option 3', label: 'Checkbox 3' },\n                ]}\n              />\n\n              <Block label=\"RHFSlider\">\n                <RHFSlider name=\"slider\" />\n              </Block>\n\n              <Block label=\"RHFSlider\">\n                <RHFSlider name=\"sliderRange\" />\n              </Block>\n\n              <LoadingButton\n                fullWidth\n                color=\"info\"\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n              >\n                Submit to check\n              </LoadingButton>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        {debug && <ValuesPreview />}\n      </FormProvider>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  label: PropTypes.string,\n  children: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nfunction Block({ label = 'RHFTextField', sx, children }) {\n  return (\n    <Stack spacing={1} sx={{ width: 1, ...sx }}>\n      <Typography\n        variant=\"caption\"\n        sx={{\n          textAlign: 'right',\n          fontStyle: 'italic',\n          color: 'text.disabled',\n        }}\n      >\n        {label}\n      </Typography>\n      {children}\n    </Stack>\n  );\n}\n","import { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport {\n  Box,\n  Stack,\n  Switch,\n  Divider,\n  Container,\n  Typography,\n  FormControlLabel,\n} from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport { ReactHookForm } from '../../../sections/_examples/extra/form';\n\n// ----------------------------------------------------------------------\n\nexport default function DemoFormValidationPage() {\n  const [debug, setDebug] = useState(true);\n\n  const handleChangeDebug = (event) => {\n    setDebug(event.target.checked);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> Extra Components: Form Validation | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Form Validation\"\n            links={[\n              { name: 'Components', href: PATH_PAGE.components },\n              { name: 'Form Validation' },\n            ]}\n            moreLink={['https://react-hook-form.com/', 'https://github.com/jquense/yup']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h4\"> React Hook Form + Yup </Typography>\n          <FormControlLabel\n            control={<Switch checked={debug} onChange={handleChangeDebug} />}\n            label=\"Show Debug\"\n            labelPlacement=\"start\"\n          />\n        </Stack>\n\n        <Divider sx={{ my: 5 }} />\n\n        <ReactHookForm debug={debug} />\n      </Container>\n    </>\n  );\n}\n"],"names":["FormSchema","Yup","shape","fullName","required","min","max","email","age","moreThan","lessThan","startDate","nullable","endDate","password","confirmPassword","oneOf","slider","sliderRange","test","value","singleUpload","multiUpload","checkbox","multiCheckbox","singleSelect","multiSelect","switch","radioGroup","editor","autocomplete","ValuesPreview","theme","useTheme","isDesktop","useResponsive","useFormContext","watch","errors","formState","values","Portal","Stack","sx","p","top","right","height","width","position","overflowX","color","zIndex","drawer","bgBlur","palette","grey","Typography","variant","mb","Object","keys","map","typography","mt","parseValue","Divider","my","JSON","stringify","fileData","file","OPTIONS","label","defaultValues","Date","ReactHookForm","debug","useState","showPassword","setShowPassword","methods","useForm","resolver","yupResolver","reset","control","setValue","handleSubmit","isSubmitting","onSubmit","data","Promise","resolve","setTimeout","console","log","handleDropSingleFile","useCallback","acceptedFiles","newFile","assign","preview","URL","createObjectURL","shouldValidate","handleDropMultiFile","files","newFiles","Backdrop","open","modal","CircularProgress","Grid","container","spacing","item","xs","md","Block","name","onChange","event","Number","target","InputProps","type","direction","sm","render","field","error","fieldState","DatePicker","inputFormat","renderInput","params","TextField","fullWidth","helperText","message","endAdornment","InputAdornment","IconButton","onClick","edge","icon","options","getOptionLabel","option","isOptionEqualToValue","MenuItem","borderStyle","chip","simple","maxSize","onDrop","onDelete","multiple","thumbnail","onRemove","inputFile","filter","onRemoveAll","onUpload","row","LoadingButton","size","loading","children","textAlign","fontStyle","DemoFormValidationPage","setDebug","Box","pt","pb","bgcolor","mode","Container","heading","links","href","PATH_PAGE","moreLink","alignItems","justifyContent","FormControlLabel","Switch","checked","labelPlacement"],"sourceRoot":""}