{"version":3,"file":"static/js/3849.eff4552a.chunk.js","mappings":"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","sources":["pages/Vacaciones/ModalAdelanto.js","pages/Vacaciones/TablaAdelanto.js","pages/Vacaciones/TablaCerrados.js","pages/Vacaciones/TablaEspeciales.js","pages/Vacaciones/HistorialPeticionesEspeciales.js","pages/Vacaciones/TablaPeticionesEspeciales.js","pages/Vacaciones/Periodos.js"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n// @mui\nimport {\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    IconButton,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Grid,\n    TextField,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { GridExpandMoreIcon } from '@mui/x-data-grid';\nimport GenericCombo from '../../utils/GenericCombo';\nimport Iconify from '../../components/iconify';\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\nimport {\n    END_POINT_OBTENER_PERIODO_VACACIONES_ADELANTAR,\n    END_POINT_AGREGAR_PERIODO_VACACIONES,\n    END_POINT_OBTENER_HISTORIAL_VACACIONES_EMPLEADO\n} from '../../config-global';\nimport { AxiosMandarForm,AxiosCombo } from '../../_Axios/AxiosFomr';\n\n\n\nModalAdelanto.propTypes = {\n    empleadoId: PropTypes.string\n};\n\nexport default function ModalAdelanto({ empleadoId }) {\n\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const methods = useForm({\n        // setValue\n    });\n    const {\n        handleSubmit,\n    } = methods;\n    const onSubmit = async (data) => {\n        try {\n            const form = new FormData();\n            form.append('EmpleadoSolicitante', empleadoId)\n            form.append('comentario', data.texto)\n            AxiosMandarForm(form, END_POINT_AGREGAR_PERIODO_VACACIONES, () => { }, () => { } )\n        }  catch (error) {\n            console.error(error);\n        }\n    };\n\n    const [comentarios, setComentarios] = useState( [[\"nombre\", \"comentario\", \"fecha\"]])\n\n    React.useEffect(() => {\n        function ObtenerComentarios() {\n            AxiosCombo(END_POINT_OBTENER_HISTORIAL_VACACIONES_EMPLEADO, empleadoId, setComentarios)\n        }\n        ObtenerComentarios()\n    }, [empleadoId])\n\n    return (\n        <>\n            <Button color='warning' onClick={(e) => handleClickOpen()}>\n                <Iconify icon=\"ic:round-keyboard-double-arrow-right\" />Adelantar Período\n            </Button>\n\n            <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n                <DialogTitle variant='h5' color='primary'>Detalles de petición</DialogTitle>\n\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}  >\n                    <DialogContent>\n                        <div>Empleado</div>\n                        <br />\n                        <div>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} md={12}>\n                                    <GenericCombo\n                                        endPointURL={END_POINT_OBTENER_PERIODO_VACACIONES_ADELANTAR}\n                                        nameAUX=\"tipoRegimen\"\n                                        label=\"Período a adelantar\"\n                                        placeholder=\"Período a adelantar\"\n                                        valorFiltro={empleadoId}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </div>\n                        <br />\n                        <Accordion sx={{ border: '1px solid #919EAB', background: 'rgba(243, 246, 249, 0.4)', borderRadius: '8px' }}>\n                            <AccordionSummary\n                                expandIcon={<GridExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                            >\n                                Historial de comentarios\n                            </AccordionSummary>\n                            <AccordionDetails>\n\n                                {comentarios.map((item) =>\n                                    <Comentarios Nombre={item[0]} Comentario={item[1]} Fecha={item[2]}/>\n                                )}\n                                \n                            </AccordionDetails>\n                        </Accordion>\n\n                        <br />\n\n                        <RHFTextField\n                            name=\"texto\"\n                            id=\"simple-editor\"\n                            label=\"Comentario\"\n                            placeholder='Ingresa tu comentario'\n                            multiline\n                            maxRows={4}\n                            fullWidth\n                        />\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button variant=\"contained\" color='error' onClick={handleClose}>\n                            Cancelar\n                        </Button>\n\n                        <Button type=\"submit\" variant=\"contained\" onClick={handleClose}>\n                            Autorizar\n                        </Button>\n\n                    </DialogActions>\n                </FormProvider >\n\n            </Dialog>\n\n        </>\n\n    )\n}\n\nComentarios.prototype = {\n    Nombre: PropTypes.string,\n    Comentario: PropTypes.string,\n    Fecha: PropTypes.string\n};\nfunction Comentarios({ Nombre, Comentario, Fecha }) {\n    return (\n        <Grid sx={{ \"font-size\": \"11px\" }}>\n            <Grid container spacing={3}>\n                <Grid item xs={4} md={4}>\n                    <div>{Nombre}</div>\n                    <div>{Fecha}</div>\n                </Grid>\n                <Grid item xs={8} md={8}>\n                    {Comentario}\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\n\n\n\n\n\n\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    Card,\n    TableContainer,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles'\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport { END_POINT_BANDEJA_PERIODO_VACACIONES_ADELANTAR } from '../../config-global';\nimport Label from '../../components/label';\nimport ModalAdelanto from './ModalAdelanto';\n\n\n\nexport default function TablaAdelanto() {\n\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'Id',\n            flex: 1,\n            editable: false,\n            hide: true\n        },\n        {\n            field: 'empleadoSolicitanteNombre',\n            width: 250,\n            headerName: 'Solicitante',\n            editable: false\n        },\n        {\n            field: 'Periodo',\n            width: 200,\n            headerName: 'Período a adelantar',\n            editable: false,\n            renderCell: (params) => RenderPeriodo(params.row.periodo),\n        },\n\n        {\n            field: 'comentario',\n            width: 250,\n            headerName: 'Comentarios',\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 180,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n                <ModalAdelanto empleadoId={params.row.empleadoSolicitante} esResponsable refreshFunc={setRefreshAUX} />\n            ),\n        },\n    ];\n\n    const parametroBandeja = localStorage.getItem('EmpleadoId');\n\n\n    return (\n\n            <Card>\n                <TableContainer sx={{ marginTop: '0px', position: 'relative', overflow: 'unset', }}\n                    style={{ width: '100%' }}>\n                    <GenericDataGridCustom\n                        EndPoint={END_POINT_BANDEJA_PERIODO_VACACIONES_ADELANTAR}\n                        columns={columns}\n                        refresh={refreshAUX}\n                        genericParamAUX={parametroBandeja}\n                    />\n                </TableContainer>\n            </Card>\n\n    )\n}\n\n\nfunction RenderPeriodo(periodo) {\n\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n\n    return (\n        <div>\n            <Label\n                variant={isLight ? 'soft' : 'filled'}\n                color='success'\n                sx={{ mx: 'auto' }}\n            >\n                {periodo}\n            </Label>\n        </div>\n    );\n}\n\n","import { useState } from 'react';\n// @mui\nimport {\n    Card,\n    Button,\n    Container,\n    TableContainer,\n    Typography,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useSnackbar } from 'notistack';\n// routes\nimport { _employeeList } from '../../_mock/arrays';\n// components\nimport Iconify from '../../components/iconify';\nimport ConfirmDialog from '../../components/confirm-dialog';\n// sections\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport Label from '../../components/label';\nimport { HOST_API_LOCAL, END_POINT_BANDEJA_PERIODOS_VENCIMIENTO, END_POINT_SOLICITUDES_CERRAR_ABRIR_PERIODOS } from '../../config-global';\nimport { AxiosMandarForm } from '../../_Axios/AxiosFomr'\n\n\n\nexport default function TablaCerrados() {\n\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n\n    const parametro = localStorage.getItem('RolId') === 'RecursosHumanos' ? `#Cerrado` : `#Cerrado#Gerente#${localStorage.getItem('EmpleadoId')}`\n    const columns = localStorage.getItem('RolId') === 'RecursosHumanos' ?\n    [\n\n        {\n            field: 'nombreCompleto',\n            headerName: 'Colaborador',\n            width: 320,\n            editable: false,\n        },\n\n        {\n            field: 'diasHabiles',\n            headerName: 'Días vencidos',\n            width: 120,\n            align: 'center',\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"subtitle2\" noWrap>\n                    {params.row.vacacionesDisponibles}\n                </Typography>\n            ),\n        },\n        {\n            field: 'periodo',\n            headerName: 'Período vencido',\n            width: 150,\n            editable: false,\n            renderCell: (params) => RenderPeriodo(params.row.periodo),\n        },\n        {\n            field: 'fechaVencimiento',\n            headerName: 'Fecha de vencimiento',\n            width: 180,\n            editable: false,\n            renderCell: (params) => RenderFecha(params.row.fechaFinString),\n        },\n        \n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 125,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => RenderAccion(params.row.id, setRefreshAUX),\n        },\n    ]:\n    [\n\n        {\n            field: 'nombreCompleto',\n            headerName: 'Colaborador',\n            width: 320,\n            editable: false,\n        },\n\n        {\n            field: 'diasHabiles',\n            headerName: 'Días vencidos',\n            width: 120,\n            align: 'center',\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"subtitle2\" noWrap>\n                    {params.row.vacacionesDisponibles}\n                </Typography>\n            ),\n        },\n        {\n            field: 'periodo',\n            headerName: 'Período vencido',\n            width: 150,\n            editable: false,\n            renderCell: (params) => RenderPeriodo(params.row.periodo),\n        },\n        {\n            field: 'fechaVencimiento',\n            headerName: 'Fecha de vencimiento',\n            width: 180,\n            editable: false,\n            renderCell: (params) => RenderFecha(params.row.fechaFinString),\n        },\n    ]\n\n\n    return (\n        <Container>\n            <Card>\n                <TableContainer sx={{ marginTop: '0px', position: 'relative', overflow: 'unset', }}\n                    style={{ width: '100%' }}>\n                    <GenericDataGridCustom EndPoint={END_POINT_BANDEJA_PERIODOS_VENCIMIENTO}\n                        columns={columns}\n                        genericParamAUX={parametro}\n                        refresh={refreshAUX}\n                    />\n                </TableContainer>\n            </Card>\n        </Container>\n    );\n}\n\n\n\nfunction RenderPeriodo(periodo) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n\n    return (\n        <div>\n            <Label\n                variant={isLight ? 'soft' : 'filled'}\n                color='success'\n                sx={{ mx: 'auto' }}\n            >\n                {periodo}\n            </Label>\n        </div>\n    );\n}\n\n\nfunction RenderFecha(fechaVencimiento) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n\n    return (\n        <div>\n            <Label\n                variant={isLight ? 'soft' : 'filled'}\n                color='error'\n                sx={{ mx: 'auto' }}\n            >\n                {fechaVencimiento}\n            </Label>\n        </div>\n    );\n}\n\n// Aquí comienza el botón para re abririr el periódo de vacaciones\nfunction RenderAccion(IdPeriodo, refreshFunc) {\n    const [openConfirm, setOpenConfirm] = useState(false);\n    const [tableData, setTableData] = useState(_employeeList);\n\n    const [IdAUX, setIdAUX] = useState('');\n\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true);\n    };\n    const handleCloseConfirm = () => {\n        setOpenConfirm(false);\n    };\n    const handleDeleteRow = (id) => {\n        const deleteRow = tableData.filter((row) => row.id !== id);\n        setTableData(deleteRow);\n        setOpenConfirm(false);\n    };\n    const JustAfterClicDelete = () => {\n        handleDeleteRow(IdAUX);\n        onDelete(IdAUX);\n    }\n    const { enqueueSnackbar } = useSnackbar();\n\n    const onDelete = async (data) => {\n        try {\n            \n            const form = new FormData();\n            form.append(\"Id\", IdPeriodo)\n            form.append(\"statusPeriodo\", \"#Disponible\")\n            refreshFunc(\"\")\n            AxiosMandarForm(form, END_POINT_SOLICITUDES_CERRAR_ABRIR_PERIODOS, refreshFunc, enqueueSnackbar)\n\n            enqueueSnackbar('Listo, se abrió el período');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <div>\n            {/* Dibujo del botón para reabrir el periódo */}\n            <Button\n                onClick={() => {\n                    handleOpenConfirm();\n                }}\n                sx={{ color: 'primary', p: 1 }}\n            >\n                <Iconify icon=\"tabler:arrow-back-up-double\" />\n                Reabrir periódo\n            </Button>\n\n            {/* Aquí comienza el dialog para confirmar si desea reabrir el periódo */}\n            <ConfirmDialog\n                open={openConfirm}\n                onClose={handleCloseConfirm}\n                title=\"Reabrir\"\n                content=\"¿Deseas reabrir el período de vacaciones?\"\n                action={\n                    <Button variant=\"contained\" color=\"primary\" onClick={JustAfterClicDelete}>\n                        Reabrir\n                    </Button>\n                }\n            />\n        </div>\n    );\n}\n\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    Card,\n    TableContainer,\n    Typography,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles'\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport { END_POINT_BANDEJAEMPLEADOS, HOST_API_LOCAL } from '../../config-global';\nimport Label from '../../components/label';\nimport ModalEspeciales from './ModalEspeciales';\n\n\n\nexport default function TablaEspeciales() {\n\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n\n    const columns = [\n        {\n            field: 'nombreCompleto',\n            headerName: 'Colaborador',\n            width: 300,\n            editable: false,\n        },\n        {\n            field: 'nombreEmpresa',\n            headerName: 'Empresa',\n            width:150,\n            editable: false,\n        },\n        {\n            field: 'areaDepartamento',\n            headerName: 'Area y Departamento',\n            width: 200,\n            editable: false,\n            disableExtendRowFullWidth:true,\n\n            renderCell: (params) => RenderEmpresaAreaDepto(params.row.nombreEmpresa, params.row.nombreArea, '', params.row),\n        },\n        {\n            field: 'puesto',\n            headerName: 'Puesto',\n            width: 180,\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"body2\" noWrap>\n                    {params.row.nombrePuesto}\n                </Typography>\n            ),\n        },\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 170,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n                <ModalEspeciales\n                    NombreEmpleado={params.row.nombreCompleto}\n                    EmpleaodoId={params.row.id}\n                    params={params}\n                    esResponsable\n                    refreshFunc={setRefreshAUX}\n                />\n            ),\n        },\n    ];\n\n    const parametroBandeja = `#${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}#Bandeja`;\n\n\n    return (\n\n            <Card>\n                <TableContainer sx={{ marginTop: '0px', position: 'relative', overflow: 'unset', }}\n                    style={{ width: '100%' }}>\n                    <GenericDataGridCustom\n                        EndPoint={END_POINT_BANDEJAEMPLEADOS}\n                        columns={columns}\n                        refresh={refreshAUX}\n                        genericParamAUX={parametroBandeja}\n                    />\n                </TableContainer>\n            </Card>\n\n    )\n}\n\n\nfunction RenderPeriodo(periodo) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n\n    return (\n        <div>\n            <Label\n                variant={isLight ? 'soft' : 'filled'}\n                color='success'\n                sx={{ mx: 'auto' }}\n            >\n                {periodo}\n            </Label>\n        </div>\n    );\n}\n\nfunction RenderEmpresaAreaDepto(empresa, area, dpto,toshow) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    let result;\n\n\n    if (dpto !== '') {\n\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='success'\n                    sx={{ mx: 'auto' }}\n                >\n                    {dpto}\n                </Label>\n            </a>\n        );\n\n\n\n       \n    } else {\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n            </a>\n        );\n    }\n\n    return (\n        <>\n            {result}\n        </>\n        )\n}\n\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n// @mui\nimport {\n    Card,\n    Button,\n    Dialog,\n    TableContainer,\n    IconButton,\n    Typography,\n    Grid,\n    AppBar,\n    Toolbar,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles'\nimport { CloseIcon } from '../../theme/overrides/CustomIcons';\nimport Iconify from '../../components/iconify';\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport { END_POINT_BANDEJA_PETICIONES_ESPECIALES, HOST_API_LOCAL } from '../../config-global';\nimport Label from '../../components/label';\nimport DialogEditarSolicitud from './EdicionSolicitud';\nimport { RendertipoPeticion } from './MetodosAUX';\n// import { DialogEditarSolicitud } from './EdicionSolicitud';\n// import Label from '../../../components/label';\n\n\n\n\n\n\nexport default function HistorialPeticionesEspeciales() {\n\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n\n    const columns = [\n\n        {\n            field: 'tipoPeticion',\n            width: 120,\n            headerName: 'Tipo de petición',\n            editable: false,\n            renderCell: (params) => RendertipoPeticion(params.row.tipoPeticion),\n        },\n        {\n            field: 'fechaCreacion',\n            width: 180,\n            headerName: 'Fecha de la solicitud',\n            editable: false,\n        },\n        {\n            field: 'empleadoSolicitanteNombre',\n            headerName: 'Colaborador',\n            width: 300,\n            editable: false,\n        },\n        {\n            field: 'nombreEmpresa',\n            headerName: 'Empresa',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'areaDepartamento',\n            headerName: 'Area y Departamento',\n            width: 200,\n            editable: false,\n            disableExtendRowFullWidth: true,\n\n            renderCell: (params) => RenderEmpresaAreaDepto(params.row.nombreEmpresa, params.row.nombreArea, '', params.row),\n        },\n        {\n            field: 'puesto',\n            headerName: 'Puesto',\n            width: 180,\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"body2\" noWrap>\n                    {params.row.nombrePuesto}\n                </Typography>\n            ),\n        },\n\n    ];\n\n    const parametroHistorial = \"##Historial\";\n    const parametroBandeja = `#${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}#Bandeja`;\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n\n        <>\n            <Button variant=\"contained\" onClick={handleClickOpen} sx={{ position: 'fixed', right: 0, top: '20%', borderRadius: '5px 0 0 5px', zIndex: 2 }} startIcon={<Iconify icon=\"material-symbols:list-alt-outline\" />}>\n                Historial\n            </Button>\n\n            <Dialog\n                fullScreen\n                open={open}\n                onClose={handleClose}\n            >\n                <AppBar sx={{ position: 'relative' }}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={handleClose}\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n                            Historial de peticiones especiales\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Grid sx={{ padding: 3 }}>\n                    <TableContainer sx={{ marginTop: '0px', position: 'relative', overflow: 'unset', }}\n                        style={{ width: '100%' }}>\n                        <GenericDataGridCustom\n                            EndPoint={END_POINT_BANDEJA_PETICIONES_ESPECIALES}\n                            columns={columns}\n                            refresh={refreshAUX}\n                            genericParamAUX={parametroBandeja}\n                        />\n                    </TableContainer>\n                </Grid>\n            </Dialog>\n        </>\n\n    )\n}\n\n// function RendertipoPeticion(tipo) {\n//    const theme = useTheme();\n//    const isLight = theme.palette.mode === 'light';\n//    let text = \"Falta\";\n//    let colorStatus = \"error\";\n//    if (tipo === \"1\") {\n//        colorStatus = \"primary\";\n//        text = \"Vacaciones\";\n//    }\n//    else if (tipo === \"2\") {\n//        colorStatus = \"secondary\";\n//        text = \"Personal\";\n//    }\n//    else if (tipo === \"3\") {\n//        colorStatus = \"warning\";\n//        text = \"Retardo\";\n//    }\n//    else if (tipo === \"4\") {\n//        colorStatus = \"warning\";\n//        text = \"D�a especial\";\n//    }\n\n//    return (\n//        <div>\n//            <Label\n//                variant={isLight ? 'soft' : 'filled'}\n//                color={colorStatus}\n//                sx={{ mx: 'auto' }}\n//            >\n//                {text}\n//            </Label>\n//        </div>\n//    );\n// }\n\nfunction RenderEmpresaAreaDepto(empresa, area, dpto, toshow) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    let result;\n\n\n    if (dpto !== '') {\n\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='success'\n                    sx={{ mx: 'auto' }}\n                >\n                    {dpto}\n                </Label>\n            </a>\n        );\n\n\n\n\n    } else {\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n            </a>\n        );\n    }\n\n    return (\n        <>\n            {result}\n        </>\n    )\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    Card,\n    TableContainer,\n    Typography,\n    Button\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles'\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport { END_POINT_BANDEJA_PETICIONES_ESPECIALES } from '../../config-global';\nimport Label from '../../components/label';\nimport Iconify from '../../components/iconify';\nimport ModalPeticionesEspeciales from './ModalPeticionesEspeciales';\nimport HistorialPeticionesEspeciales from './HistorialPeticionesEspeciales';\nimport { RenderStatus } from './MetodosAUX';\n\n\n\nexport default function TablaPeticionesEspeciales() {\n\n    // constantes del modal\n    // Esto quiere decir que por un laod tengo la variable, y por otro laod tengo el método o la función para actualizar la constante y días petición\n    // el set es el método y le cambia el valo r a días petición\n    const [nombreEmpleado, setNombreEmpleado] = useState(\"\");\n    const [idSolicitud, setIdSolicitud] = useState(\"\");\n    const [idTipoPeticionEspecial, SetIdTipoPeticionEspecial] = useState(\"\");\n    const [diasPeticion, setDiasPeticion] = useState(\"\");\n    // const [comentario, setComentArray] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    // const [comentarios, setComentarios] = useState( [[\"nombre\", \"comentario\", \"fecha\"]])\n    const [comentario, setComentario] = useState( \"mis mil comentarios\")\n\n\n    console.log('aquí hay un comentario', comentario)\n\n    // coloco las variables que son las que están entre parentesis\n    const handleClickOpen = (SolicitudId, empeladoNombre, tipoPeticionEspecial, diastotales) => {\n\n        // estos colocan o datos\n        SetIdTipoPeticionEspecial(tipoPeticionEspecial)\n        setNombreEmpleado(empeladoNombre);\n        setIdSolicitud(SolicitudId);\n        setDiasPeticion(diastotales)\n        // console.log('se coloco dias Peticion',diasPeticion)\n        setOpen(true);\n    };\n\n    // Constantes de la bandeja\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n    const columns = [\n        {\n            field: 'estatus',\n            headerName: 'Estatus',\n            width: 120,\n            editable: false,\n            renderCell: (params) => RenderStatus(params.row.estatus),\n        },\n        {\n            field: 'fechaCreacion',\n            headerName: 'Fecha',\n            width: 120,\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            width: 150,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n\n                <Button color='secondary' onClick={(e) =>\n                    handleClickOpen(\n                        params.row.id,\n                        params.row.empleadoSolicitanteNombre,\n                        params.row.tipoPeticionEspecial,\n                        params.row.diasTotales\n                    )\n                }>\n                    <Iconify icon=\"ic:outline-remove-red-eye\" />Ver solicitud\n                </Button>\n\n            ),\n        },\n        {\n            field: 'empleadoSolicitanteNombre',\n            headerName: 'Colaborador',\n            width: 300,\n            editable: false,\n        },\n        {\n            field: 'nombreEmpresa',\n            headerName: 'Empresa',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'nombreArea',\n            headerName: 'Area y Departamento',\n            width: 200,\n            editable: false,\n            disableExtendRowFullWidth: true,\n\n            renderCell: (params) => RenderEmpresaAreaDepto(params.row.nombreEmpresa, params.row.nombreArea, '', params.row),\n        },\n        {\n            field: 'nombrePuesto',\n            headerName: 'Puesto',\n            width: 180,\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"body2\" noWrap>\n                    {params.row.nombrePuesto}\n                </Typography>\n            ),\n        },\n\n    ];\n    const parametroBandeja = `#Especiales`;\n\n\n    return (\n        <>\n            <HistorialPeticionesEspeciales />\n            <Card>\n                <TableContainer sx={{ marginTop: '0px', position: 'relative', overflow: 'unset', }}\n                    style={{ width: '100%' }}>\n                    <GenericDataGridCustom\n                        EndPoint={END_POINT_BANDEJA_PETICIONES_ESPECIALES}\n                        columns={columns}\n                        refresh={refreshAUX}\n                        genericParamAUX={parametroBandeja}\n                    />\n                </TableContainer>\n            </Card>\n\n            <ModalPeticionesEspeciales\n                NombreEmpleado={nombreEmpleado}\n                SolicitudId={idSolicitud}\n                refreshFunc={setRefreshAUX}\n                abrirModal={open}\n                metodoCerrar={handleClose}\n                tipoPeticionEspecial={idTipoPeticionEspecial}\n                diasTotales={diasPeticion}\n            />\n\n\n        </>\n\n    )\n}\n\n\n\nfunction RenderEmpresaAreaDepto(empresa, area, dpto, toshow) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    let result;\n\n\n    if (dpto !== '') {\n\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='success'\n                    sx={{ mx: 'auto' }}\n                >\n                    {dpto}\n                </Label>\n            </a>\n        );\n\n    } else {\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n            </a>\n        );\n    }\n\n    return (\n        <>\n            {result}\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n","import { Helmet } from 'react-helmet-async';\nimport { useState } from 'react';\nimport {\n    Container,\n    Typography,\n    Tabs,\n    Tab,\n    Box,\n} from '@mui/material';\nimport { PATH_DASHBOARD } from '../../routes/paths';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport TablaAdelanto from './TablaAdelanto';\nimport TablaCerrados from './TablaCerrados';\nimport TablaProximos from './TablaProximos';\nimport TablaEspeciales from './TablaEspeciales';\nimport TablaPeticionesEspeciales from './TablaPeticionesEspeciales';\n\n\n\nexport default function Periodos() {\n\n    const TABS = localStorage.getItem('RolId') === 'RecursosHumanos' ?\n        [\n            { value: 'Proximo', label: 'Próximos a vencer', component: <TablaProximos /> },\n            { value: 'Cerrados', label: 'Cerrados', component: <TablaCerrados /> },\n            { value: 'Especiales', label: 'Días especiales', component: <TablaEspeciales /> },\n            { value: 'PeticionesEspeciales', label: 'Peticiones especiales', component: <TablaPeticionesEspeciales /> }\n        ] :\n        [\n            { value: 'Cerrados', label: 'Cerrados', component: <TablaCerrados /> },\n            { value: 'Adelanto', label: 'Adelanto', component: <TablaAdelanto /> }\n        ]\n\n    // const TABS = [\n    //    { value: 'Proximo', label: 'Próximos a vencer', component: <TablaProximos /> },\n    //    { value: 'Cerrados', label: 'Cerrados', component: <TablaCerrados /> },\n    //    { value: 'Especiales', label: 'Días especiales', component: <TablaEspeciales /> },\n    //    { value: 'Adelanto', label: 'Adelanto', component: <TablaAdelanto/> },\n    // ];\n    const [currentTab, setCurrentTab] = useState(localStorage.getItem('RolId') === 'RecursosHumanos' ? 'Proximo' :'Cerrados');\n\n    return (\n        <>\n            <Helmet>\n                <title> Periodos </title>\n            </Helmet>\n\n            <Container>\n\n                <CustomBreadcrumbs\n                    heading={\n                        <>Periodos</>\n                    }\n                    links={[\n                        {\n                            name: 'Dashboard',\n                            href: PATH_DASHBOARD.root,\n                        },\n                        {\n                            name: 'Periodos',\n                            // href: PATH_DASHBOARD.vacaciones\n                        },\n                    ]}\n                />\n\n            </Container>\n\n\n            <Container >\n                <Tabs value={currentTab} onChange={(event, newValue) => setCurrentTab(newValue)}>\n                    {TABS.map((tab) => (\n                        <Tab key={tab.value} value={tab.value} label={tab.label} />\n                    ))}\n                </Tabs>\n\n                {TABS.map(\n                    (tab) =>\n                        tab.value === currentTab && (\n                            <Box key={tab.value} sx={{ mt: 5 }}>\n                                {tab.component}\n                            </Box>\n                        )\n                )}\n            </Container>\n\n        </>\n    );\n}\n\n\n"],"names":["ModalAdelanto","empleadoId","useState","open","setOpen","handleClose","methods","useForm","handleSubmit","onSubmit","data","form","FormData","append","texto","AxiosMandarForm","END_POINT_AGREGAR_PERIODO_VACACIONES","error","console","comentarios","setComentarios","React","AxiosCombo","END_POINT_OBTENER_HISTORIAL_VACACIONES_EMPLEADO","Button","color","onClick","e","icon","Dialog","onClose","maxWidth","fullWidth","DialogTitle","variant","DialogContent","Grid","container","spacing","item","xs","md","GenericCombo","endPointURL","END_POINT_OBTENER_PERIODO_VACACIONES_ADELANTAR","nameAUX","label","placeholder","valorFiltro","Accordion","sx","border","background","borderRadius","AccordionSummary","expandIcon","AccordionDetails","map","Comentarios","Nombre","Comentario","Fecha","name","id","multiline","maxRows","DialogActions","type","TablaAdelanto","refreshAUX","setRefreshAUX","columns","field","headerName","flex","editable","hide","width","renderCell","params","periodo","isLight","useTheme","palette","mode","mx","RenderPeriodo","row","align","sortable","filterable","disableColumnMenu","empleadoSolicitante","esResponsable","refreshFunc","parametroBandeja","localStorage","getItem","Card","TableContainer","marginTop","position","overflow","style","EndPoint","END_POINT_BANDEJA_PERIODO_VACACIONES_ADELANTAR","refresh","genericParamAUX","prototype","PropTypes","TablaCerrados","parametro","Typography","noWrap","vacacionesDisponibles","RenderFecha","fechaFinString","IdPeriodo","openConfirm","setOpenConfirm","_employeeList","tableData","setTableData","IdAUX","handleOpenConfirm","handleCloseConfirm","handleDeleteRow","deleteRow","filter","JustAfterClicDelete","onDelete","enqueueSnackbar","useSnackbar","END_POINT_SOLICITUDES_CERRAR_ABRIR_PERIODOS","p","title","content","action","RenderAccion","Container","END_POINT_BANDEJA_PERIODOS_VENCIMIENTO","fechaVencimiento","TablaEspeciales","disableExtendRowFullWidth","empresa","area","dpto","toshow","result","RenderEmpresaAreaDepto","nombreEmpresa","nombreArea","nombrePuesto","ModalEspeciales","NombreEmpleado","nombreCompleto","EmpleaodoId","Date","getFullYear","getMonth","getDate","END_POINT_BANDEJAEMPLEADOS","HistorialPeticionesEspeciales","RendertipoPeticion","tipoPeticion","right","top","zIndex","startIcon","fullScreen","AppBar","Toolbar","IconButton","edge","ml","component","padding","END_POINT_BANDEJA_PETICIONES_ESPECIALES","TablaPeticionesEspeciales","nombreEmpleado","setNombreEmpleado","idSolicitud","setIdSolicitud","idTipoPeticionEspecial","SetIdTipoPeticionEspecial","diasPeticion","setDiasPeticion","comentario","log","RenderStatus","estatus","SolicitudId","empeladoNombre","empleadoSolicitanteNombre","tipoPeticionEspecial","diastotales","diasTotales","ModalPeticionesEspeciales","abrirModal","metodoCerrar","Periodos","TABS","value","TablaProximos","currentTab","setCurrentTab","heading","links","href","PATH_DASHBOARD","Tabs","onChange","event","newValue","tab","Tab","Box","mt"],"sourceRoot":""}