{"version":3,"file":"static/js/8634.a45f8ace.chunk.js","mappings":"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ZC,MACE,6JACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,eACNC,WAAY,YACZC,MACE,uGACFC,MAAO,eACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,cACNC,WAAY,YACZC,MACE,6HACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,YACZC,MACE,qXACFC,MAAO,aACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,SACNC,WAAY,YACZC,MACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,WACNC,WAAY,UACZC,MACE,6HACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,SACNC,WAAY,UACZC,MACE,2GACFC,MAAO,QACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,MACE,iLACFC,MAAO,UACPC,SAAU,OACVC,WAAY,SAEd,CACEL,KAAM,gBACNC,WAAY,UACZC,MACE,qJACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,WACNC,WAAY,UACZC,MACE,uIACFC,MAAO,OACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,MACE,uJACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,aACNC,WAAY,UACZC,MACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,UACZC,MACE,uHACFC,MAAO,iBACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,UACZC,MACE,2GACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,SACNC,WAAY,UACZC,MACE,2FACFC,MAAO,WACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,UACNC,WAAY,UACZC,MACE,iIACFC,MAAO,QACPC,SAAU,QACVC,WAAY,U,WC/KHC,EAAY,CACvB,CACEC,UAAW,CAAC,iBACZC,OAAQ,CAAC,MAAO,aAChBC,KAAM,QACNC,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","sources":["components/map/styles.js","components/map/MapPopup.js","components/map/MapMarker.js","components/map/MapControl.js","_mock/map/cities.js","_mock/map/countries.js","sections/_examples/extra/map/heatmap/ControlPanel.js","sections/_examples/extra/map/heatmap/map-style.js","sections/_examples/extra/map/heatmap/index.js","sections/_examples/extra/map/clusters/layers.js","sections/_examples/extra/map/clusters/index.js","sections/_examples/extra/map/interaction/ControlPanel.js","sections/_examples/extra/map/interaction/index.js","sections/_examples/extra/map/change-theme/ControlPanel.js","sections/_examples/extra/map/change-theme/index.js","sections/_examples/extra/map/MapMarkersPopups.js","sections/_examples/extra/map/draggable-markers/ControlPanel.js","sections/_examples/extra/map/draggable-markers/index.js","sections/_examples/extra/map/MapGeoJSONAnimation.js","sections/_examples/extra/map/viewport-animation/ControlPanel.js","sections/_examples/extra/map/viewport-animation/index.js","sections/_examples/extra/map/MapHighlightByFilter.js","sections/_examples/extra/map/side-by-side/ControlPanel.js","sections/_examples/extra/map/side-by-side/index.js","pages/components/extra/DemoMapPage.js","utils/formatTime.js"],"sourcesContent":["import { Popup } from 'react-map-gl';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { GlobalStyles } from '@mui/material';\n// utils\nimport { bgBlur } from '../../utils/cssStyles';\n\n// ----------------------------------------------------------------------\n\nexport function StyledMapControls() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.mapboxgl-ctrl.mapboxgl-ctrl-group': {\n          borderRadius: '8px',\n          boxShadow: theme.customShadows.z8,\n        },\n        '.mapboxgl-ctrl-zoom-in': {\n          borderRadius: '8px 8px 0 0',\n        },\n        '.mapboxgl-ctrl-compass': {\n          borderRadius: '0 0 8px 8px',\n        },\n        '.mapboxgl-ctrl-fullscreen': {\n          '.mapboxgl-ctrl-icon': {\n            transform: ' scale(0.75)',\n          },\n        },\n        '.mapboxgl-ctrl-group button+button': {\n          borderTop: `1px solid ${theme.palette.divider}`,\n        },\n        '.mapboxgl-ctrl.mapboxgl-ctrl-scale': {\n          border: 'none',\n          lineHeight: '14px',\n          borderRadius: '4px',\n          color: theme.palette.common.white,\n          fontWeight: theme.typography.fontWeightBold,\n          backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n\n// ----------------------------------------------------------------------\n\nexport const StyledPopup = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800],\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800],\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport const StyledControlPanel = styled('div')(({ theme }) => ({\n  ...bgBlur({ color: theme.palette.grey[900] }),\n  zIndex: 9,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n}));\n","import PropTypes from 'prop-types';\n//\nimport { StyledPopup } from './styles';\n\n// ----------------------------------------------------------------------\n\nMapPopup.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default function MapPopup({ sx, children, ...other }) {\n  return (\n    <StyledPopup anchor=\"bottom\" sx={sx} {...other}>\n      {children}\n    </StyledPopup>\n  );\n}\n","import { Marker } from 'react-map-gl';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst SIZE = 20;\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n// ----------------------------------------------------------------------\n\nexport default function MapMarker({ ...other }) {\n  return (\n    <Marker {...other}>\n      <Box\n        component=\"svg\"\n        viewBox=\"0 0 24 24\"\n        sx={{\n          height: SIZE,\n          stroke: 'none',\n          cursor: 'pointer',\n          fill: (theme) => theme.palette.error.main,\n          transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\n        }}\n      >\n        <path d={ICON} />\n      </Box>\n    </Marker>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { NavigationControl, FullscreenControl, ScaleControl, GeolocateControl } from 'react-map-gl';\n//\nimport { StyledMapControls } from './styles';\n\n// ----------------------------------------------------------------------\n\nMapControl.propTypes = {\n  hideScaleControl: PropTypes.bool,\n  hideGeolocateControl: PropTypes.bool,\n  hideFullscreenControl: PropTypes.bool,\n  hideNavigationnControl: PropTypes.bool,\n};\n\nexport default function MapControl({\n  hideScaleControl,\n  hideGeolocateControl,\n  hideFullscreenControl,\n  hideNavigationnControl,\n}) {\n  return (\n    <>\n      <StyledMapControls />\n\n      {!hideGeolocateControl && (\n        <GeolocateControl position=\"top-left\" positionOptions={{ enableHighAccuracy: true }} />\n      )}\n\n      {!hideFullscreenControl && <FullscreenControl position=\"top-left\" />}\n\n      {!hideScaleControl && <ScaleControl position=\"bottom-left\" />}\n\n      {!hideNavigationnControl && <NavigationControl position=\"bottom-left\" />}\n    </>\n  );\n}\n","export const cities = [\n  {\n    city: 'New York',\n    population: '8,175,133',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg',\n    state: 'New York',\n    latitude: 40.6643,\n    longitude: -73.9385,\n  },\n  {\n    city: 'Los Angeles',\n    population: '3,792,621',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg',\n    state: 'California',\n    latitude: 34.0194,\n    longitude: -118.4108,\n  },\n  {\n    city: 'Chicago',\n    population: '2,695,598',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/8/85/2008-06-10_3000x1000_chicago_skyline.jpg/240px-2008-06-10_3000x1000_chicago_skyline.jpg',\n    state: 'Illinois',\n    latitude: 41.8376,\n    longitude: -87.6818,\n  },\n  {\n    city: 'Houston',\n    population: '2,100,263',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg/240px-Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg',\n    state: 'Texas',\n    latitude: 29.7805,\n    longitude: -95.3863,\n  },\n  {\n    city: 'Phoenix',\n    population: '1,445,632',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Downtown_Phoenix_Aerial_Looking_Northeast.jpg/207px-Downtown_Phoenix_Aerial_Looking_Northeast.jpg',\n    state: 'Arizona',\n    latitude: 33.5722,\n    longitude: -112.088,\n  },\n  {\n    city: 'Philadelphia',\n    population: '1,526,006',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg',\n    state: 'Pennsylvania',\n    latitude: 40.0094,\n    longitude: -75.1333,\n  },\n  {\n    city: 'San Antonio',\n    population: '1,327,407',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Downtown_San_Antonio_View.JPG/240px-Downtown_San_Antonio_View.JPG',\n    state: 'Texas',\n    latitude: 29.4724,\n    longitude: -98.5251,\n  },\n  {\n    city: 'San Diego',\n    population: '1,307,402',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/53/US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg/240px-US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg',\n    state: 'California',\n    latitude: 32.8153,\n    longitude: -117.135,\n  },\n  {\n    city: 'Dallas',\n    population: '1,197,816',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Dallas_skyline_daytime.jpg/240px-Dallas_skyline_daytime.jpg',\n    state: 'Texas',\n    latitude: 32.7757,\n    longitude: -96.7967,\n  },\n  {\n    city: 'San Jose',\n    population: '945,942',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Downtown_San_Jose_skyline.PNG/240px-Downtown_San_Jose_skyline.PNG',\n    state: 'California',\n    latitude: 37.2969,\n    longitude: -121.8193,\n  },\n  {\n    city: 'Austin',\n    population: '790,390',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Austin2012-12-01.JPG/240px-Austin2012-12-01.JPG',\n    state: 'Texas',\n    latitude: 30.3072,\n    longitude: -97.756,\n  },\n  {\n    city: 'Jacksonville',\n    population: '821,784',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg/240px-Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg',\n    state: 'Florida',\n    latitude: 30.337,\n    longitude: -81.6613,\n  },\n  {\n    city: 'San Francisco',\n    population: '805,235',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg',\n    state: 'California',\n    latitude: 37.7751,\n    longitude: -122.4193,\n  },\n  {\n    city: 'Columbus',\n    population: '787,033',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Columbus-ohio-skyline-panorama.jpg/240px-Columbus-ohio-skyline-panorama.jpg',\n    state: 'Ohio',\n    latitude: 39.9848,\n    longitude: -82.985,\n  },\n  {\n    city: 'Indianapolis',\n    population: '820,445',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Downtown_indy_from_parking_garage_zoom.JPG/213px-Downtown_indy_from_parking_garage_zoom.JPG',\n    state: 'Indiana',\n    latitude: 39.7767,\n    longitude: -86.1459,\n  },\n  {\n    city: 'Fort Worth',\n    population: '741,206',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/d/db/FortWorthTexasSkylineW.jpg/240px-FortWorthTexasSkylineW.jpg',\n    state: 'Texas',\n    latitude: 32.7795,\n    longitude: -97.3463,\n  },\n  {\n    city: 'Charlotte',\n    population: '731,424',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Charlotte_skyline45647.jpg/222px-Charlotte_skyline45647.jpg',\n    state: 'North Carolina',\n    latitude: 35.2087,\n    longitude: -80.8307,\n  },\n  {\n    city: 'Seattle',\n    population: '608,660',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg',\n    state: 'Washington',\n    latitude: 47.6205,\n    longitude: -122.3509,\n  },\n  {\n    city: 'Denver',\n    population: '600,158',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/DenverCP.JPG/240px-DenverCP.JPG',\n    state: 'Colorado',\n    latitude: 39.7618,\n    longitude: -104.8806,\n  },\n  {\n    city: 'El Paso',\n    population: '649,121',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Downtown_El_Paso_at_sunset.jpeg/240px-Downtown_El_Paso_at_sunset.jpeg',\n    state: 'Texas',\n    latitude: 31.8484,\n    longitude: -106.427,\n  },\n];\n","import _mock from '../_mock';\n\n// ----------------------------------------------------------------------\n\nexport const countries = [\n  {\n    timezones: ['America/Aruba'],\n    latlng: [12.5, -69.96666666],\n    name: 'Aruba',\n    country_code: 'AW',\n    capital: 'Oranjestad',\n    photo: _mock.image.cover(1),\n  },\n  {\n    timezones: ['Asia/Kabul'],\n    latlng: [33, 65],\n    name: 'Afghanistan',\n    country_code: 'AF',\n    capital: 'Kabul',\n    photo: _mock.image.cover(2),\n  },\n  {\n    timezones: ['Africa/Luanda'],\n    latlng: [-12.5, 18.5],\n    name: 'Angola',\n    country_code: 'AO',\n    capital: 'Luanda',\n    photo: _mock.image.cover(3),\n  },\n  {\n    timezones: ['Pacific/Efate'],\n    latlng: [-16, 167],\n    name: 'Vanuatu',\n    country_code: 'VU',\n    capital: 'Port Vila',\n    photo: _mock.image.cover(4),\n  },\n  {\n    timezones: ['Pacific/Wallis'],\n    latlng: [-13.3, -176.2],\n    name: 'Wallis and Futuna',\n    country_code: 'WF',\n    capital: 'Mata-Utu',\n    photo: _mock.image.cover(5),\n  },\n  {\n    timezones: ['Pacific/Apia'],\n    latlng: [-13.58333333, -172.33333333],\n    name: 'Samoa',\n    country_code: 'WS',\n    capital: 'Apia',\n    photo: _mock.image.cover(6),\n  },\n  {\n    timezones: ['Asia/Aden'],\n    latlng: [15, 48],\n    name: 'Yemen',\n    country_code: 'YE',\n    capital: \"Sana'a\",\n    photo: _mock.image.cover(7),\n  },\n  {\n    timezones: ['Africa/Johannesburg'],\n    latlng: [-29, 24],\n    name: 'South Africa',\n    country_code: 'ZA',\n    capital: 'Pretoria',\n    photo: _mock.image.cover(8),\n  },\n  {\n    timezones: ['Africa/Lusaka'],\n    latlng: [-15, 30],\n    name: 'Zambia',\n    country_code: 'ZM',\n    capital: 'Lusaka',\n    photo: _mock.image.cover(9),\n  },\n  {\n    timezones: ['Africa/Harare'],\n    latlng: [-20, 30],\n    name: 'Zimbabwe',\n    country_code: 'ZW',\n    capital: 'Harare',\n    photo: _mock.image.cover(10),\n  },\n];\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { Box, Slider, Switch, Typography } from '@mui/material';\n// utils\nimport { fDate } from '../../../../../utils/formatTime';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  allDays: PropTypes.bool,\n  endTime: PropTypes.number,\n  startTime: PropTypes.number,\n  onChangeTime: PropTypes.func,\n  selectedTime: PropTypes.number,\n  onChangeAllDays: PropTypes.func,\n};\n\nfunction ControlPanel({\n  startTime,\n  endTime,\n  allDays,\n  selectedTime,\n  onChangeTime,\n  onChangeAllDays,\n}) {\n  const day = 24 * 60 * 60 * 1000;\n\n  const days = Math.round((endTime - startTime) / day);\n\n  const selectedDay = Math.round((selectedTime - startTime) / day);\n\n  const handleChangeDays = (value) => {\n    const daysToAdd = value;\n\n    const newTime = startTime + daysToAdd * day;\n\n    onChangeTime(newTime);\n  };\n\n  return (\n    <StyledControlPanel>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n          All Days\n        </Typography>\n\n        <Switch\n          size=\"small\"\n          checked={allDays}\n          onChange={(event) => onChangeAllDays(event.target.checked)}\n        />\n      </Box>\n\n      <br />\n\n      <Typography\n        gutterBottom\n        variant=\"body2\"\n        sx={{ color: allDays ? 'text.disabled' : 'common.white' }}\n      >\n        Each Day: {fDate(selectedTime)}\n      </Typography>\n\n      <Slider\n        min={1}\n        step={1}\n        max={days}\n        disabled={allDays}\n        value={selectedDay}\n        onChange={(event, value) => {\n          if (typeof value === 'number') handleChangeDays(value);\n        }}\n      />\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","// ----------------------------------------------------------------------\n\nconst MAX_ZOOM_LEVEL = 9;\n\nexport const heatmapLayer = {\n  id: 'heatmap',\n  maxzoom: MAX_ZOOM_LEVEL,\n  type: 'heatmap',\n  paint: {\n    // Increase the heatmap weight based on frequency and property magnitude\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n    // Increase the heatmap color weight weight by zoom level\n    // heatmap-intensity is a multiplier on top of heatmap-weight\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\n    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n    // Begin color ramp at 0-stop with a 0-transparancy color\n    // to create a blur-like effect.\n    'heatmap-color': [\n      'interpolate',\n      ['linear'],\n      ['heatmap-density'],\n      0,\n      'rgba(33,102,172,0)',\n      0.2,\n      'rgb(103,169,207)',\n      0.4,\n      'rgb(209,229,240)',\n      0.6,\n      'rgb(253,219,199)',\n      0.8,\n      'rgb(239,138,98)',\n      0.9,\n      'rgb(255,201,101)',\n    ],\n    // Adjust the heatmap radius by zoom level\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, MAX_ZOOM_LEVEL, 20],\n    // Transition from heatmap to circle layer by zoom level\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0],\n  },\n};\n","import { useState, useEffect, useMemo, memo } from 'react';\nimport Map, { Source, Layer } from 'react-map-gl';\n//\nimport ControlPanel from './ControlPanel';\nimport { heatmapLayer } from './map-style';\n\n// ----------------------------------------------------------------------\n\nfunction MapHeatmap({ ...other }) {\n  const [allDays, useAllDays] = useState(true);\n\n  const [timeRange, setTimeRange] = useState([0, 0]);\n\n  const [selectedTime, selectTime] = useState(0);\n\n  const [earthquakes, setEarthQuakes] = useState();\n\n  useEffect(() => {\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\n      .then((resp) => resp.json())\n      .then((json) => {\n        const { features } = json;\n\n        const endTime = features[0].properties.time;\n\n        const startTime = features[features.length - 1].properties.time;\n\n        setTimeRange([startTime, endTime]);\n\n        setEarthQuakes(json);\n\n        selectTime(endTime);\n      })\n      .catch((err) => console.error('Could not load data', err));\n  }, []);\n\n  const data = useMemo(\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\n    [earthquakes, allDays, selectedTime]\n  );\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 40,\n          longitude: -100,\n          zoom: 3,\n        }}\n        {...other}\n      >\n        {data && (\n          <Source type=\"geojson\" data={data}>\n            <Layer {...heatmapLayer} />\n          </Source>\n        )}\n      </Map>\n\n      <ControlPanel\n        startTime={timeRange[0]}\n        endTime={timeRange[1]}\n        selectedTime={selectedTime}\n        allDays={allDays}\n        onChangeTime={selectTime}\n        onChangeAllDays={useAllDays}\n      />\n    </>\n  );\n}\n\nexport default memo(MapHeatmap);\n\n// ----------------------------------------------------------------------\n\nfunction filterFeaturesByDay(featureCollection, time) {\n  const date = new Date(time);\n\n  const year = date.getFullYear();\n\n  const month = date.getMonth();\n\n  const day = date.getDate();\n\n  const features = featureCollection?.features.filter((feature) => {\n    const featureDate = new Date(feature.properties?.time);\n\n    return (\n      featureDate.getFullYear() === year &&\n      featureDate.getMonth() === month &&\n      featureDate.getDate() === day\n    );\n  });\n  return { type: 'FeatureCollection', features };\n}\n","// ----------------------------------------------------------------------\n\nexport const clusterLayer = {\n  id: 'clusters',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  paint: {\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\n  },\n};\n\nexport const clusterCountLayer = {\n  id: 'cluster-count',\n  type: 'symbol',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  layout: {\n    'text-field': '{point_count_abbreviated}',\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n    'text-size': 12,\n  },\n};\n\nexport const unclusteredPointLayer = {\n  id: 'unclustered-point',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['!', ['has', 'point_count']],\n  paint: {\n    'circle-color': '#11b4da',\n    'circle-radius': 4,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': '#fff',\n  },\n};\n","import { useRef, memo } from 'react';\nimport Map, { Layer, Source } from 'react-map-gl';\n//\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer } from './layers';\n\n// ----------------------------------------------------------------------\n\nfunction MapClusters({ ...other }) {\n  const mapRef = useRef(null);\n\n  const onClick = (event) => {\n    const feature = event.features?.[0];\n\n    const clusterId = feature?.properties?.cluster_id;\n\n    const mapboxSource = mapRef.current?.getSource('earthquakes');\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) {\n        return;\n      }\n\n      mapRef.current?.easeTo({\n        center: feature?.geometry?.coordinates,\n        zoom: Number.isNaN(zoom) ? 3 : zoom,\n        duration: 500,\n      });\n    });\n  };\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 40.67,\n        longitude: -103.59,\n        zoom: 3,\n      }}\n      interactiveLayerIds={[clusterLayer.id || '']}\n      onClick={onClick}\n      ref={mapRef}\n      {...other}\n    >\n      <Source\n        id=\"earthquakes\"\n        type=\"geojson\"\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n        cluster\n        clusterMaxZoom={14}\n        clusterRadius={50}\n      >\n        <Layer {...clusterLayer} />\n        <Layer {...clusterCountLayer} />\n        <Layer {...unclusteredPointLayer} />\n      </Source>\n    </Map>\n  );\n}\n\nexport default memo(MapClusters);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport { Switch, InputBase, Typography } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nconst StyledRow = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  textTransform: 'capitalize',\n  justifyContent: 'space-between',\n  color: theme.palette.common.white,\n  '&:not(:last-of-type)': {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst camelPattern = /(^|[A-Z])[a-z]*/g;\n\nfunction formatSettingName(name) {\n  return name.match(camelPattern)?.join(' ');\n}\n\nControlPanel.propTypes = {\n  onChange: PropTypes.func,\n  settings: PropTypes.object,\n};\n\nfunction ControlPanel({ settings, onChange }) {\n  const renderSetting = (name, value) => {\n    switch (typeof value) {\n      case 'boolean':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <Switch\n              size=\"small\"\n              checked={value}\n              onChange={(event) => onChange(name, event.target.checked)}\n            />\n          </StyledRow>\n        );\n      case 'number':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <InputBase\n              value={value}\n              onChange={(event) => onChange(name, Number(event.target.value))}\n              inputProps={{ type: 'number' }}\n              sx={{\n                '& input': {\n                  py: 0.25,\n                  width: 40,\n                  fontSize: 14,\n                  borderRadius: 0.5,\n                  textAlign: 'center',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\n                },\n              }}\n            />\n          </StyledRow>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <StyledControlPanel>\n      {Object.keys(settings).map((name) => renderSetting(name, settings[name]))}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nfunction MapInteraction({ ...other }) {\n  const [settings, setSettings] = useState({\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85,\n    dragPan: true,\n    boxZoom: true,\n    keyboard: true,\n    touchZoom: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchPitch: true,\n    touchRotate: true,\n    doubleClickZoom: true,\n    touchZoomRotate: true,\n  });\n\n  const updateSettings = useCallback(\n    (name, value) =>\n      setSettings((prevSettings) => ({\n        ...prevSettings,\n        [name]: value,\n      })),\n    []\n  );\n\n  return (\n    <Map\n      {...settings}\n      initialViewState={{\n        latitude: 37.729,\n        longitude: -122.36,\n        zoom: 11,\n        bearing: 0,\n        pitch: 50,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel settings={settings} onChange={updateSettings} />\n    </Map>\n  );\n}\n\nexport default memo(MapInteraction);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { Radio, Typography, RadioGroup, FormControlLabel } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  themes: PropTypes.object,\n  selectTheme: PropTypes.string,\n  onChangeTheme: PropTypes.func,\n};\n\nfunction ControlPanel({ themes, selectTheme, onChangeTheme }) {\n  return (\n    <StyledControlPanel>\n      <Typography gutterBottom variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n        Select Theme:\n      </Typography>\n\n      <RadioGroup value={selectTheme} onChange={(event, value) => onChangeTheme(value)}>\n        {Object.keys(themes).map((item) => (\n          <FormControlLabel\n            key={item}\n            value={item}\n            control={<Radio size=\"small\" />}\n            label={item}\n            sx={{ color: 'common.white', textTransform: 'capitalize' }}\n          />\n        ))}\n      </RadioGroup>\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import PropTypes from 'prop-types';\nimport { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nMapChangeTheme.propTypes = {\n  themes: PropTypes.object,\n};\n\nfunction MapChangeTheme({ themes, ...other }) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n\n  const handleChangeTheme = useCallback((value) => setSelectTheme(value), []);\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 37.785164,\n          longitude: -100,\n          zoom: 3.5,\n          bearing: 0,\n          pitch: 0,\n        }}\n        mapStyle={themes?.[selectTheme]}\n        {...other}\n      >\n        <MapControl />\n      </Map>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n\nexport default memo(MapChangeTheme);\n","import PropTypes from 'prop-types';\nimport { useState, memo } from 'react';\nimport Map from 'react-map-gl';\n// @mui\nimport { Box, Typography } from '@mui/material';\n// components\nimport Image from '../../../../components/image';\nimport { MapPopup, MapMarker, MapControl } from '../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nMapMarkersPopups.propTypes = {\n  data: PropTypes.array,\n};\n\nfunction MapMarkersPopups({ data, ...other }) {\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  return (\n    <Map\n      initialViewState={{\n        zoom: 2,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      {data.map((city, index) => (\n        <MapMarker\n          key={`marker-${index}`}\n          latitude={city.latlng[0]}\n          longitude={city.latlng[1]}\n          onClick={(event) => {\n            event.originalEvent.stopPropagation();\n            setPopupInfo(city);\n          }}\n        />\n      ))}\n\n      {popupInfo && (\n        <MapPopup\n          latitude={popupInfo.latlng[0]}\n          longitude={popupInfo.latlng[1]}\n          onClose={() => setPopupInfo(null)}\n        >\n          <Box sx={{ color: 'common.white' }}>\n            <Box\n              sx={{\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <Box\n                sx={{\n                  height: '18px',\n                  minWidth: '28px',\n                  marginRight: '8px',\n                  borderRadius: '4px',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${popupInfo.country_code.toLowerCase()}.svg)`,\n                }}\n              />\n              <Typography variant=\"subtitle2\">{popupInfo.name}</Typography>\n            </Box>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Timezones: {popupInfo.timezones}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Lat: {popupInfo.latlng[0]}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Long: {popupInfo.latlng[1]}\n            </Typography>\n\n            <Image\n              alt={popupInfo.name}\n              src={popupInfo.photo}\n              ratio=\"4/3\"\n              sx={{ mt: 1, borderRadius: 1 }}\n            />\n          </Box>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapMarkersPopups);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { Typography } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nconst EVENT_NAMES = ['onDragStart', 'onDrag', 'onDragEnd'];\n\nfunction round5(value) {\n  return (Math.round(value * 1e5) / 1e5).toFixed(5);\n}\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  events: PropTypes.object,\n};\n\nfunction ControlPanel({ events = {} }) {\n  return (\n    <StyledControlPanel>\n      {EVENT_NAMES.map((event) => {\n        const lngLat = events[event];\n\n        return (\n          <div key={event}>\n            <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n              {event}:\n            </Typography>\n\n            {lngLat ? (\n              <Typography variant=\"subtitle2\" sx={{ color: 'primary.main' }}>\n                {`${round5(lngLat.lng)}, ${round5(lngLat.lat)}`}\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" component=\"em\" sx={{ color: 'error.main' }}>\n                null\n              </Typography>\n            )}\n          </div>\n        );\n      })}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapMarker, MapControl } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nfunction MapDraggableMarkers({ ...other }) {\n  const [marker, setMarker] = useState({\n    latitude: 40,\n    longitude: -100,\n  });\n\n  const [events, logEvents] = useState({});\n\n  const onMarkerDragStart = useCallback((event) => {\n    logEvents((_events) => ({ ..._events, onDragStart: event.lngLat }));\n  }, []);\n\n  const onMarkerDrag = useCallback((event) => {\n    logEvents((_events) => ({ ..._events, onDrag: event.lngLat }));\n\n    setMarker({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n    });\n  }, []);\n\n  const onMarkerDragEnd = useCallback((event) => {\n    logEvents((_events) => ({ ..._events, onDragEnd: event.lngLat }));\n  }, []);\n\n  return (\n    <>\n      <Map initialViewState={{ latitude: 40, longitude: -100, zoom: 3.5 }} {...other}>\n        <MapControl />\n\n        <MapMarker\n          longitude={marker.longitude}\n          latitude={marker.latitude}\n          anchor=\"bottom\"\n          draggable\n          onDragStart={onMarkerDragStart}\n          onDrag={onMarkerDrag}\n          onDragEnd={onMarkerDragEnd}\n        />\n      </Map>\n\n      <ControlPanel events={events} />\n    </>\n  );\n}\n\nexport default memo(MapDraggableMarkers);\n","import { useState, useEffect, memo } from 'react';\nimport Map, { Layer, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n// components\nimport { MapControl } from '../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapGeoJSONAnimation({ ...other }) {\n  const theme = useTheme();\n\n  const pointLayer = {\n    id: 'point',\n    type: 'circle',\n    paint: {\n      'circle-radius': 10,\n      'circle-color': theme.palette.error.main,\n    },\n  };\n\n  const [pointData, setPointData] = useState(null);\n\n  useEffect(() => {\n    const animation = window.requestAnimationFrame(() =>\n      setPointData(\n        pointOnCircle({\n          center: [-100, 0],\n          angle: Date.now() / 1000,\n          radius: 20,\n        })\n      )\n    );\n\n    return () => window.cancelAnimationFrame(animation);\n  });\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 0,\n        longitude: -100,\n        zoom: 3,\n      }}\n      mapStyle=\"mapbox://styles/mapbox/satellite-streets-v11\"\n      {...other}\n    >\n      <MapControl />\n\n      {pointData && (\n        <Source type=\"geojson\" data={pointData}>\n          <Layer {...pointLayer} />\n        </Source>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapGeoJSONAnimation);\n\n// ----------------------------------------------------------------------\n\nfunction pointOnCircle({ center, angle, radius }) {\n  return {\n    type: 'Point',\n    coordinates: [center[0] + Math.cos(angle) * radius, center[1] + Math.sin(angle) * radius],\n  };\n}\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { Radio, RadioGroup, FormControlLabel } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  data: PropTypes.array,\n  onSelectCity: PropTypes.func,\n  selectedCity: PropTypes.string,\n};\n\nfunction ControlPanel({ data, selectedCity, onSelectCity }) {\n  return (\n    <StyledControlPanel>\n      {data.map((city) => (\n        <RadioGroup\n          key={city.city}\n          value={selectedCity}\n          onChange={(event) => onSelectCity(event, city)}\n        >\n          <FormControlLabel\n            value={city.city}\n            label={city.city}\n            control={<Radio size=\"small\" />}\n            sx={{ color: 'common.white' }}\n          />\n        </RadioGroup>\n      ))}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import PropTypes from 'prop-types';\nimport { useRef, useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nMapViewportAnimation.propTypes = {\n  data: PropTypes.array,\n};\n\nfunction MapViewportAnimation({ data, ...other }) {\n  const mapRef = useRef(null);\n\n  const [selectedCity, setSelectedCity] = useState(data[2].city);\n\n  const onSelectCity = useCallback((event, { longitude, latitude }) => {\n    setSelectedCity(event.target.value);\n    mapRef.current?.flyTo({ center: [longitude, latitude], duration: 2000 });\n  }, []);\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 37.7751,\n        longitude: -122.4193,\n        zoom: 11,\n        bearing: 0,\n        pitch: 0,\n      }}\n      ref={mapRef}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel data={data} selectedCity={selectedCity} onSelectCity={onSelectCity} />\n    </Map>\n  );\n}\n\nexport default memo(MapViewportAnimation);\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map, { Layer, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\n// components\nimport { MapPopup, MapControl } from '../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapHighlightByFilter({ ...other }) {\n  const theme = useTheme();\n\n  const countiesLayer = {\n    id: 'counties',\n    type: 'fill',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.grey[900],\n      'fill-color': theme.palette.grey[900],\n      'fill-opacity': 0.12,\n    },\n  };\n\n  const highlightLayer = {\n    id: 'counties-highlighted',\n    type: 'fill',\n    source: 'counties',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.error.main,\n      'fill-color': theme.palette.error.main,\n      'fill-opacity': 0.48,\n    },\n  };\n\n  const [hoverInfo, setHoverInfo] = useState(null);\n\n  const onHover = useCallback((event) => {\n    const county = event.features && event.features[0];\n\n    setHoverInfo({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n      countyName: county && county.properties?.COUNTY,\n    });\n  }, []);\n\n  const selectedCounty = (hoverInfo && hoverInfo.countyName) || '';\n\n  const filter = useMemo(() => ['in', 'COUNTY', selectedCounty], [selectedCounty]);\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 38.88,\n        longitude: -98,\n        zoom: 3,\n      }}\n      minZoom={2}\n      onMouseMove={onHover}\n      interactiveLayerIds={['counties']}\n      {...other}\n    >\n      <MapControl />\n\n      <Source type=\"vector\" url=\"mapbox://mapbox.82pkq93d\">\n        <Layer beforeId=\"waterway-label\" {...countiesLayer} />\n        <Layer beforeId=\"waterway-label\" {...highlightLayer} filter={filter} />\n      </Source>\n\n      {selectedCounty && hoverInfo && (\n        <MapPopup longitude={hoverInfo.longitude} latitude={hoverInfo.latitude} closeButton={false}>\n          <Typography variant=\"body2\" sx={{ color: 'common.white' }}>\n            {selectedCounty}\n          </Typography>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapHighlightByFilter);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  mode: PropTypes.string,\n  onModeChange: PropTypes.func,\n};\n\nfunction ControlPanel({ mode, onModeChange }) {\n  return (\n    <StyledControlPanel>\n      <ToggleButtonGroup color=\"primary\" value={mode} exclusive onChange={onModeChange}>\n        <ToggleButton value=\"side-by-side\">Side by side</ToggleButton>\n\n        <ToggleButton value=\"split-screen\">Split screen</ToggleButton>\n      </ToggleButtonGroup>\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map from 'react-map-gl';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nconst LeftMapStyle = {\n  position: 'absolute',\n  width: '50%',\n  height: '100%',\n};\n\nconst RightMapStyle = {\n  position: 'absolute',\n  left: '50%',\n  width: '50%',\n  height: '100%',\n};\n\n// ----------------------------------------------------------------------\n\nfunction MapSideBySide({ ...other }) {\n  const [viewState, setViewState] = useState({\n    longitude: -122.43,\n    latitude: 37.78,\n    zoom: 12,\n    pitch: 30,\n  });\n\n  const [mode, setMode] = useState('side-by-side');\n\n  const [activeMap, setActiveMap] = useState('left');\n\n  const onLeftMoveStart = useCallback(() => setActiveMap('left'), []);\n\n  const onRightMoveStart = useCallback(() => setActiveMap('right'), []);\n\n  const onMove = useCallback((event) => setViewState(event.viewState), []);\n\n  const width = typeof window === 'undefined' ? 100 : window.innerWidth;\n\n  const leftMapPadding = useMemo(\n    () => ({ left: mode === 'split-screen' ? width / 2 : 0, top: 0, right: 0, bottom: 0 }),\n    [width, mode]\n  );\n\n  const rightMapPadding = useMemo(\n    () => ({ right: mode === 'split-screen' ? width / 2 : 0, top: 0, left: 0, bottom: 0 }),\n    [width, mode]\n  );\n\n  const handleChangeMode = (event, newMode) => {\n    if (newMode !== null) {\n      setMode(newMode);\n    }\n  };\n\n  return (\n    <>\n      <Map\n        id=\"left-map\"\n        {...viewState}\n        padding={leftMapPadding}\n        onMoveStart={onLeftMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'left') {\n            onMove(event);\n          }\n        }}\n        style={LeftMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\n        {...other}\n      />\n\n      <Map\n        id=\"right-map\"\n        {...viewState}\n        padding={rightMapPadding}\n        onMoveStart={onRightMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'right') {\n            onMove(event);\n          }\n        }}\n        style={RightMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        {...other}\n      />\n\n      <ControlPanel mode={mode} onModeChange={handleChangeMode} />\n    </>\n  );\n}\n\nexport default memo(MapSideBySide);\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Stack, Container, CardHeader, CardContent } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// config\nimport { MAP_API } from '../../../config-global';\n// _mock_\nimport { cities as CITIES } from '../../../_mock/map/cities';\nimport { countries as COUNTRIES } from '../../../_mock/map/countries';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport MapHeatmap from '../../../sections/_examples/extra/map/heatmap';\nimport MapClusters from '../../../sections/_examples/extra/map/clusters';\nimport MapInteraction from '../../../sections/_examples/extra/map/interaction';\nimport MapChangeTheme from '../../../sections/_examples/extra/map/change-theme';\nimport MapMarkersPopups from '../../../sections/_examples/extra/map/MapMarkersPopups';\nimport MapDraggableMarkers from '../../../sections/_examples/extra/map/draggable-markers';\nimport MapGeoJSONAnimation from '../../../sections/_examples/extra/map/MapGeoJSONAnimation';\nimport MapViewportAnimation from '../../../sections/_examples/extra/map/viewport-animation';\nimport MapHighlightByFilter from '../../../sections/_examples/extra/map/MapHighlightByFilter';\nimport MapSideBySide from '../../../sections/_examples/extra/map/side-by-side';\n\n// ----------------------------------------------------------------------\n\nconst THEMES = {\n  streets: 'mapbox://styles/mapbox/streets-v11',\n  outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n  light: 'mapbox://styles/mapbox/light-v10',\n  dark: 'mapbox://styles/mapbox/dark-v10',\n  satellite: 'mapbox://styles/mapbox/satellite-v9',\n  satelliteStreets: 'mapbox://styles/mapbox/satellite-streets-v11',\n};\n\nconst baseSettings = {\n  mapboxAccessToken: MAP_API,\n  minZoom: 1,\n};\n\nconst StyledMapContainer = styled('div')(({ theme }) => ({\n  zIndex: 0,\n  height: 560,\n  overflow: 'hidden',\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  '& .mapboxgl-ctrl-logo, .mapboxgl-ctrl-bottom-right': {\n    display: 'none',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function DemoMapPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra Components: Map | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Map\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Map' },\n            ]}\n            moreLink={[\n              'http://visgl.github.io/react-map-gl',\n              'http://visgl.github.io/react-map-gl/examples',\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Change Theme\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapChangeTheme {...baseSettings} themes={THEMES} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Markers & Popups\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapMarkersPopups {...baseSettings} data={COUNTRIES} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Draggable Markers\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapDraggableMarkers {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Geojson Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapGeoJSONAnimation {...baseSettings} mapStyle={THEMES.satelliteStreets} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Clusters\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapClusters {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Interaction\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapInteraction {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Viewport Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapViewportAnimation\n                  {...baseSettings}\n                  data={CITIES.filter((city) => city.state === 'Texas')}\n                  mapStyle={THEMES.light}\n                />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Highlight By Filter\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHighlightByFilter {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Heatmap\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHeatmap {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Side By Side\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapSideBySide {...baseSettings} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'yyyy MM dd';\n  // console.log (fm);\n  return date ? format(new Date(date), fm) : '';\n}\n\n\nexport function fEspDate(date, newFormat) {\n\n    const Meses = 'Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre'.split(',')\n    let result = \"\";\n\n        \n    if (date) {\n        result = `${date.getFullYear()}-${Meses[date.getMonth() + 1]}-${date.getDay()}`;\n    }\n\n    return result;\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n"],"names":["StyledMapControls","theme","useTheme","GlobalStyles","styles","borderRadius","boxShadow","customShadows","z8","transform","borderTop","palette","divider","border","lineHeight","color","common","white","fontWeight","typography","fontWeightBold","backgroundImage","StyledPopup","styled","Popup","isRTL","direction","maxWidth","padding","spacing","z20","shape","backgroundColor","grey","width","height","fontSize","opacity","right","left","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","StyledControlPanel","bgBlur","zIndex","minWidth","position","top","MapPopup","sx","children","other","anchor","MapMarker","Box","component","viewBox","stroke","cursor","fill","error","main","d","MapControl","hideScaleControl","hideGeolocateControl","hideFullscreenControl","hideNavigationnControl","positionOptions","enableHighAccuracy","cities","city","population","image","state","latitude","longitude","countries","timezones","latlng","name","country_code","capital","photo","_mock","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","display","alignItems","justifyContent","Typography","variant","Switch","size","checked","onChange","event","target","gutterBottom","fDate","Slider","min","step","max","disabled","value","handleChangeDays","memo","heatmapLayer","id","maxzoom","type","paint","MapHeatmap","useState","useAllDays","timeRange","setTimeRange","selectTime","earthquakes","setEarthQuakes","useEffect","fetch","then","resp","json","features","properties","time","length","catch","err","console","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","featureDate","filterFeaturesByDay","initialViewState","zoom","clusterLayer","source","clusterCountLayer","layout","unclusteredPointLayer","MapClusters","mapRef","useRef","interactiveLayerIds","onClick","clusterId","cluster_id","current","getSource","getClusterExpansionZoom","easeTo","center","geometry","coordinates","Number","isNaN","duration","ref","cluster","clusterMaxZoom","clusterRadius","StyledRow","textTransform","camelPattern","formatSettingName","match","join","settings","Object","keys","map","InputBase","inputProps","py","textAlign","bgcolor","alpha","renderSetting","MapInteraction","minZoom","maxZoom","minPitch","maxPitch","dragPan","boxZoom","keyboard","touchZoom","dragRotate","scrollZoom","touchPitch","touchRotate","doubleClickZoom","touchZoomRotate","setSettings","updateSettings","useCallback","prevSettings","bearing","pitch","themes","selectTheme","onChangeTheme","RadioGroup","item","FormControlLabel","control","Radio","label","MapChangeTheme","setSelectTheme","handleChangeTheme","mapStyle","MapMarkersPopups","popupInfo","setPopupInfo","index","originalEvent","stopPropagation","onClose","mb","backgroundSize","backgroundPosition","backgroundRepeat","toLowerCase","alt","src","ratio","mt","EVENT_NAMES","round5","toFixed","events","lngLat","lng","lat","MapDraggableMarkers","marker","setMarker","logEvents","onMarkerDragStart","_events","onDragStart","onMarkerDrag","onDrag","onMarkerDragEnd","onDragEnd","draggable","MapGeoJSONAnimation","pointLayer","pointData","setPointData","animation","window","requestAnimationFrame","angle","radius","cos","sin","pointOnCircle","now","cancelAnimationFrame","selectedCity","onSelectCity","MapViewportAnimation","setSelectedCity","flyTo","MapHighlightByFilter","countiesLayer","highlightLayer","hoverInfo","setHoverInfo","onHover","county","countyName","COUNTY","selectedCounty","onMouseMove","url","beforeId","closeButton","mode","onModeChange","ToggleButtonGroup","exclusive","ToggleButton","LeftMapStyle","RightMapStyle","MapSideBySide","viewState","setViewState","setMode","activeMap","setActiveMap","onLeftMoveStart","onRightMoveStart","onMove","innerWidth","leftMapPadding","bottom","rightMapPadding","onMoveStart","style","newMode","THEMES","streets","outdoors","light","dark","satellite","satelliteStreets","baseSettings","mapboxAccessToken","MAP_API","StyledMapContainer","overflow","DemoMapPage","pt","pb","Container","heading","links","href","PATH_PAGE","moreLink","my","Stack","Card","CardHeader","title","CardContent","COUNTRIES","CITIES","newFormat","fm","format","fEspDate","Meses","split","result","getDay","fDateTime","fTimestamp","getTime","fToNow","formatDistanceToNow","addSuffix"],"sourceRoot":""}