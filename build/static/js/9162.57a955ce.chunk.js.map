{"version":3,"file":"static/js/9162.57a955ce.chunk.js","mappings":"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","sources":["components/empty-content/EmptyContent.js","components/table/utils.js","components/table/useTable.js","components/table/TableNoData.js","components/table/TableSkeleton.js","components/table/TableEmptyRows.js","components/table/TableHeadCustom.js","components/table/TableSelectedAction.js","components/table/TablePaginationCustom.js","pages/dashboard/UserListPage.js","sections/@dashboard/user/list/UserTableRow.js","sections/@dashboard/user/list/UserTableToolbar.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { Typography, Stack } from '@mui/material';\n//\nimport Image from '../image';\n\n// ----------------------------------------------------------------------\n\nEmptyContent.propTypes = {\n  sx: PropTypes.object,\n  img: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default function EmptyContent({ title, description, img, sx, ...other }) {\n  return (\n    <Stack\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        height: 1,\n        textAlign: 'center',\n        p: (theme) => theme.spacing(8, 2),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Image\n        disabledEffect\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </Stack>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page, rowsPerPage, arrayLength) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useTable(props) {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked, newSelecteds) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }, []);\n\n  const onChangeDense = useCallback((event) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\nTableNoData.propTypes = {\n  isNotFound: PropTypes.bool,\n};\n\nexport default function TableNoData({ isNotFound }) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function TableSkeleton({ ...other }) {\n  return (\n    <TableRow {...other}>\n      <TableCell colSpan={12}>\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\n          <Skeleton\n            variant=\"rectangular\"\n            width={40}\n            height={40}\n            sx={{ borderRadius: 1, flexShrink: 0 }}\n          />\n          <Skeleton variant=\"text\" width=\"100%\" height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n        </Stack>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTableEmptyRows.propTypes = {\n  height: PropTypes.number,\n  emptyRows: PropTypes.number,\n};\n\nexport default function TableEmptyRows({ emptyRows, height }) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n};\n\n// ----------------------------------------------------------------------\n\nTableHeadCustom.propTypes = {\n  sx: PropTypes.object,\n  onSort: PropTypes.func,\n  orderBy: PropTypes.string,\n  headLabel: PropTypes.array,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllRows: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']),\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event) => onSelectAllRows(event.target.checked)}\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Checkbox, Typography, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTableSelectedAction.propTypes = {\n  sx: PropTypes.object,\n  dense: PropTypes.bool,\n  action: PropTypes.node,\n  rowCount: PropTypes.number,\n  numSelected: PropTypes.number,\n  onSelectAllRows: PropTypes.func,\n};\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event) => onSelectAllRows(event.target.checked)}\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} Seleccionados\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Switch, TablePagination, FormControlLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nTablePaginationCustom.propTypes = {\n  dense: PropTypes.bool,\n  onChangeDense: PropTypes.func,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  sx: PropTypes.object,\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 25],\n  sx,\n  ...other\n}) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { paramCase } from 'change-case';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n  Tab,\n  Tabs,\n  Card,\n  Table,\n  Button,\n  Tooltip,\n  Divider,\n  TableBody,\n  Container,\n  IconButton,\n  TableContainer,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// _mock_\nimport { _userList } from '../../_mock/arrays';\n// components\nimport Iconify from '../../components/iconify';\nimport Scrollbar from '../../components/scrollbar';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport { useSettingsContext } from '../../components/settings';\nimport {\n  useTable,\n  getComparator,\n  emptyRows,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from '../../components/table';\n// sections\nimport { UserTableToolbar, UserTableRow } from '../../sections/@dashboard/user/list';\n\n// ----------------------------------------------------------------------\n\nconst STATUS_OPTIONS = ['all', 'active', 'banned'];\n\nconst ROLE_OPTIONS = [\n  'all',\n  'ux designer',\n  'full stack designer',\n  'backend developer',\n  'project manager',\n  'leader',\n  'ui designer',\n  'ui/ux designer',\n  'front end developer',\n  'full stack developer',\n];\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', align: 'left' },\n  { id: 'company', label: 'Company', align: 'left' },\n  { id: 'role', label: 'Role', align: 'left' },\n  { id: 'isVerified', label: 'Verified', align: 'center' },\n  { id: 'status', label: 'Status', align: 'left' },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function UserListPage() {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable();\n\n  const { themeStretch } = useSettingsContext();\n\n  const navigate = useNavigate();\n\n  const [tableData, setTableData] = useState(_userList);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [filterName, setFilterName] = useState('');\n\n  const [filterRole, setFilterRole] = useState('all');\n\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  const dataFiltered = applyFilter({\n    inputData: tableData,\n    comparator: getComparator(order, orderBy),\n    filterName,\n    filterRole,\n    filterStatus,\n  });\n\n  const dataInPage = dataFiltered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n  const denseHeight = dense ? 52 : 72;\n\n  const isFiltered = filterName !== '' || filterRole !== 'all' || filterStatus !== 'all';\n\n  const isNotFound =\n    (!dataFiltered.length && !!filterName) ||\n    (!dataFiltered.length && !!filterRole) ||\n    (!dataFiltered.length && !!filterStatus);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleFilterStatus = (event, newValue) => {\n    setPage(0);\n    setFilterStatus(newValue);\n  };\n\n  const handleFilterName = (event) => {\n    setPage(0);\n    setFilterName(event.target.value);\n  };\n\n  const handleFilterRole = (event) => {\n    setPage(0);\n    setFilterRole(event.target.value);\n  };\n\n  const handleDeleteRow = (id) => {\n    const deleteRow = tableData.filter((row) => row.id !== id);\n    setSelected([]);\n    setTableData(deleteRow);\n\n    if (page > 0) {\n      if (dataInPage.length < 2) {\n        setPage(page - 1);\n      }\n    }\n  };\n\n  const handleDeleteRows = (selectedRows) => {\n    const deleteRows = tableData.filter((row) => !selectedRows.includes(row.id));\n    setSelected([]);\n    setTableData(deleteRows);\n\n    if (page > 0) {\n      if (selectedRows.length === dataInPage.length) {\n        setPage(page - 1);\n      } else if (selectedRows.length === dataFiltered.length) {\n        setPage(0);\n      } else if (selectedRows.length > dataInPage.length) {\n        const newPage = Math.ceil((tableData.length - selectedRows.length) / rowsPerPage) - 1;\n        setPage(newPage);\n      }\n    }\n  };\n\n  const handleEditRow = (id) => {\n    navigate(PATH_DASHBOARD.user.edit(paramCase(id)));\n  };\n\n  const handleResetFilter = () => {\n    setFilterName('');\n    setFilterRole('all');\n    setFilterStatus('all');\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> User: List | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"User List\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.root },\n            { name: 'List' },\n          ]}\n          action={\n            <Button\n              component={RouterLink}\n              to={PATH_DASHBOARD.user.new}\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\n            >\n              New User\n            </Button>\n          }\n        />\n\n        <Card>\n          <Tabs\n            value={filterStatus}\n            onChange={handleFilterStatus}\n            sx={{\n              px: 2,\n              bgcolor: 'background.neutral',\n            }}\n          >\n            {STATUS_OPTIONS.map((tab) => (\n              <Tab key={tab} label={tab} value={tab} />\n            ))}\n          </Tabs>\n\n          <Divider />\n\n          <UserTableToolbar\n            isFiltered={isFiltered}\n            filterName={filterName}\n            filterRole={filterRole}\n            optionsRole={ROLE_OPTIONS}\n            onFilterName={handleFilterName}\n            onFilterRole={handleFilterRole}\n            onResetFilter={handleResetFilter}\n          />\n\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n            <TableSelectedAction\n              dense={dense}\n              numSelected={selected.length}\n              rowCount={tableData.length}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              action={\n                <Tooltip title=\"Delete\">\n                  <IconButton color=\"primary\" onClick={handleOpenConfirm}>\n                    <Iconify icon=\"eva:trash-2-outline\" />\n                  </IconButton>\n                </Tooltip>\n              }\n            />\n\n            <Scrollbar>\n              <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\n                <TableHeadCustom\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={tableData.length}\n                  numSelected={selected.length}\n                  onSort={onSort}\n                  onSelectAllRows={(checked) =>\n                    onSelectAllRows(\n                      checked,\n                      tableData.map((row) => row.id)\n                    )\n                  }\n                />\n\n                <TableBody>\n                  {dataFiltered\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => (\n                      <UserTableRow\n                        key={row.id}\n                        row={row}\n                        selected={selected.includes(row.id)}\n                        onSelectRow={() => onSelectRow(row.id)}\n                        onDeleteRow={() => handleDeleteRow(row.id)}\n                        onEditRow={() => handleEditRow(row.name)}\n                      />\n                    ))}\n\n                  <TableEmptyRows\n                    height={denseHeight}\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n                  />\n\n                  <TableNoData isNotFound={isNotFound} />\n                </TableBody>\n              </Table>\n            </Scrollbar>\n          </TableContainer>\n\n          <TablePaginationCustom\n            count={dataFiltered.length}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            onPageChange={onChangePage}\n            onRowsPerPageChange={onChangeRowsPerPage}\n            //\n            dense={dense}\n            onChangeDense={onChangeDense}\n          />\n        </Card>\n      </Container>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {selected.length} </strong> items?\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              handleDeleteRows(selected);\n              handleCloseConfirm();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({ inputData, comparator, filterName, filterStatus, filterRole }) {\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (filterName) {\n    inputData = inputData.filter(\n      (user) => user.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    );\n  }\n\n  if (filterStatus !== 'all') {\n    inputData = inputData.filter((user) => user.status === filterStatus);\n  }\n\n  if (filterRole !== 'all') {\n    inputData = inputData.filter((user) => user.role === filterRole);\n  }\n\n  return inputData;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n} from '@mui/material';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n\n// ----------------------------------------------------------------------\n\nUserTableRow.propTypes = {\n  row: PropTypes.object,\n  selected: PropTypes.bool,\n  onEditRow: PropTypes.func,\n  onDeleteRow: PropTypes.func,\n  onSelectRow: PropTypes.func,\n};\n\nexport default function UserTableRow({ row, selected, onEditRow, onSelectRow, onDeleteRow }) {\n  const { name, avatarUrl, company, role, isVerified, status } = row;\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState(null);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <TableRow hover selected={selected}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox checked={selected} onClick={onSelectRow} />\n        </TableCell>\n\n        <TableCell>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Avatar alt={name} src={avatarUrl} />\n\n            <Typography variant=\"subtitle2\" noWrap>\n              {name}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell align=\"left\">{company}</TableCell>\n\n        <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\n          {role}\n        </TableCell>\n\n        <TableCell align=\"center\">\n          <Iconify\n            icon={isVerified ? 'eva:checkmark-circle-fill' : 'eva:clock-outline'}\n            sx={{\n              width: 20,\n              height: 20,\n              color: 'success.main',\n              ...(!isVerified && { color: 'warning.main' }),\n            }}\n          />\n        </TableCell>\n\n        <TableCell align=\"left\">\n          <Label\n            variant=\"soft\"\n            color={(status === 'banned' && 'error') || 'success'}\n            sx={{ textTransform: 'capitalize' }}\n          >\n            {status}\n          </Label>\n        </TableCell>\n\n        <TableCell align=\"right\">\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 140 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            onEditRow();\n            handleClosePopover();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n      </MenuPopover>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Stack, InputAdornment, TextField, MenuItem, Button } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nUserTableToolbar.propTypes = {\n  isFiltered: PropTypes.bool,\n  filterName: PropTypes.string,\n  filterRole: PropTypes.string,\n  onFilterName: PropTypes.func,\n  onFilterRole: PropTypes.func,\n  onResetFilter: PropTypes.func,\n  optionsRole: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default function UserTableToolbar({\n  isFiltered,\n  filterName,\n  filterRole,\n  optionsRole,\n  onFilterName,\n  onFilterRole,\n  onResetFilter,\n}) {\n  return (\n    <Stack\n      spacing={2}\n      alignItems=\"center\"\n      direction={{\n        xs: 'column',\n        sm: 'row',\n      }}\n      sx={{ px: 2.5, py: 3 }}\n    >\n      <TextField\n        fullWidth\n        select\n        label=\"Role\"\n        value={filterRole}\n        onChange={onFilterRole}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsRole.map((option) => (\n          <MenuItem\n            key={option}\n            value={option}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      {isFiltered && (\n        <Button\n          color=\"error\"\n          sx={{ flexShrink: 0 }}\n          onClick={onResetFilter}\n          startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n        >\n          Clear\n        </Button>\n      )}\n    </Stack>\n  );\n}\n\nfunction genericFilter({\n    isFiltered,\n    filterName,\n    filterRole,\n    optionsRole,\n    onFilterName,\n    onFilterRole,\n    onResetFilter,\n}) {\n    return (\n        <Stack\n            spacing={2}\n            alignItems=\"center\"\n            direction={{\n                xs: 'column',\n                sm: 'row',\n            }}\n            sx={{ px: 2.5, py: 3 }}\n        >\n            <TextField\n                fullWidth\n                select\n                label=\"Role\"\n                value={filterRole}\n                onChange={onFilterRole}\n                SelectProps={{\n                    MenuProps: {\n                        PaperProps: {\n                            sx: {\n                                maxHeight: 260,\n                            },\n                        },\n                    },\n                }}\n                sx={{\n                    maxWidth: { sm: 240 },\n                    textTransform: 'capitalize',\n                }}\n            >\n                {optionsRole.map((option) => (\n                    <MenuItem\n                        key={option}\n                        value={option}\n                        sx={{\n                            mx: 1,\n                            borderRadius: 0.75,\n                            typography: 'body2',\n                            textTransform: 'capitalize',\n                        }}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </TextField>\n\n            <TextField\n                fullWidth\n                value={filterName}\n                onChange={onFilterName}\n                placeholder=\"Search...\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n                        </InputAdornment>\n                    ),\n                }}\n            />\n\n            {isFiltered && (\n                <Button\n                    color=\"error\"\n                    sx={{ flexShrink: 0 }}\n                    onClick={onResetFilter}\n                    startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n                >\n                    Clear\n                </Button>\n            )}\n        </Stack>\n    );\n}\n\n\nexport { genericFilter }\n\n\n"],"names":["EmptyContent","title","description","img","sx","other","Stack","alignItems","justifyContent","height","textAlign","p","theme","spacing","disabledEffect","alt","src","mb","Typography","variant","gutterBottom","color","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","onChangeDense","TableNoData","isNotFound","TableRow","TableCell","colSpan","TableSkeleton","direction","Skeleton","width","borderRadius","flexShrink","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","onClick","textTransform","label","Box","TableSelectedAction","action","pl","pr","top","left","zIndex","bgcolor","ml","flexGrow","TablePaginationCustom","rowsPerPageOptions","TablePagination","component","FormControlLabel","control","Switch","py","md","STATUS_OPTIONS","ROLE_OPTIONS","TABLE_HEAD","UserListPage","themeStretch","useSettingsContext","navigate","useNavigate","_userList","tableData","setTableData","openConfirm","setOpenConfirm","filterName","setFilterName","filterRole","setFilterRole","filterStatus","setFilterStatus","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","filter","user","name","toLowerCase","status","role","applyFilter","dataInPage","denseHeight","isFiltered","handleCloseConfirm","maxWidth","heading","links","href","PATH_DASHBOARD","RouterLink","to","startIcon","icon","newValue","px","tab","optionsRole","onFilterName","onFilterRole","onResetFilter","row","size","includes","onDeleteRow","deleteRow","handleDeleteRow","onEditRow","paramCase","count","onPageChange","onRowsPerPageChange","open","onClose","content","selectedRows","deleteRows","ceil","handleDeleteRows","UserTableRow","avatarUrl","company","isVerified","openPopover","setOpenPopover","handleClosePopover","hover","Avatar","noWrap","IconButton","currentTarget","arrow","UserTableToolbar","xs","sm","fullWidth","select","SelectProps","MenuProps","PaperProps","maxHeight","option","mx","typography","placeholder","InputProps","startAdornment"],"sourceRoot":""}