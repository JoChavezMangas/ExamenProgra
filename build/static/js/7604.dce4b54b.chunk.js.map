{"version":3,"file":"static/js/7604.dce4b54b.chunk.js","mappings":"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","sources":["pages/Banco/BancoEditPage.js","sections/@dashboard/banco/BancoNewEditForm.js","../node_modules/dot-case/src/index.ts","../node_modules/lower-case/src/index.ts","../node_modules/no-case/src/index.ts","../node_modules/param-case/src/index.ts"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\nimport { paramCase } from 'change-case';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n// @mui\nimport { Button, Container, Typography } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// _mock_\nimport { _userList } from '../../_mock/arrays';\n// components\nimport { useSettingsContext } from '../../components/settings';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport BancoNewEditForm from '../../sections/@dashboard/banco/BancoNewEditForm';\nimport Iconify from '../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function BancoEditPage() {\n  const { themeStretch } = useSettingsContext();\n\n  const { name } = useParams();\n\n  const currentBanco = _userList.find((banco) => paramCase(banco.name) === name);\n\n  return (\n    <>\n      <Helmet>\n        <title>Banco</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading={\n            <Typography variant='h4' color='primary'>Editar banco</Typography>\n          }\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Banco',\n              href: PATH_DASHBOARD.banco.list,\n            },\n            { name: currentBanco?.name },\n          ]}\n          action={<Button component={RouterLink}\n            to={PATH_DASHBOARD.banco.list}\n            variant=\"contained\"\n            startIcon={<Iconify icon=\"ic:round-arrow-back\" />}\n          >\n\n            Regresar\n          </Button>}\n        />\n\n        <BancoNewEditForm isEdit currentBanco={currentBanco} />\n      </Container>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm} from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack} from '@mui/material';\n// utils\n// import { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// assets\n// import { countries } from '../../../assets/data';\n// components\n// import Label from '../../../components/label';\nimport { useSnackbar } from '../../../components/snackbar';\nimport FormProvider, {\n  RHFCheckbox,\n  RHFTextField,\n} from '../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nBancoNewEditForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentBanco: PropTypes.object,\n};\n\nexport default function BancoNewEditForm({ isEdit = false, currentBanco }) {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewBancoSchema = Yup.object().shape({\n    bankName: Yup\n    .string()\n    .required('Ingrese nombre del banco'),\n    digit: Yup\n    .string()\n    .required('Ingrese dígitos'),\n    idSap: Yup\n    .string()\n    .required('Ingrese id de banco')\n    .matches(/[0-9]|\\./, \n    \"Ingresa un número válido\"\n    ),\n    // orders: Yup.string().required('Ingrese correo electrónico'),\n    // businessParthner: Yup.string().required('Ingresé número de teléfono'),\n  });\n  const handleKeyPressNumber= (e) =>{ \n    const key = e.key;\n    const regex = /[0-9]|\\./;\n    if( !regex.test(key) ) {\n        e.preventDefault();\n    }\n    else {\n        console.log( \"You pressed a key: \".key );\n    }\n};\n  const defaultValues = useMemo(\n    () => ({\n      bankName: currentBanco?.bankName || '',\n      digit: currentBanco?.digit || '',\n      idSap: currentBanco?.idSap || '',\n      orders: currentBanco?.orders || '',\n      businessParthner: currentBanco?.businessParthner || '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentBanco]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewBancoSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    // watch,\n    // setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  // const values = watch();\n\n  useEffect(() => {\n    if (isEdit && currentBanco) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentBanco]);\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar(!isEdit ? '¡Su banco fue registrado!' : '¡Sus cambios fueron actualizados!');\n      navigate(PATH_DASHBOARD.banco.list);\n      console.log('DATA', data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n \n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              rowGap={3}\n              columnGap={3}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(1, 1fr)',\n                sm: 'repeat(3, 1fr)',\n              }}\n            >\n              <RHFTextField name=\"bankName\" label=\"Nombre del banco\" />\n              <RHFTextField name=\"digit\" label=\"Dígitos\" />\n              <RHFTextField name=\"idSap\" label=\"Id banco SAP\"  onKeyPress={(e) => handleKeyPressNumber(e)}/>\n              <RHFCheckbox name=\"orders\" label=\"Visible para pedidos\" sx={{ mt: 3 }} />\n              <RHFCheckbox name=\"businessParthner\" label=\"¿Es socio de negocios?\" sx={{ mt: 3 }} />\n            </Box>\n\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {!isEdit ? 'Registrar Banco' : 'Guardar Cambios'}\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options,\n  });\n}\n","/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n","import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \",\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n","import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n"],"names":["BancoEditPage","themeStretch","useSettingsContext","name","useParams","currentBanco","_userList","banco","paramCase","maxWidth","heading","variant","color","links","href","PATH_DASHBOARD","action","component","RouterLink","to","startIcon","icon","isEdit","BancoNewEditForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewBancoSchema","Yup","shape","bankName","required","digit","idSap","matches","defaultValues","useMemo","orders","businessParthner","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","formState","useEffect","onSubmit","data","Promise","resolve","setTimeout","console","log","error","container","spacing","item","xs","md","sx","p","rowGap","columnGap","display","gridTemplateColumns","sm","label","onKeyPress","e","key","test","preventDefault","handleKeyPressNumber","mt","alignItems","type","loading","dotCase","input","options","noCase","delimiter","lowerCase","str","toLowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","splitRegexp","_b","stripRegexp","_c","transform","_d","result","replace","start","end","length","charAt","slice","split","map","join","re","value","RegExp","reduce"],"sourceRoot":""}