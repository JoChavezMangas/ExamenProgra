{"version":3,"file":"static/js/3471.4a604075.chunk.js","mappings":"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","sources":["pages/components/mui/MUIAlertPage.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js","../node_modules/@mui/material/esm/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/esm/AlertTitle/AlertTitle.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Alert, Button, Container, AlertTitle, Stack } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['info', 'success', 'warning', 'error'];\n\n// ----------------------------------------------------------------------\n\nexport default function MUIAlertPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Alert | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Alert\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Alert' },\n            ]}\n            moreLink={['https://mui.com/components/alert']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={2} spacing={3}>\n          <Block title=\"Standard\">\n            <Stack spacing={2}>\n              {COLORS.map((color) => (\n                <Alert key={color} severity={color} onClose={() => {}}>\n                  This is an {color} alert â€” check it out!\n                </Alert>\n              ))}\n            </Stack>\n          </Block>\n\n          <Block title=\"Filled\">\n            <Stack spacing={2}>\n              {COLORS.map((color) => (\n                <Alert key={color} severity={color} variant=\"filled\" onClose={() => {}}>\n                  This is an {color} alert â€” check it out!\n                </Alert>\n              ))}\n            </Stack>\n          </Block>\n\n          <Block title=\"Outlined\">\n            <Stack spacing={2}>\n              {COLORS.map((color) => (\n                <Alert key={color} severity={color} variant=\"outlined\" onClose={() => {}}>\n                  This is an {color} alert â€” check it out!\n                </Alert>\n              ))}\n            </Stack>\n          </Block>\n\n          <Block title=\"Description\">\n            <Stack spacing={2}>\n              {COLORS.map((color) => (\n                <Alert key={color} severity={color} onClose={() => {}}>\n                  <AlertTitle sx={{ textTransform: 'capitalize' }}> {color} </AlertTitle>\n                  This is an {color} alert â€” <strong>check it out!</strong>\n                </Alert>\n              ))}\n            </Stack>\n          </Block>\n\n          <Block title=\"Actions\">\n            <Stack spacing={2}>\n              <Alert\n                severity=\"info\"\n                action={\n                  <Button color=\"info\" size=\"small\" variant=\"soft\">\n                    Action\n                  </Button>\n                }\n              >\n                This is an info alert â€” check it out!\n              </Alert>\n\n              <Alert\n                severity=\"info\"\n                variant=\"filled\"\n                action={\n                  <>\n                    <Button\n                      color=\"inherit\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      sx={{\n                        mr: 1,\n                        border: (theme) => `1px solid ${alpha(theme.palette.common.white, 0.48)}`,\n                      }}\n                    >\n                      Undo\n                    </Button>\n\n                    <Button\n                      size=\"small\"\n                      color=\"inherit\"\n                      variant=\"contained\"\n                      sx={{\n                        bgcolor: 'common.white',\n                      }}\n                    >\n                      Action\n                    </Button>\n                  </>\n                }\n              >\n                This is an info alert â€” check it out!\n              </Alert>\n\n              <Alert\n                severity=\"info\"\n                variant=\"outlined\"\n                action={\n                  <>\n                    <Button\n                      color=\"info\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      sx={{\n                        mr: 1,\n                      }}\n                    >\n                      Undo\n                    </Button>\n\n                    <Button color=\"info\" size=\"small\" variant=\"contained\">\n                      Action\n                    </Button>\n                  </>\n                }\n              >\n                This is an info alert â€” check it out!\n              </Alert>\n            </Stack>\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getAlertTitleUtilityClass } from './alertTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n});\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;"],"names":["COLORS","MUIAlertPage","sx","pt","pb","bgcolor","theme","palette","mode","heading","links","name","href","PATH_PAGE","moreLink","my","columns","spacing","title","map","color","severity","onClose","variant","textTransform","action","size","mr","border","alpha","common","white","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","width","margin","padding","MasonryRoot","styled","overridesResolver","props","styles","root","ownerState","display","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","height","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","flushSync","max","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","_","index","_jsx","_jsxs","as","clsx","getAlertTitleUtilityClass","AlertTitleRoot","Typography","fontWeight","typography","fontWeightMedium","gutterBottom"],"sourceRoot":""}