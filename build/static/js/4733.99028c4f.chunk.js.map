{"version":3,"file":"static/js/4733.99028c4f.chunk.js","mappings":"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","sources":["pages/components/mui/MUISliderPage.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js"],"sourcesContent":["import { useState } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Stack, Slider, Container, Typography, alpha } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/iconify';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nconst marks = [\n  { value: 0, label: '0°C' },\n  { value: 20, label: '20°C' },\n  { value: 37, label: '37°C' },\n  { value: 100, label: '100°C' },\n];\n\nconst prices = [\n  { value: 0, label: '$0' },\n  { value: 25, label: '250' },\n  { value: 50, label: '500' },\n  { value: 75, label: '750' },\n  { value: 100, label: '1000' },\n];\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' },\n};\n\n// ----------------------------------------------------------------------\n\nfunction valuePrice(value) {\n  return value > 0 ? `$${value}0` : `${value}`;\n}\n\nfunction valueLabelFormatPrice(value) {\n  return value > 0 ? `$${value}` : value;\n}\n\nfunction valuetext(value) {\n  return `$${value}°C`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex((mark) => mark.value === value) + 1;\n}\n\n// ----------------------------------------------------------------------\n\nexport default function MUISliderPage() {\n  const [value, setValue] = useState(30);\n\n  const [price, setPrice] = useState([20, 37]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangePrice = (event, newValue) => {\n    setPrice(newValue);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Slider | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Slider\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Slider' },\n            ]}\n            moreLink={['https://mui.com/components/slider']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\n          <Block title=\"Volume\" sx={style}>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1} width={1}>\n              <Iconify icon=\"eva:volume-mute-fill\" width={24} />\n              <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\n              <Iconify icon=\"eva:volume-up-fill\" width={24} />\n            </Stack>\n          </Block>\n\n          <Block title=\"Disabled\" sx={style}>\n            <Slider disabled defaultValue={30} />\n          </Block>\n\n          <Block title=\"Temperature\" sx={style}>\n            <Slider\n              defaultValue={30}\n              getAriaValueText={valuetext}\n              valueLabelDisplay=\"auto\"\n              step={10}\n              marks\n              min={10}\n              max={110}\n            />\n          </Block>\n\n          <Block title=\"Size\" sx={style}>\n            <Slider\n              size=\"medium\"\n              marks\n              min={10}\n              step={10}\n              max={110}\n              defaultValue={30}\n              valueLabelDisplay=\"auto\"\n              getAriaValueText={valuetext}\n            />\n\n            <Slider\n              marks\n              min={10}\n              step={10}\n              max={110}\n              defaultValue={30}\n              valueLabelDisplay=\"auto\"\n              getAriaValueText={valuetext}\n            />\n          </Block>\n\n          <Block title=\"Small steps\" sx={style}>\n            <Slider\n              defaultValue={0.00000005}\n              getAriaValueText={valuetext}\n              step={0.00000001}\n              marks\n              min={-0.00000005}\n              max={0.0000001}\n              valueLabelDisplay=\"auto\"\n            />\n          </Block>\n\n          <Block title=\"Custom marks\" sx={style}>\n            <Slider\n              defaultValue={20}\n              getAriaValueText={valuetext}\n              step={10}\n              valueLabelDisplay=\"auto\"\n              marks={marks}\n            />\n          </Block>\n\n          <Block title=\"Restricted values\" sx={style}>\n            <Slider\n              defaultValue={20}\n              valueLabelFormat={valueLabelFormat}\n              getAriaValueText={valuetext}\n              step={null}\n              valueLabelDisplay=\"auto\"\n              marks={marks}\n            />\n          </Block>\n\n          <Block title=\"Range\" sx={style}>\n            <Box sx={{ width: '100%' }}>\n              <Slider\n                scale={(x) => x * 10}\n                step={10}\n                marks={prices}\n                value={price}\n                onChange={handleChangePrice}\n                valueLabelDisplay=\"on\"\n                getAriaValueText={valuePrice}\n                valueLabelFormat={valueLabelFormatPrice}\n              />\n            </Box>\n            <Box\n              sx={{\n                p: 2,\n                width: '100%',\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\n              }}\n            >\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Min: {valuePrice(price[0])}\n              </Typography>\n              <Typography variant=\"subtitle2\">Max: {valuePrice(price[1])}</Typography>\n            </Box>\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"],"names":["marks","value","label","prices","style","display","alignItems","justifyContent","flexWrap","mx","valuePrice","valueLabelFormatPrice","valuetext","valueLabelFormat","findIndex","mark","MUISliderPage","useState","setValue","price","setPrice","sx","pt","pb","bgcolor","theme","palette","mode","heading","links","name","href","PATH_PAGE","moreLink","my","columns","xs","md","spacing","title","direction","width","icon","onChange","event","newValue","disabled","defaultValue","getAriaValueText","valueLabelDisplay","step","min","max","size","scale","x","p","borderRadius","alpha","grey","variant","gutterBottom","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","margin","padding","MasonryRoot","styled","overridesResolver","props","styles","root","ownerState","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","height","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","flushSync","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","map","_","index","_jsx","_jsxs","as","clsx"],"sourceRoot":""}