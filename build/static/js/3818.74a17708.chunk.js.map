{"version":3,"file":"static/js/3818.74a17708.chunk.js","mappings":"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","sources":["pages/Empleado/BandejaEmpleado.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n    Card,\n    Button,\n    Container,\n    IconButton,\n    TableContainer,\n    Typography,\n    MenuItem\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useSnackbar } from 'notistack';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\nimport { _employeeList } from '../../_mock/arrays';\n// components\nimport Iconify from '../../components/iconify';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport Label from '../../components/label';\nimport { CustomAvatar } from '../../components/custom-avatar';\nimport MenuPopover from '../../components/menu-popover';\nimport { HOST_API_LOCAL, END_POINT_BANDEJAEMPLEADOS } from '../../config-global';\n\n\n\n\n\nexport default function BandejaEmpleado() {\n\n    const [openConfirm, setOpenConfirm] = useState(false);\n    const [openPopover, setOpenPopover] = useState(null);\n    const [tableData, setTableData] = useState(_employeeList);\n    const [IdAUX, setIdAUX] = useState('');\n    const navigate = useNavigate();\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true);\n    };\n    const handleCloseConfirm = () => {\n        setOpenConfirm(false);\n    };\n    const handleOpenPopover = (e, Id) => {\n        setIdAUX(Id)\n        setOpenPopover(e.currentTarget);\n    };\n    const handleClosePopover = () => {\n        setOpenPopover(null);\n    };\n    const handleEditRow = (id) => {\n        console.log(id)\n        navigate(PATH_DASHBOARD.empleado.edit(id));\n    };\n    const JustAfterClicDelete = () => {\n        handleDeleteRow(IdAUX);\n        onDelete(IdAUX);\n    }\n    const handleDeleteRow = (id) => {\n        const deleteRow = tableData.filter((row) => row.id !== id);\n        setTableData(deleteRow);\n        setOpenConfirm(false);\n    };\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onDelete = async (data) => {\n        try {\n            await new Promise((resolve) => setTimeout(resolve, 500));\n            enqueueSnackbar('Listo, el empleado fue borrado');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n\n\n    const columns = [\n        {\n            field: 'avatar',\n            headerName: '',\n            align: 'center',\n            headerAlign: 'center',\n            width: 64,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => <CustomAvatar name={params.row.nombreCompleto} sx={{ width: 36, height: 36 }} />,\n        },\n        {\n            field: 'nombreCompleto',\n            headerName: 'Colaborador',\n            width: 220,\n            editable: false,\n        },\n        {\n            field: 'nombreEmpresa',\n            headerName: 'Empresa',\n            width:150,\n            editable: false,\n        },\n        {\n            field: 'areaDepartamento',\n            headerName: 'Area y Departamento',\n            width: 300,\n            editable: false,\n            disableExtendRowFullWidth:true,\n\n            renderCell: (params) => RenderEmpresaAreaDepto(params.row.nombreEmpresa, params.row.nombreArea, '', params.row),\n        },\n        {\n            field: 'puesto',\n            headerName: 'Puesto',\n            width: 220,\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"body2\" noWrap>\n                    {params.row.nombrePuesto}\n                </Typography>\n            ),\n        },\n        {\n            field: 'correoEmpresarial',\n            width: 250,\n            headerName: 'Email',\n            editable: false,\n            renderCell: (params) => (\n                <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\n                    {params.row.correoEmpresarial}\n                </Typography>\n            ),\n        },\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 90,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n                <IconButton color={openPopover ? 'inherit' : 'default'} onClick={(e) => handleOpenPopover(e, params.row.id)}>\n                    <Iconify icon=\"eva:more-vertical-fill\" />\n                </IconButton>\n            ),\n        },\n    ];\n\n    return (\n        <>\n            <Helmet>\n                <title> Empelado </title>\n            </Helmet>\n\n            <Container>\n\n                <CustomBreadcrumbs\n                    heading={\n                        <>Empleado</>\n                    }\n                    links={[{ name: '' },]}\n                    action={<Button component={RouterLink}\n                        to={PATH_DASHBOARD.empleado.new}\n                        variant=\"contained\"\n                        startIcon={<Iconify icon=\"eva:plus-fill\" />}\n                    >\n                        Crear nuevo Empleado\n                    </Button>} />\n\n\n                <Card>\n                    <TableContainer sx={{marginTop:'0px', position: 'relative', overflow: 'unset', }}\n                        style={{ width: '100%' }}>\n                        <GenericDataGridCustom EndPoint={END_POINT_BANDEJAEMPLEADOS}   columns={columns} />\n                    </TableContainer>\n                </Card>\n            </Container>\n\n\n\n            <MenuPopover\n                open={openPopover}\n                onClose={handleClosePopover}\n                arrow=\"right-top\"\n                sx={{ width: 140 }}\n            >\n                <MenuItem\n                    onClick={() => {\n                        handleOpenConfirm();\n                        handleClosePopover();\n                    }}\n                    sx={{ color: 'error.main' }}\n                >\n                    <Iconify icon=\"eva:trash-2-outline\" />\n                    Borrar\n                </MenuItem>\n\n                <MenuItem\n                    onClick={() => {\n                        handleEditRow(IdAUX);\n                        handleClosePopover();\n                    }}\n                >\n                    <Iconify icon=\"eva:edit-fill\" />\n                    Editar\n                </MenuItem>\n            </MenuPopover>\n\n\n            <ConfirmDialog\n                open={openConfirm}\n                onClose={handleCloseConfirm}\n                title=\"Borrar\"\n                content=\"Deseas borrar este empleado?\"\n                action={\n                    <Button variant=\"contained\" color=\"error\" onClick={JustAfterClicDelete}>\n                        Borrar\n                    </Button>\n                }\n            />\n\n        </>\n    );\n}\n\n\n\n\nfunction RenderEmpresaAreaDepto(empresa, area, dpto,toshow) {\n    const theme = useTheme();\n    const isLight = theme.palette.mode === 'light';\n    let result;\n\n\n    if (dpto !== '') {\n\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='success'\n                    sx={{ mx: 'auto' }}\n                >\n                    {dpto}\n                </Label>\n            </a>\n        );\n\n\n\n       \n    } else {\n        result = (\n            <a>\n                <Label\n                    variant={isLight ? 'soft' : 'filled'}\n                    color='secondary'\n                    sx={{ mx: 'auto' }}\n                >\n                    {area}\n                </Label>\n            </a>\n        );\n    }\n\n    return (\n        <>\n            {result}\n        </>\n        )\n}\n\n\n"],"names":["BandejaEmpleado","useState","openConfirm","setOpenConfirm","openPopover","setOpenPopover","_employeeList","tableData","setTableData","IdAUX","setIdAUX","navigate","useNavigate","handleClosePopover","handleDeleteRow","id","deleteRow","filter","row","enqueueSnackbar","useSnackbar","onDelete","data","Promise","resolve","setTimeout","console","error","columns","field","headerName","align","headerAlign","width","sortable","filterable","disableColumnMenu","renderCell","params","name","nombreCompleto","sx","height","editable","disableExtendRowFullWidth","empresa","area","dpto","toshow","result","isLight","useTheme","palette","mode","variant","color","mx","RenderEmpresaAreaDepto","nombreEmpresa","nombreArea","noWrap","nombrePuesto","textDecoration","correoEmpresarial","onClick","e","Id","currentTarget","handleOpenPopover","icon","heading","links","action","component","RouterLink","to","PATH_DASHBOARD","startIcon","marginTop","position","overflow","style","EndPoint","END_POINT_BANDEJAEMPLEADOS","open","onClose","arrow","log","title","content"],"sourceRoot":""}