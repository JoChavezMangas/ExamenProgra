{"version":3,"file":"static/js/1425.7bf023c6.chunk.js","mappings":"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","sources":["sections/_examples/mui/progress/ProgressLinear.js","sections/_examples/mui/progress/ProgressCircular.js","pages/components/mui/MUIProgressPage.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { Paper, LinearProgress } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n//\nimport { Label } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['inherit', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\nconst style = {\n  p: 2,\n  minHeight: 160,\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { m: 1 },\n};\n\n// ----------------------------------------------------------------------\n\nProgressLinear.propTypes = {\n  buffer: PropTypes.number,\n  progress: PropTypes.number,\n};\n\nexport default function ProgressLinear({ progress, buffer }) {\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <div>\n        <Label title=\"Linears Indeterminate\" />\n        <Paper variant=\"outlined\" sx={style}>\n          {COLORS.map((color) => (\n            <LinearProgress key={color} color={color} sx={{ mb: 2, width: 1 }} />\n          ))}\n        </Paper>\n      </div>\n\n      <div>\n        <Label title=\"Linears Determinate\" />\n        <Paper variant=\"outlined\" sx={style}>\n          {COLORS.map((color) => (\n            <LinearProgress\n              key={color}\n              color={color}\n              value={progress}\n              variant=\"determinate\"\n              sx={{ mb: 2, width: 1 }}\n            />\n          ))}\n        </Paper>\n      </div>\n\n      <div>\n        <Label title=\"Linears Buffer\" />\n        <Paper variant=\"outlined\" sx={style}>\n          {COLORS.map((color) => (\n            <LinearProgress\n              key={color}\n              color={color}\n              variant=\"buffer\"\n              value={progress}\n              valueBuffer={buffer}\n              sx={{ mb: 2, width: 1 }}\n            />\n          ))}\n        </Paper>\n      </div>\n\n      <div>\n        <Label title=\"Linears Query\" />\n        <Paper variant=\"outlined\" sx={style}>\n          {COLORS.map((color) => (\n            <LinearProgress\n              key={color}\n              color={color}\n              variant=\"query\"\n              value={progress}\n              valueBuffer={buffer}\n              sx={{ mb: 2, width: 1 }}\n            />\n          ))}\n        </Paper>\n      </div>\n    </Masonry>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Paper, CircularProgress } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n//\nimport { Label } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  minHeight: 160,\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { m: 1 },\n};\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['inherit', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\nProgressCircular.propTypes = {\n  progress: PropTypes.number,\n};\n\nexport default function ProgressCircular({ progress }) {\n  return (\n    <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\n      <div>\n        <Label title=\"Circular Indeterminate\" />\n        <Paper variant=\"outlined\" sx={style}>\n          {COLORS.map((color) => (\n            <CircularProgress key={color} color={color} />\n          ))}\n        </Paper>\n      </div>\n\n      <div>\n        <Label title=\"Circular determinate\" />\n        <Paper variant=\"outlined\" sx={style}>\n          <CircularProgress color=\"info\" />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={25} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={50} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={75} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={100} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={progress} />\n        </Paper>\n      </div>\n\n      <div>\n        <Label title=\"Circular Size\" />\n        <Paper variant=\"outlined\" sx={style}>\n          <CircularProgress size={48} color=\"info\" />\n          <CircularProgress color=\"info\" />\n          <CircularProgress size={32} color=\"info\" />\n          <CircularProgress size={24} color=\"info\" />\n        </Paper>\n      </div>\n    </Masonry>\n  );\n}\n","import { useState, useEffect, useRef } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Container, Stack } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport ProgressLinear from '../../../sections/_examples/mui/progress/ProgressLinear';\nimport ProgressCircular from '../../../sections/_examples/mui/progress/ProgressCircular';\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nexport default function MUIProgressPage() {\n  const [progress, setProgress] = useState(0);\n\n  const [buffer, setBuffer] = useState(10);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const progressRef = useRef(() => {});\n\n  useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n    };\n  });\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Progress | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Progress\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Progress' },\n            ]}\n            moreLink={['https://mui.com/components/progress']}\n          />\n        </Container>\n      </Box>\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Block title=\"Circular\">\n            <ProgressCircular progress={progress} />\n          </Block>\n\n          <Block title=\"Linear\">\n            <ProgressLinear progress={progress} buffer={buffer} />\n          </Block>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"],"names":["COLORS","style","p","minHeight","display","flexWrap","alignItems","justifyContent","m","ProgressLinear","progress","buffer","Masonry","columns","xs","md","spacing","title","Paper","variant","sx","map","color","LinearProgress","mb","width","value","valueBuffer","ProgressCircular","CircularProgress","size","MUIProgressPage","useState","setProgress","setBuffer","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","progressRef","useRef","current","diff2","Box","pt","pb","bgcolor","theme","palette","mode","Container","heading","links","name","href","PATH_PAGE","moreLink","my","Stack","Block","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","margin","padding","MasonryRoot","styled","overridesResolver","props","styles","root","ownerState","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","height","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","flushSync","max","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","_","index","_jsx","_jsxs","as","clsx"],"sourceRoot":""}