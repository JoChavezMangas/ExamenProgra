{"version":3,"file":"static/js/581.d1007420.chunk.js","mappings":"8LA4BA,IAxBA,WACE,OAAoCA,EAAAA,EAAAA,UAAS,MAAK,eAA3CC,EAAU,KAAEC,EAAa,KAE1BC,EAAI,yCAAG,WAAOC,GAAI,+EACR,QADQ,EACjBC,iBAAS,OAAT,EAAWC,UAAU,CAAD,eACiB,OAAxCC,QAAQC,KAAK,2BAA2B,mBACjC,GAAK,gCAKNH,UAAUC,UAAUG,UAAUL,GAAM,KAAD,EACrB,OAApBF,EAAcE,GAAM,mBACb,GAAI,QAGS,OAHT,0BAEXG,QAAQC,KAAK,cAAc,EAAD,IAC1BN,EAAc,MAAM,mBACb,GAAK,0DAEf,gBAhBS,sCAkBV,MAAO,CAAED,WAAAA,EAAYE,KAAAA,EACvB,C,iQCFMO,EAAU,CAAC,UAAW,YAAa,OAAQ,UAAW,UAAW,SAEjEC,EAAa,CAAC,UAAW,QAAS,OAAQ,OAAQ,UAElDC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAIvD,SAASC,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,KAENC,GAAoBC,EAAAA,EAAAA,MAApBD,gBAEAb,GAASe,EAAAA,EAAAA,KAATf,KAEFgB,EAAS,SAACC,GACVA,IACFJ,EAAgB,WAAD,OAAYI,IAC3BjB,EAAKiB,GAET,EAEA,OACE,iCACE,SAAC,KAAM,WACL,oEAGF,SAAC,IAAG,CACFC,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,QAAgC,UAAvBV,EAAMW,QAAQC,KAAmB,WAAa,YACvD,UAEF,SAAC,IAAS,WACR,SAAC,IAAiB,CAChBC,QAAQ,QACRC,MAAO,CACL,CACEC,KAAM,aACNC,KAAMC,EAAAA,GAAAA,YAER,CAAEF,KAAM,UAEVG,SAAU,CAAC,sCAAuC,oCAKxD,SAAC,IAAS,CAACX,GAAI,CAAEY,GAAI,IAAK,UACxB,UAAC,IAAK,CAACC,QAAS,EAAGC,SAAS,SAAC,IAAO,CAACd,GAAI,CAAEe,YAAa,YAAe,UACpE1B,EAAQ2B,KAAI,SAACjB,GAAK,OACjB,UAAC,IAAG,YACF,SAAC,IAAU,CAACkB,QAAQ,KAAKjB,GAAI,CAAEkB,cAAe,aAAcC,GAAI,GAAI,SACjEpB,KAGH,SAACqB,EAAI,UACF9B,EAAW0B,KAAI,SAACK,GAAS,OACxB,SAACC,EAAS,CAERD,UAAWA,EACXE,SAAU9B,EAAMW,QAAQL,GAAOsB,GAC/BvB,OAAQ,kBAAMA,EAAOL,EAAMW,QAAQL,GAAOsB,GAAW,GAHhDA,EAIL,QAZEtB,EAeJ,KAGR,4BACE,SAAC,IAAU,CAACkB,QAAQ,KAAKjB,GAAI,CAAEkB,cAAe,aAAcC,GAAI,GAAI,mBAIpE,SAACC,EAAI,UACF7B,EAAKyB,KAAI,SAACK,GAAS,OAClB,SAACC,EAAS,CAERD,UAAWA,EACXE,SAAU9B,EAAMW,QAAQoB,KAAKH,GAC7BvB,OAAQ,kBAAMA,EAAOL,EAAMW,QAAQoB,KAAKH,GAAW,GAH9CA,EAIL,gBAQlB,CAUA,SAASC,EAAU,GAAkC,IAAhCC,EAAQ,EAARA,SAAUF,EAAS,EAATA,UAAWvB,EAAM,EAANA,OACxC,OACE,UAAC,IAAK,CACJmB,QAAQ,WACRjB,GAAI,CACFyB,SAAU,SACVC,SAAU,WACVC,YAAa,SAAClC,GAAK,OAAKmC,EAAAA,EAAAA,IAAMnC,EAAMW,QAAQoB,KAAK,KAAM,IAAK,GAC5D,WAEF,SAAC,IAAO,CAACK,MAAM,OAAM,UACnB,SAAC,IAAU,CACTC,QAAShC,EACTE,GAAI,CACF+B,IAAK,EACLC,MAAO,EACPN,SAAU,WACV3B,MAAO,SAACN,GAAK,OAAKA,EAAMW,QAAQ6B,gBAAgBV,EAAS,GACzD,UAEF,SAAC,IAAO,CAACW,KAAK,uBAIlB,SAAC,IAAG,CAAClC,GAAI,CAAEG,QAASoB,EAAUY,WAAY,UAE1C,UAAC,IAAK,CAACtB,QAAS,EAAGb,GAAI,CAAEoC,EAAG,GAAI,WAC9B,SAAC,IAAU,CAACnB,QAAQ,YAAYjB,GAAI,CAAEkB,cAAe,cAAe,SACjEG,KAGH,UAAC,IAAK,CAACgB,UAAU,MAAMC,WAAW,SAAQ,WACxC,SAAC,IAAU,CAACrB,QAAQ,WAAWjB,GAAI,CAAEuC,MAAO,GAAIxC,MAAO,iBAAkB,kBAIzE,SAAC,IAAU,CAACkB,QAAQ,QAAO,SAAEM,QAG/B,UAAC,IAAK,CAACc,UAAU,MAAMC,WAAW,SAAQ,WACxC,SAAC,IAAU,CAACrB,QAAQ,WAAWjB,GAAI,CAAEuC,MAAO,GAAIxC,MAAO,iBAAkB,kBAIzE,SAAC,IAAU,CAACkB,QAAQ,QAAO,UACxBuB,EAAAA,EAAAA,IAASjB,GAAUkB,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,cAMjE,CAQA,SAASrB,EAAK,GAAe,IAAbsB,EAAQ,EAARA,SACd,OACE,SAAC,IAAG,CACFC,IAAK,IACLC,QAAQ,OACRC,oBAAqB,CACnBC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,GAAI,kBACJ,SAEDP,GAGP,C","sources":["hooks/useCopyToClipboard.js","pages/components/foundation/FoundationColorsPage.js"],"sourcesContent":["import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nfunction useCopyToClipboard() {\n  const [copiedText, setCopiedText] = useState(null);\n\n  const copy = async (text) => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported');\n      return false;\n    }\n\n    // Try to save to clipboard then save it in the state if worked\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(text);\n      return true;\n    } catch (error) {\n      console.warn('Copy failed', error);\n      setCopiedText(null);\n      return false;\n    }\n  };\n\n  return { copiedText, copy };\n}\n\nexport default useCopyToClipboard;\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport { useTheme, hexToRgb, alpha } from '@mui/material/styles';\nimport {\n  Box,\n  Paper,\n  Stack,\n  Tooltip,\n  Divider,\n  Container,\n  Typography,\n  IconButton,\n} from '@mui/material';\nimport useCopyToClipboard from '../../../hooks/useCopyToClipboard';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/iconify';\nimport { useSnackbar } from '../../../components/snackbar';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst PALETTE = ['primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\nconst VARIATIONS = ['lighter', 'light', 'main', 'dark', 'darker'];\n\nconst GREY = ['100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n// ----------------------------------------------------------------------\n\nexport default function FoundationColorsPage() {\n  const theme = useTheme();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const onCopy = (color) => {\n    if (color) {\n      enqueueSnackbar(`Copied! ${color}`);\n      copy(color);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> Foundations: Colors | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: theme.palette.mode === 'light' ? 'grey.200' : 'grey.800',\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Color\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Color' },\n            ]}\n            moreLink={['https://mui.com/customization/color', 'https://colors.eva.design']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5} divider={<Divider sx={{ borderStyle: 'dashed' }} />}>\n          {PALETTE.map((color) => (\n            <Box key={color}>\n              <Typography variant=\"h5\" sx={{ textTransform: 'capitalize', mb: 3 }}>\n                {color}\n              </Typography>\n\n              <Grid>\n                {VARIATIONS.map((variation) => (\n                  <ColorCard\n                    key={variation}\n                    variation={variation}\n                    hexColor={theme.palette[color][variation]}\n                    onCopy={() => onCopy(theme.palette[color][variation])}\n                  />\n                ))}\n              </Grid>\n            </Box>\n          ))}\n\n          <div>\n            <Typography variant=\"h5\" sx={{ textTransform: 'capitalize', mb: 3 }}>\n              Grey\n            </Typography>\n\n            <Grid>\n              {GREY.map((variation) => (\n                <ColorCard\n                  key={variation}\n                  variation={variation}\n                  hexColor={theme.palette.grey[variation]}\n                  onCopy={() => onCopy(theme.palette.grey[variation])}\n                />\n              ))}\n            </Grid>\n          </div>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nColorCard.propTypes = {\n  onCopy: PropTypes.func,\n  hexColor: PropTypes.string,\n  variation: PropTypes.string,\n};\n\nfunction ColorCard({ hexColor, variation, onCopy }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        overflow: 'hidden',\n        position: 'relative',\n        borderColor: (theme) => alpha(theme.palette.grey[500], 0.16),\n      }}\n    >\n      <Tooltip title=\"Copy\">\n        <IconButton\n          onClick={onCopy}\n          sx={{\n            top: 8,\n            right: 8,\n            position: 'absolute',\n            color: (theme) => theme.palette.getContrastText(hexColor),\n          }}\n        >\n          <Iconify icon=\"eva:copy-fill\" />\n        </IconButton>\n      </Tooltip>\n\n      <Box sx={{ bgcolor: hexColor, paddingTop: '75%' }} />\n\n      <Stack spacing={1} sx={{ p: 2 }}>\n        <Typography variant=\"subtitle2\" sx={{ textTransform: 'capitalize' }}>\n          {variation}\n        </Typography>\n\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Typography variant=\"overline\" sx={{ width: 56, color: 'text.disabled' }}>\n            Hex\n          </Typography>\n\n          <Typography variant=\"body2\">{hexColor}</Typography>\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Typography variant=\"overline\" sx={{ width: 56, color: 'text.disabled' }}>\n            Rgb\n          </Typography>\n\n          <Typography variant=\"body2\">\n            {hexToRgb(hexColor).replace('rgb(', '').replace(')', '')}\n          </Typography>\n        </Stack>\n      </Stack>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nGrid.propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Grid({ children }) {\n  return (\n    <Box\n      gap={2.5}\n      display=\"grid\"\n      gridTemplateColumns={{\n        xs: 'repeat(2, 1fr)',\n        sm: 'repeat(3, 1fr)',\n        md: 'repeat(4, 1fr)',\n        lg: 'repeat(5, 1fr)',\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n"],"names":["useState","copiedText","setCopiedText","copy","text","navigator","clipboard","console","warn","writeText","PALETTE","VARIATIONS","GREY","FoundationColorsPage","theme","useTheme","enqueueSnackbar","useSnackbar","useCopyToClipboard","onCopy","color","sx","pt","pb","bgcolor","palette","mode","heading","links","name","href","PATH_PAGE","moreLink","my","spacing","divider","borderStyle","map","variant","textTransform","mb","Grid","variation","ColorCard","hexColor","grey","overflow","position","borderColor","alpha","title","onClick","top","right","getContrastText","icon","paddingTop","p","direction","alignItems","width","hexToRgb","replace","children","gap","display","gridTemplateColumns","xs","sm","md","lg"],"sourceRoot":""}