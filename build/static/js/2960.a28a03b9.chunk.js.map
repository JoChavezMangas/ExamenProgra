{"version":3,"file":"static/js/2960.a28a03b9.chunk.js","mappings":"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","sources":["pages/Vacaciones/InicioVacaciones.js","pages/Vacaciones/HistorialMisPeticiones.js","pages/Vacaciones/MisPeticiones.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// import { paramCase } from 'change-case';\nimport { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n    Card,\n    Container,\n    Typography,\n    Tabs,\n    Tab,\n    Box,\n    TableContainer\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// _mock_\n// import { _userList, _companyList } from '../../_mock/arrays';\nimport { _dataList } from '../../_mock/arrays';\n// components\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport GridTablerosVacaciones from './Tableros';\nimport TablaMisPeticiones from './MisPeticiones';\nimport TablaPeticiones from './Peticiones';\n\n\n\n\nexport default function InicioVacaciones() {\n\n    const TABS = [\n        { value: 'tablero', label: 'Solicitudes', component: <GridTablerosVacaciones /> },\n        { value: 'MisPeticiones', label: 'Mis Peticiones', component: <TablaMisPeticiones /> },\n        // { value: 'Peticiones', label: 'Peticiones', component: <TablaPeticiones /> },\n    ];\n    const [currentTab, setCurrentTab] = useState('tablero');\n    const [openConfirm, setOpenConfirm] = useState(false);\n    const [openPopover, setOpenPopover] = useState(null);\n    const [tableData, setTableData] = useState(_dataList);\n    const [IdAUX, setIdAUX] = useState('');\n    const navigate = useNavigate();\n    const handleOpenConfirm = () => {\n        setOpenConfirm(true);\n    };\n    const handleCloseConfirm = () => {\n        setOpenConfirm(false);\n    };\n    const handleOpenPopover = (e, Id) => {\n        setIdAUX(Id)\n        setOpenPopover(e.currentTarget);\n    };\n    const handleClosePopover = () => {\n        setOpenPopover(null);\n    };\n    const handleEditRow = (id) => {\n        console.log(id)\n        navigate(PATH_DASHBOARD.empresa.edit(id));\n    };\n    const JustAfterClicDelete = () => {\n        handleDeleteRow(IdAUX);\n        onDelete(IdAUX);\n    }\n    const handleDeleteRow = (id) => {\n        const deleteRow = tableData.filter((row) => row.id !== id);\n        setTableData(deleteRow);\n        setOpenConfirm(false);\n    };\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onDelete = async (data) => {\n        try {\n            await new Promise((resolve) => setTimeout(resolve, 500));\n            enqueueSnackbar('Listo');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title> Vacaciones - Incidencias </title>\n            </Helmet>\n\n            <Box>\n                <Container>\n                    <CustomBreadcrumbs\n                        heading={<>Vacaciones - Incidencias</>}\n                        links={[\n                            {\n                                name: 'Dashboard',\n                                href: PATH_DASHBOARD.root,\n                            },\n                            {\n                                name: 'Vacaciones',\n                                // href: PATH_DASHBOARD.vacaciones,\n                            },\n                        ]}\n                    />\n                </Container>\n            </Box>\n\n\n            <Container >\n                <Tabs value={currentTab} onChange={(event, newValue) => setCurrentTab(newValue)}>\n                    {TABS.map((tab) => (\n                        <Tab key={tab.value} value={tab.value} label={tab.label} />\n                    ))}\n                </Tabs>\n\n                {TABS.map(\n                    (tab) =>\n                        tab.value === currentTab && (\n                            <Box key={tab.value} sx={{ mt: 5 }}>\n                                {tab.component}\n                            </Box>\n                        )\n                )}\n            </Container>\n\n        </>\n    );\n}\n\n\n","import * as React from 'react';\nimport { useState } from 'react';\n// @mui\nimport {\n    Card,\n    TableContainer,\n    IconButton,\n    Typography,\n    Button,\n    Grid,\n    Dialog,\n    AppBar,\n    Toolbar,\n} from '@mui/material';\n\nimport { CloseIcon } from '../../theme/overrides/CustomIcons';\nimport Iconify from '../../components/iconify';\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport { END_POINT_TABLEROS_MIS_SOLICITUDES, HOST_API_LOCAL } from '../../config-global';\nimport { RenderStatus, RenderPeriodo, RendertipoPeticion } from './MetodosAUX';\n\n// import Label from '../../../components/label';\n\nexport default function HistorialMisPeticiones() {\n\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'Id',\n            flex: 1,\n            editable: false,\n            hide: true\n        },\n        {\n            field: 'fechaCreacion',\n            width: 150,\n            headerName: 'Fecha de solicitud',\n            editable: false\n        },\n        {\n            field: 'tipoPeticion',\n            width: 120,\n            headerName: 'Tipo de peticion',\n            editable: false,\n            renderCell: (params) => RendertipoPeticion(params.row.tipoPeticion),\n        },\n        {\n            field: 'Periodo',\n            width: 250,\n            headerName: 'Per√≠odo',\n            editable: false,\n            renderCell: (params) => RenderPeriodo(params.row.fechaInicioString, params.row.fechaFinString),\n        },\n        {\n            field: 'diasTotales',\n            align: 'center',\n            width: 90,\n            headerName: 'Total dias',\n            editable: false,\n        },\n        {\n            field: 'estatus',\n            width: 120,\n            headerName: 'Estatus',\n            editable: false,\n            renderCell: (params) => RenderStatus(params.row.estatus),\n        },\n        {\n            field: 'comentario',\n            width: 250,\n            headerName: 'Comentarios',\n            editable: false,\n        }\n    ];\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n\n        <>\n            <Button variant=\"contained\" onClick={handleClickOpen} sx={{ position: 'fixed', right: 0, top: '20%', borderRadius: '5px 0 0 5px', zIndex: 2 }} startIcon={<Iconify icon=\"material-symbols:list-alt-outline\" />}>\n                Historial\n            </Button>\n\n            <Dialog\n                fullScreen\n                open={open}\n                onClose={handleClose}\n            >\n                <AppBar sx={{ position: 'relative' }}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={handleClose}\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n                            Historial de mis peticiones\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Grid sx={{ padding: 3 }}>\n                    <TableContainer>\n                        <GenericDataGridCustom EndPoint={END_POINT_TABLEROS_MIS_SOLICITUDES} columns={columns} refresh={refreshAUX} />\n                    </TableContainer>\n                </Grid>\n            </Dialog>\n        </>\n\n    );\n}\n\n\n\n\n\n\n\n\n\n\n","import * as React from 'react';\nimport { useState } from 'react';\n// @mui\nimport {\n    Card,\n    TableContainer,\n    IconButton,\n    Typography,\n    Button,\n    Grid,\n    Dialog,\n    AppBar,\n    Toolbar,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { CloseIcon } from '../../theme/overrides/CustomIcons';\nimport Iconify from '../../components/iconify';\nimport GenericDataGridCustom from '../../sections/_examples/mui/data-grid/GenericDataGridCostom';\nimport { END_POINT_TABLEROS_MIS_SOLICITUDES, END_POINT_BANDEJA_PETICIONES_ESPECIALES, HOST_API_LOCAL } from '../../config-global';\nimport Label from '../../components/label';\nimport DialogEditarSolicitud from './EdicionSolicitud';\nimport HistorialMisPeticiones from './HistorialMisPeticiones';\nimport { RenderStatus, RenderPeriodo, RendertipoPeticion } from './MetodosAUX';\nimport ModalPeticionesEspeciales from './ModalPeticionesEspeciales';\n\n// import Label from '../../../components/label';\n\nexport default function TablaMisPeticiones() {\n    const [nombreEmpleado, setNombreEmpleado] = useState(\"\");\n    const [idSolicitud, setIdSolicitud] = useState(\"\");\n    const [idTipoPeticionEspecial, SetIdTipoPeticionEspecial] = useState(\"\");\n    const [diasPeticion, setDiasPeticion] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClickOpen = (SolicitudId, empeladoNombre, tipoPeticionEspecial, diastotales) => {\n\n        // estos colocan o datos\n        SetIdTipoPeticionEspecial(tipoPeticionEspecial)\n        setNombreEmpleado(empeladoNombre);\n        setIdSolicitud(SolicitudId);\n        setDiasPeticion(diastotales)\n        setOpen(true);\n    };\n    const parametroBandeja = `#Especiales`;\n\n\n    const [refreshAUX, setRefreshAUX] = useState(\"\");\n\n    const columns = [\n        {\n            field: 'action',\n            headerName: 'Acciones',\n            align: 'center',\n            width: 150,\n            sortable: false,\n            filterable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => (\n                params.row.tipoPeticion === \"1\" || params.row.tipoPeticion === \"2\" || params.row.tipoPeticion === \"3\" || params.row.tipoPeticion === \"4\" ? (\n                    <DialogEditarSolicitud params={params} refreshFunc={setRefreshAUX} />\n                ) :\n                    <Button color='primary' onClick={(e) =>\n                        handleClickOpen(\n                            params.row.id,\n                            params.row.empleadoSolicitanteNombre,\n                            params.row.tipoPeticionEspecial,\n                            params.row.diasTotales\n                        )\n                    }>\n                        <Iconify icon=\"ic:outline-remove-red-eye\" />Ver detalles\n                    </Button>\n            ),\n        },\n        {\n            field: 'fechaCreacion',\n            width: 150,\n            headerName: 'Fecha de solicitud',\n            editable: false\n        },\n        {\n            field: 'tipoPeticion',\n            width: 120,\n            headerName: 'Tipo de petici√≥n',\n            editable: false,\n            renderCell: (params) => RendertipoPeticion(params.row.tipoPeticion),\n        },\n        {\n            field: 'Periodo',\n            width: 250,\n            headerName: 'Per√≠odo',\n            editable: false,\n            renderCell: (params) => RenderPeriodo(params.row.fechaInicioString, params.row.fechaFinString),\n        },\n        {\n            field: 'diasTotales',\n            align: 'center',\n            width: 90,\n            headerName: 'Total dias',\n            editable: false,\n        },\n        {\n            field: 'estatus',\n            width: 120,\n            headerName: 'Estatus',\n            editable: false,\n            renderCell: (params) => RenderStatus(params.row.estatus),\n        },\n        {\n            field: 'comentario',\n            width: 250,\n            headerName: 'Comentarios',\n            editable: false,\n        }\n    ];\n\n    return (\n\n        <>\n            <HistorialMisPeticiones />\n\n            <Card>\n                <TableContainer sx={{ marginTop: '0px', position: 'relative', overflow: 'unset', }}\n                    style={{ width: '100%' }} >\n                    <GenericDataGridCustom EndPoint={END_POINT_TABLEROS_MIS_SOLICITUDES} columns={columns} refresh={refreshAUX} />\n                </TableContainer>\n            </Card>\n\n            <ModalPeticionesEspeciales\n                NombreEmpleado={nombreEmpleado}\n                SolicitudId={idSolicitud}\n                refreshFunc={setRefreshAUX}\n                abrirModal={open}\n                metodoCerrar={handleClose}\n                tipoPeticionEspecial={idTipoPeticionEspecial}\n                diasTotales={diasPeticion}\n            />\n        </>\n\n    );\n}\n\n\n\n"],"names":["InicioVacaciones","TABS","value","label","component","useState","currentTab","setCurrentTab","_dataList","useNavigate","useSnackbar","enqueueSnackbar","heading","links","name","href","PATH_DASHBOARD","onChange","event","newValue","map","tab","sx","mt","HistorialMisPeticiones","refreshAUX","columns","field","headerName","flex","editable","hide","width","renderCell","params","RendertipoPeticion","row","tipoPeticion","RenderPeriodo","fechaInicioString","fechaFinString","align","RenderStatus","estatus","React","open","setOpen","handleClose","Button","variant","onClick","position","right","top","borderRadius","zIndex","startIcon","icon","Dialog","fullScreen","onClose","AppBar","Toolbar","IconButton","edge","color","Typography","ml","Grid","padding","TableContainer","EndPoint","END_POINT_TABLEROS_MIS_SOLICITUDES","refresh","TablaMisPeticiones","nombreEmpleado","setNombreEmpleado","idSolicitud","setIdSolicitud","idTipoPeticionEspecial","SetIdTipoPeticionEspecial","diasPeticion","setDiasPeticion","setRefreshAUX","sortable","filterable","disableColumnMenu","refreshFunc","e","SolicitudId","id","empeladoNombre","empleadoSolicitanteNombre","tipoPeticionEspecial","diastotales","diasTotales","Card","marginTop","overflow","style","ModalPeticionesEspeciales","NombreEmpleado","abrirModal","metodoCerrar"],"sourceRoot":""}